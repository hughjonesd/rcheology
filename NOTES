NOTES TO SELF

To list containers:

docker container ls -a

To get rid of all stopped containers:

docker container prune

To login to a built container:

docker exec -it <container> /bin/bash

UPDATE PROCEDURE
  # start docker running
  ./control --no-cache build bionic
  # maybe "docker container rm bionic"
  # you can use a comma-separated list of versions if you want:
  ./control --versions x.y.z run bionic
  # gather will collect data from all R versions run in a given container:
  ./control gather bionic
  # check docker-data/stdout-R-x.y.z and pkg_data-R-x.y.z.csv. E.g.:
  wc -l docker-data/pkg*
  ./control write
   Rscript -e 'source("Rversions.R")'
   # rebuild package
   # check new data, e.g.
   Rscript -e 'library(rcheology); print(table(rcheology$Rversion))'
   # update version number in DESCRIPTION
   # update NEWS.md
   rmarkdown::render("README.Rmd")
   # push to github
   source("make-app-data.R")
   # run app locally, make sure it looks OK
   # publish to shinyapps.io
   
   # check it's passed travis and appveyor
   # do some or all of:
   devtools::check_win_devel()
   devtools::check_win_release()
   rhc <- rhub::check_for_cran()
   rdc <- revdepcheck::revdep_check()

   # update cran-comments.md appropriately
   devtools::release()
   
   # when it's accepted, tag release
   git tag vX.Y.Z.0
   git push --tags
   # reset revdepcheck
   revdepcheck::revdep_reset()
