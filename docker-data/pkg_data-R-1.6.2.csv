"name","type","class","exported","generic","args","package","priority","Rversion"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","KernSmooth","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","KernSmooth","recommended","1.6.2"
"bkde","closure","function","TRUE","FALSE","(x, kernel = ""normal"", canonical = FALSE, bandwidth,     gridsize = 401, range.x, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"bkde2D","closure","function","TRUE","FALSE","(x, bandwidth, gridsize = c(51, 51), range.x, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"bkfe","closure","function","TRUE","FALSE","(x, drv, bandwidth, gridsize = 401, range.x, binned = FALSE,     truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"blkest","closure","function","TRUE","FALSE","(x, y, Nval, q) ","KernSmooth","recommended","1.6.2"
"cpblock","closure","function","TRUE","FALSE","(X, Y, Nmax, q) ","KernSmooth","recommended","1.6.2"
"dpih","closure","function","TRUE","FALSE","(x, scalest = ""minim"", level = 2, gridsize = 401, range.x = range(x),     truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"dpik","closure","function","TRUE","FALSE","(x, scalest = ""minim"", level = 2, kernel = ""normal"",     canonical = FALSE, gridsize = 401, range.x = range(x), truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"dpill","closure","function","TRUE","FALSE","(x, y, blockmax = 5, divisor = 20, trim = 0.01, proptrun = 0.05,     gridsize = 401, range.x = range(x), truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"linbin","closure","function","TRUE","FALSE","(X, gpoints, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"linbin2D","closure","function","TRUE","FALSE","(X, gpoints1, gpoints2) ","KernSmooth","recommended","1.6.2"
"locpoly","closure","function","TRUE","FALSE","(x, y, drv = 0, degree, kernel = ""normal"", bandwidth,     gridsize = 401, bwdisc = 25, range.x, binned = FALSE, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"rlbin","closure","function","TRUE","FALSE","(X, Y, gpoints, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"sdiag","closure","function","TRUE","FALSE","(x, drv = 0, degree = 1, kernel = ""normal"", bandwidth,     gridsize = 401, bwdisc = 25, range.x, binned = FALSE, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
"sstdiag","closure","function","TRUE","FALSE","(x, drv = 0, degree = 1, kernel = ""normal"", bandwidth,     gridsize = 401, bwdisc = 25, range.x, binned = FALSE, truncate = TRUE) ","KernSmooth","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","MASS","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","MASS","recommended","1.6.2"
".rat","closure","function","TRUE","FALSE","(x, cycles = 10, max.denominator = 2000) ","MASS","recommended","1.6.2"
"Math.fractions","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"Null","closure","function","TRUE","FALSE","(M) ","MASS","recommended","1.6.2"
"Ops.fractions","closure","function","TRUE","FALSE","(e1, e2) ","MASS","recommended","1.6.2"
"Shepard","closure","function","TRUE","FALSE","(d, x) ","MASS","recommended","1.6.2"
"Summary.fractions","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"[.fractions","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"[<-.fractions","closure","function","TRUE","FALSE","(x, ..., value) ","MASS","recommended","1.6.2"
"addterm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"addterm.default","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq""),     k = 2, sorted = FALSE, trace = FALSE, ...) ","MASS","recommended","1.6.2"
"addterm.glm","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), k = 2, sorted = FALSE, trace = FALSE, ...) ","MASS","recommended","1.6.2"
"addterm.lm","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), k = 2, sorted = FALSE, ...) ","MASS","recommended","1.6.2"
"addterm.mlm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"addterm.negbin","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"addterm.survreg","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"anova.loglm","closure","function","TRUE","FALSE","(object, ..., test = c(""Chisq"", ""chisq"", ""LR"")) ","MASS","recommended","1.6.2"
"anova.negbin","closure","function","TRUE","FALSE","(object, ..., test = ""Chisq"") ","MASS","recommended","1.6.2"
"area","closure","function","TRUE","FALSE","(f, a, b, ..., fa = f(a, ...), fb = f(b, ...), limit = 10,     eps = 1e-05) ","MASS","recommended","1.6.2"
"as.character.fractions","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"as.fractions","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"bandwidth.nrd","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"bcv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","MASS","recommended","1.6.2"
"biplot.bdr","closure","function","TRUE","FALSE","(obs, bivars, col, cex = rep(par(""cex""), 2), olab = NULL,     vlab = NULL, xlim = NULL, ylim = NULL, ...) ","MASS","recommended","1.6.2"
"biplot.correspondence","closure","function","TRUE","FALSE","(obj, type = c(""symmetric"", ""rows"", ""columns""), ...) ","MASS","recommended","1.6.2"
"boxcox","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"boxcox.default","closure","function","TRUE","FALSE","(object, lambda = seq(-2, 2, 1/10), plotit = length(dev.list()) >     0, interp = (plotit && (m < 100)), eps = 1/50, xlab = ""lambda"",     ylab = ""log-Likelihood"", ...) ","MASS","recommended","1.6.2"
"boxcox.formula","closure","function","TRUE","FALSE","(object, lambda = seq(-2, 2, 1/10), plotit = length(dev.list()) >     0, interp = (plotit && (m < 100)), eps = 1/50, xlab = ""lambda"",     ylab = ""log-Likelihood"", ...) ","MASS","recommended","1.6.2"
"boxcox.lm","closure","function","TRUE","FALSE","(object, lambda = seq(-2, 2, 1/10), plotit = length(dev.list()) >     0, interp = (plotit && (m < 100)), eps = 1/50, xlab = ""lambda"",     ylab = ""log-Likelihood"", ...) ","MASS","recommended","1.6.2"
"coef.fitdistr","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"coef.lda","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"coef.loglm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"con2tr","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","1.6.2"
"confint","closure","function","TRUE","FALSE","(object, parm, level = 0.95, ...) ","MASS","recommended","1.6.2"
"confint.glm","closure","function","TRUE","FALSE","(object, parm, level = 0.95, trace = FALSE, ...) ","MASS","recommended","1.6.2"
"confint.lm","closure","function","TRUE","FALSE","(object, parm, level = 0.95, ...) ","MASS","recommended","1.6.2"
"confint.nls","closure","function","TRUE","FALSE","(object, parm = seq(along = pnames), level = 0.95, ...) ","MASS","recommended","1.6.2"
"confint.profile.glm","closure","function","TRUE","FALSE","(object, parm = seq(along = pnames), level = 0.95, ...) ","MASS","recommended","1.6.2"
"confint.profile.nls","closure","function","TRUE","FALSE","(object, parm = seq(along = pnames), level = 0.95, ...) ","MASS","recommended","1.6.2"
"contr.sdif","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","MASS","recommended","1.6.2"
"corresp","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"corresp.crosstabs","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"corresp.data.frame","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"corresp.default","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"corresp.factor","closure","function","TRUE","FALSE","(x, y, ...) ","MASS","recommended","1.6.2"
"corresp.formula","closure","function","TRUE","FALSE","(formula, data = parent.frame(), ...) ","MASS","recommended","1.6.2"
"corresp.matrix","closure","function","TRUE","FALSE","(x, nf = 1, ...) ","MASS","recommended","1.6.2"
"cov.trob","closure","function","TRUE","FALSE","(x, wt = rep(1, n), cor = FALSE, center = TRUE, nu = 5,     maxit = 25, tol = 0.01) ","MASS","recommended","1.6.2"
"denumerate","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"denumerate.formula","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"dose.p","closure","function","TRUE","FALSE","(obj, cf = 1:2, p = 0.5) ","MASS","recommended","1.6.2"
"dropterm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"dropterm.default","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq""),     k = 2, sorted = FALSE, trace = FALSE, ...) ","MASS","recommended","1.6.2"
"dropterm.glm","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), k = 2, sorted = FALSE, trace = FALSE, ...) ","MASS","recommended","1.6.2"
"dropterm.lm","closure","function","TRUE","FALSE","(object, scope = drop.scope(object), scale = 0, test = c(""none"",     ""Chisq"", ""F""), k = 2, sorted = FALSE, ...) ","MASS","recommended","1.6.2"
"dropterm.mlm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"dropterm.negbin","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"dropterm.survreg","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"enlist","closure","function","TRUE","FALSE","(vec) ","MASS","recommended","1.6.2"
"eqscplot","closure","function","TRUE","FALSE","(x, y, ratio = 1, tol = 0.04, uin, xlim = range(x[is.finite(x)]),     ylim = range(y[is.finite(y)]), xlab, ylab, ...) ","MASS","recommended","1.6.2"
"extractAIC.gls","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","MASS","recommended","1.6.2"
"extractAIC.lme","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","MASS","recommended","1.6.2"
"extractAIC.loglm","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","MASS","recommended","1.6.2"
"extractAIC.polr","closure","function","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","MASS","recommended","1.6.2"
"family.negbin","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"fbeta","closure","function","TRUE","FALSE","(x, alpha, beta) ","MASS","recommended","1.6.2"
"fitdistr","closure","function","TRUE","FALSE","(x, densfun, start, ...) ","MASS","recommended","1.6.2"
"fitted.loglm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"fractions","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"frequency.polygon","closure","function","TRUE","FALSE","(x, nclass = nclass.freq(x), xlab = """", ylab = """", ...) ","MASS","recommended","1.6.2"
"gamma.dispersion","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"gamma.shape","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"gamma.shape.glm","closure","function","TRUE","FALSE","(object, it.lim = 10, eps.max = .Machine$double.eps^0.25,     verbose = FALSE, ...) ","MASS","recommended","1.6.2"
"ginv","closure","function","TRUE","FALSE","(X, tol = sqrt(.Machine$double.eps)) ","MASS","recommended","1.6.2"
"glm.convert","closure","function","TRUE","FALSE","(object) ","MASS","recommended","1.6.2"
"glm.nb","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, start = NULL, etastart = NULL, control = glm.control(...),     method = ""glm.fit"", model = TRUE, x = FALSE, y = TRUE, contrasts = NULL,     ..., init.theta, link = log) ","MASS","recommended","1.6.2"
"glmmPQL","closure","function","TRUE","FALSE","(fixed, random, family, data, correlation, weights,     control, niter = 10, verbose = TRUE, ...) ","MASS","recommended","1.6.2"
"hist.FD","closure","function","TRUE","FALSE","(x, prob = TRUE, xlab = deparse(substitute(x)), ...) ","MASS","recommended","1.6.2"
"hist.scott","closure","function","TRUE","FALSE","(x, prob = TRUE, xlab = deparse(substitute(x)), ...) ","MASS","recommended","1.6.2"
"huber","closure","function","TRUE","FALSE","(y, k = 1.5, tol = 1e-06) ","MASS","recommended","1.6.2"
"hubers","closure","function","TRUE","FALSE","(y, k = 1.5, mu, s, initmu = median(y), tol = 1e-06) ","MASS","recommended","1.6.2"
"is.fractions","closure","function","TRUE","FALSE","(f) ","MASS","recommended","1.6.2"
"isoMDS","closure","function","TRUE","FALSE","(d, y = cmdscale(d, k), k = 2, maxit = 50, trace = TRUE,     tol = 0.001) ","MASS","recommended","1.6.2"
"kde2d","closure","function","TRUE","FALSE","(x, y, h, n = 25, lims = c(range(x), range(y))) ","MASS","recommended","1.6.2"
"lda","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"lda.data.frame","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"lda.default","closure","function","TRUE","FALSE","(x, grouping, prior = proportions, tol = 1e-04, method = c(""moment"",     ""mle"", ""mve"", ""t""), CV = FALSE, nu = 5, ...) ","MASS","recommended","1.6.2"
"lda.formula","closure","function","TRUE","FALSE","(formula, data = NULL, ..., subset, na.action = na.fail) ","MASS","recommended","1.6.2"
"lda.matrix","closure","function","TRUE","FALSE","(x, grouping, ..., subset, na.action = na.fail) ","MASS","recommended","1.6.2"
"ldahist","closure","function","TRUE","FALSE","(data, g, nbins = 25, h, x0 = -h/1000, breaks, xlim = range(breaks),     ymax = 0, width, type = c(""histogram"", ""density"", ""both""),     sep = (type != ""density""), col = 5, xlab = deparse(substitute(data)),     bty = ""n"", ...) ","MASS","recommended","1.6.2"
"lm.gls","closure","function","TRUE","FALSE","(formula, data, W, subset, na.action, inverse = FALSE,     method = ""qr"", model = FALSE, x = FALSE, y = FALSE, contrasts = NULL,     ...) ","MASS","recommended","1.6.2"
"lm.ridge","closure","function","TRUE","FALSE","(formula, data, subset, na.action, lambda = 0, model = FALSE,     x = FALSE, y = FALSE, contrasts = NULL, ...) ","MASS","recommended","1.6.2"
"lmwork","closure","function","TRUE","FALSE","(object) ","MASS","recommended","1.6.2"
"loglm","closure","function","TRUE","FALSE","(formula, data = parent.frame(), subset, na.action,     ...) ","MASS","recommended","1.6.2"
"loglm1","closure","function","TRUE","FALSE","(formula, data, ...) ","MASS","recommended","1.6.2"
"loglm1.data.frame","closure","function","TRUE","FALSE","(formula, data, ...) ","MASS","recommended","1.6.2"
"loglm1.default","closure","function","TRUE","FALSE","(formula, data, start = rep(1, length(data)), fitted = FALSE,     keep.frequencies = fitted, param = TRUE, eps = 1/10, iter = 40,     print = FALSE, ...) ","MASS","recommended","1.6.2"
"loglm1.xtabs","closure","function","TRUE","FALSE","(formula, data, ...) ","MASS","recommended","1.6.2"
"logtrans","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"logtrans.default","closure","function","TRUE","FALSE","(object, ..., alpha = seq(0.5, 6, by = 0.25) - min(y),     plotit = length(dev.list()) > 0, interp = (plotit && (m <         100)), xlab = ""alpha"", ylab = ""log Likelihood"") ","MASS","recommended","1.6.2"
"logtrans.formula","closure","function","TRUE","FALSE","(object, data = NULL, ...) ","MASS","recommended","1.6.2"
"logtrans.lm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"mca","closure","function","TRUE","FALSE","(df, nf = 2, abbrev = FALSE) ","MASS","recommended","1.6.2"
"model.frame.lda","closure","function","TRUE","FALSE","(formula, data = NULL, na.action = NULL, ...) ","MASS","recommended","1.6.2"
"model.frame.polr","closure","function","TRUE","FALSE","(formula, data, na.action, ...) ","MASS","recommended","1.6.2"
"model.frame.qda","closure","function","TRUE","FALSE","(formula, data = NULL, na.action = NULL, ...) ","MASS","recommended","1.6.2"
"mvrnorm","closure","function","TRUE","FALSE","(n = 1, mu, Sigma, tol = 1e-06, empirical = FALSE) ","MASS","recommended","1.6.2"
"nclass.freq","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"neg.bin","closure","function","TRUE","FALSE","(theta = stop(""theta must be given"")) ","MASS","recommended","1.6.2"
"negative.binomial","closure","function","TRUE","FALSE","(theta = stop(""theta must be specified""), link = ""log"") ","MASS","recommended","1.6.2"
"negexp.SSival","closure","function","TRUE","FALSE","(mCall, data, LHS) ","MASS","recommended","1.6.2"
"pairs.lda","closure","function","TRUE","FALSE","(x, labels = colnames(x), panel = panel.lda, dimen,     abbrev = FALSE, ..., cex = 0.7, type = c(""std"", ""trellis"")) ","MASS","recommended","1.6.2"
"pairs.profile","closure","function","TRUE","FALSE","(x, colours = 2:3, ...) ","MASS","recommended","1.6.2"
"parcoord","closure","function","TRUE","FALSE","(x, col = 1, lty = 1, ...) ","MASS","recommended","1.6.2"
"plot.correspondence","closure","function","TRUE","FALSE","(x, scale = 1, ...) ","MASS","recommended","1.6.2"
"plot.lda","closure","function","TRUE","FALSE","(x, panel = panel.lda, ..., cex = 0.7, dimen, abbrev = FALSE,     xlab = ""LD1"", ylab = ""LD2"") ","MASS","recommended","1.6.2"
"plot.mca","closure","function","TRUE","FALSE","(x, rows = TRUE, col, cex = par(""cex""), ...) ","MASS","recommended","1.6.2"
"plot.profile","closure","function","TRUE","FALSE","(x, nseg, ...) ","MASS","recommended","1.6.2"
"plot.ridgelm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"polr","closure","function","TRUE","FALSE","(formula, data = NULL, weights, start, ..., subset,     na.action = na.fail, contrasts = NULL, Hess = FALSE) ","MASS","recommended","1.6.2"
"predict.lda","closure","function","TRUE","FALSE","(object, newdata, prior = object$prior, dimen, method = c(""plug-in"",     ""predictive"", ""debiased""), ...) ","MASS","recommended","1.6.2"
"predict.mca","closure","function","TRUE","FALSE","(object, newdata, type = c(""row"", ""factor""), ...) ","MASS","recommended","1.6.2"
"predict.polr","closure","function","TRUE","FALSE","(object, newdata, type = c(""class"", ""probs""), ...) ","MASS","recommended","1.6.2"
"predict.qda","closure","function","TRUE","FALSE","(object, newdata, prior = object$prior, method = c(""plug-in"",     ""predictive"", ""debiased"", ""looCV""), ...) ","MASS","recommended","1.6.2"
"print.Anova","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.abbrev","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.anova.loglm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.correspondence","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.fitdistr","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","MASS","recommended","1.6.2"
"print.fractions","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.gamma.shape","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.glm.dose","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.lda","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.loglm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.mca","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.polr","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.qda","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.ridgelm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.rlm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.rms.curv","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.summary.loglm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.summary.negbin","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"print.summary.polr","closure","function","TRUE","FALSE","(x, digits = x$digits, ...) ","MASS","recommended","1.6.2"
"print.summary.rlm","closure","function","TRUE","FALSE","(x, digits = max(3, .Options$digits - 3), ...) ","MASS","recommended","1.6.2"
"profile.glm","closure","function","TRUE","FALSE","(fitted, which = 1:p, alpha = 0.01, maxsteps = 10, del = zmax/5,     trace = FALSE, ...) ","MASS","recommended","1.6.2"
"psi.bisquare","closure","function","TRUE","FALSE","(u, c = 4.685, deriv = 0) ","MASS","recommended","1.6.2"
"psi.hampel","closure","function","TRUE","FALSE","(u, a = 2, b = 4, c = 8, deriv = 0) ","MASS","recommended","1.6.2"
"psi.huber","closure","function","TRUE","FALSE","(u, k = 1.345, deriv = 0) ","MASS","recommended","1.6.2"
"qda","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"qda.data.frame","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"qda.default","closure","function","TRUE","FALSE","(x, grouping, prior = proportions, method = c(""moment"",     ""mle"", ""mve"", ""t""), CV = FALSE, nu = 5, ...) ","MASS","recommended","1.6.2"
"qda.formula","closure","function","TRUE","FALSE","(formula, data = NULL, ..., subset, na.action = na.fail) ","MASS","recommended","1.6.2"
"qda.matrix","closure","function","TRUE","FALSE","(x, grouping, ..., subset, na.action = na.fail) ","MASS","recommended","1.6.2"
"rational","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"renumerate","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"renumerate.formula","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"residuals.loglm","closure","function","TRUE","FALSE","(object, type = c(""deviance"", ""pearson"", ""response""),     ...) ","MASS","recommended","1.6.2"
"rlm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"rlm.default","closure","function","TRUE","FALSE","(x, y, weights, ..., w = rep(1, nrow(x)), init = ""ls"",     psi = psi.huber, scale.est = c(""MAD"", ""Huber"", ""proposal 2""),     k2 = 1.345, method = c(""M"", ""MM""), wt.method = c(""case"",         ""inv.var""), maxit = 20, acc = 1e-04, test.vec = ""resid"") ","MASS","recommended","1.6.2"
"rlm.formula","closure","function","TRUE","FALSE","(x, data = NULL, weights, ..., subset, na.action = na.fail,     method = c(""M"", ""MM"", ""model.frame""), wt.method = c(""case"",         ""inv.var""), model = TRUE, x.ret = TRUE, y.ret = FALSE,     contrasts = NULL) ","MASS","recommended","1.6.2"
"rms.curv","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","1.6.2"
"rnegbin","closure","function","TRUE","FALSE","(n, mu = n, theta = stop(""theta must be given"")) ","MASS","recommended","1.6.2"
"sammon","closure","function","TRUE","FALSE","(d, y = cmdscale(d, k), k = 2, niter = 100, trace = TRUE,     magic = 0.2, tol = 1e-04) ","MASS","recommended","1.6.2"
"select","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","1.6.2"
"select.ridgelm","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","1.6.2"
"stdres","closure","function","TRUE","FALSE","(object) ","MASS","recommended","1.6.2"
"stepAIC","closure","function","TRUE","FALSE","(object, scope, scale = 0, direction = c(""both"", ""backward"",     ""forward""), trace = 1, keep = NULL, steps = 1000, use.start = FALSE,     k = 2, ...) ","MASS","recommended","1.6.2"
"studres","closure","function","TRUE","FALSE","(object) ","MASS","recommended","1.6.2"
"summary.loglm","closure","function","TRUE","FALSE","(object, fitted = FALSE, ...) ","MASS","recommended","1.6.2"
"summary.negbin","closure","function","TRUE","FALSE","(object, dispersion = 1, correlation = TRUE, ...) ","MASS","recommended","1.6.2"
"summary.polr","closure","function","TRUE","FALSE","(object, digits = max(3, .Options$digits - 3), correlation = FALSE,     ...) ","MASS","recommended","1.6.2"
"summary.rlm","closure","function","TRUE","FALSE","(object, method = c(""XtX"", ""XtWX""), correlation = TRUE,     ...) ","MASS","recommended","1.6.2"
"t.fractions","closure","function","TRUE","FALSE","(x) ","MASS","recommended","1.6.2"
"terms.gls","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"terms.lme","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","1.6.2"
"theta.md","closure","function","TRUE","FALSE","(y, u, dfr, limit = 20, eps = .Machine$double.eps^0.25) ","MASS","recommended","1.6.2"
"theta.ml","closure","function","TRUE","FALSE","(y, mu, n = length(y), limit = 10, eps = .Machine$double.eps^0.25,     trace = FALSE) ","MASS","recommended","1.6.2"
"theta.mm","closure","function","TRUE","FALSE","(y, u, dfr, limit = 10, eps = .Machine$double.eps^0.25) ","MASS","recommended","1.6.2"
"truehist","closure","function","TRUE","FALSE","(data, nbins = ""Scott"", h, x0 = -h/1000, breaks, prob = TRUE,     xlim = range(breaks), ymax = max(est), col = 5, xlab = deparse(substitute(data)),     bty = ""n"", ...) ","MASS","recommended","1.6.2"
"ucv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","MASS","recommended","1.6.2"
"update.loglm","closure","function","TRUE","FALSE","(object, formula, ...) ","MASS","recommended","1.6.2"
"vcov.polr","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","1.6.2"
"width.SJ","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax, method = c(""ste"",     ""dpi"")) ","MASS","recommended","1.6.2"
"write.matrix","closure","function","TRUE","FALSE","(x, file = """", sep = "" "", blocksize) ","MASS","recommended","1.6.2"
"!","builtin","function","TRUE","NA","","base","base","1.6.2"
"!=","builtin","function","TRUE","NA","","base","base","1.6.2"
"$","special","function","TRUE","NA","","base","base","1.6.2"
"$<-","special","function","TRUE","NA","","base","base","1.6.2"
"%%","builtin","function","TRUE","NA","","base","base","1.6.2"
"%*%","builtin","function","TRUE","NA","","base","base","1.6.2"
"%/%","builtin","function","TRUE","NA","","base","base","1.6.2"
"%in%","closure","function","TRUE","FALSE","(x, table) ","base","base","1.6.2"
"%o%","closure","function","TRUE","FALSE","(X, Y, FUN = ""*"", ...) ","base","base","1.6.2"
"%x%","closure","function","TRUE","FALSE","(X, Y, FUN = ""*"", make.dimnames = FALSE, ...) ","base","base","1.6.2"
"&","builtin","function","TRUE","NA","","base","base","1.6.2"
"&&","special","function","TRUE","NA","","base","base","1.6.2"
"(","builtin","function","TRUE","NA","","base","base","1.6.2"
"*","builtin","function","TRUE","NA","","base","base","1.6.2"
"+","builtin","function","TRUE","NA","","base","base","1.6.2"
"+.POSIXt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"-","builtin","function","TRUE","NA","","base","base","1.6.2"
"-.POSIXct","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"-.POSIXlt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"-.POSIXt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
".Alias","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
".AutoloadEnv","environment","environment","TRUE","FALSE","NA","base","base","1.6.2"
".BaseNamespaceEnv","environment","environment","TRUE","FALSE","NA","base","base","1.6.2"
".C","builtin","function","TRUE","NA","","base","base","1.6.2"
".Call","builtin","function","TRUE","NA","","base","base","1.6.2"
".Call.graphics","builtin","function","TRUE","NA","","base","base","1.6.2"
".Defunct","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
".Deprecated","closure","function","TRUE","FALSE","(new) ","base","base","1.6.2"
".Device","character","character","TRUE","FALSE","NA","base","base","1.6.2"
".Devices","pairlist","pairlist","TRUE","FALSE","NA","base","base","1.6.2"
".External","builtin","function","TRUE","NA","","base","base","1.6.2"
".External.graphics","builtin","function","TRUE","NA","","base","base","1.6.2"
".First","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
".Fortran","builtin","function","TRUE","NA","","base","base","1.6.2"
".GlobalEnv","environment","environment","TRUE","FALSE","NA","base","base","1.6.2"
".Internal","special","function","TRUE","NA","","base","base","1.6.2"
".Last.value","character","character","TRUE","FALSE","NA","base","base","1.6.2"
".Library","character","character","TRUE","FALSE","NA","base","base","1.6.2"
".Machine","list","list","TRUE","FALSE","NA","base","base","1.6.2"
".NotYetImplemented","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
".NotYetUsed","closure","function","TRUE","FALSE","(arg, error = TRUE) ","base","base","1.6.2"
".Options","pairlist","pairlist","TRUE","FALSE","NA","base","base","1.6.2"
".Pars","character","character","TRUE","FALSE","NA","base","base","1.6.2"
".Platform","list","list","TRUE","FALSE","NA","base","base","1.6.2"
".PostScript.Options","list","list","TRUE","FALSE","NA","base","base","1.6.2"
".Primitive","builtin","function","TRUE","NA","","base","base","1.6.2"
".Script","closure","function","TRUE","FALSE","(interpreter, script, args, ...) ","base","base","1.6.2"
".cbind.ts","closure","function","TRUE","FALSE","(sers, nmsers, dframe = FALSE, union = TRUE) ","base","base","1.6.2"
".dynLibs","closure","function","TRUE","FALSE","(new) ","base","base","1.6.2"
".find.package","closure","function","TRUE","FALSE","(package, lib.loc = NULL, quiet = FALSE, verbose = getOption(""verbose"")) ","base","base","1.6.2"
".isMethodsDispatchOn","closure","function","TRUE","FALSE","(onOff = NULL) ","base","base","1.6.2"
".leap.seconds","double","POSIXt/POSIXct","TRUE","FALSE","NA","base","base","1.6.2"
".libPaths","closure","function","TRUE","FALSE","(new) ","base","base","1.6.2"
".packages","closure","function","TRUE","FALSE","(all.available = FALSE, lib.loc = NULL) ","base","base","1.6.2"
".path.package","closure","function","TRUE","FALSE","(package = .packages(), quiet = FALSE) ","base","base","1.6.2"
".primTrace","builtin","function","TRUE","NA","","base","base","1.6.2"
".primUntrace","builtin","function","TRUE","NA","","base","base","1.6.2"
".ps.prolog","character","character","TRUE","FALSE","NA","base","base","1.6.2"
".subset","builtin","function","TRUE","NA","","base","base","1.6.2"
".subset2","builtin","function","TRUE","NA","","base","base","1.6.2"
"/","builtin","function","TRUE","NA","","base","base","1.6.2"
":","builtin","function","TRUE","NA","","base","base","1.6.2"
"::","closure","function","TRUE","FALSE","(pkg, name) ","base","base","1.6.2"
"<","builtin","function","TRUE","NA","","base","base","1.6.2"
"<-","special","function","TRUE","NA","","base","base","1.6.2"
"<<-","special","function","TRUE","NA","","base","base","1.6.2"
"<=","builtin","function","TRUE","NA","","base","base","1.6.2"
"=","special","function","TRUE","NA","","base","base","1.6.2"
"==","builtin","function","TRUE","NA","","base","base","1.6.2"
">","builtin","function","TRUE","NA","","base","base","1.6.2"
">=","builtin","function","TRUE","NA","","base","base","1.6.2"
"?","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"@","special","function","TRUE","NA","","base","base","1.6.2"
"@<-","special","function","TRUE","NA","","base","base","1.6.2"
"AIC","closure","function","TRUE","FALSE","(object, ..., k = 2) ","base","base","1.6.2"
"AIC.default","closure","function","TRUE","FALSE","(object, ..., k = 2) ","base","base","1.6.2"
"AIC.lm","closure","function","TRUE","FALSE","(object, ..., k = 2) ","base","base","1.6.2"
"AIC.logLik","closure","function","TRUE","FALSE","(object, ..., k = 2) ","base","base","1.6.2"
"Arg","builtin","function","TRUE","NA","","base","base","1.6.2"
"C","closure","function","TRUE","FALSE","(object, contr, how.many, ...) ","base","base","1.6.2"
"CRAN.packages","closure","function","TRUE","FALSE","(CRAN = getOption(""CRAN""), method, contriburl = contrib.url(CRAN)) ","base","base","1.6.2"
"Conj","builtin","function","TRUE","NA","","base","base","1.6.2"
"D","closure","function","TRUE","FALSE","(expr, name) ","base","base","1.6.2"
"F","logical","logical","TRUE","FALSE","NA","base","base","1.6.2"
"GNOME","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","base","1.6.2"
"GTK","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","base","1.6.2"
"Gamma","closure","function","TRUE","FALSE","(link = ""inverse"") ","base","base","1.6.2"
"Hershey","list","list","TRUE","FALSE","NA","base","base","1.6.2"
"I","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"IQR","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","base","base","1.6.2"
"ISOLatin1","integer","integer","TRUE","FALSE","NA","base","base","1.6.2"
"ISOdate","closure","function","TRUE","FALSE","(year, month, day, hour = 12, min = 0, sec = 0, tz = ""GMT"") ","base","base","1.6.2"
"ISOdatetime","closure","function","TRUE","FALSE","(year, month, day, hour, min, sec, tz = """") ","base","base","1.6.2"
"Im","builtin","function","TRUE","NA","","base","base","1.6.2"
"LETTERS","character","character","TRUE","FALSE","NA","base","base","1.6.2"
"La.chol","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"La.chol2inv","closure","function","TRUE","FALSE","(x, size = ncol(x)) ","base","base","1.6.2"
"La.eigen","closure","function","TRUE","FALSE","(x, symmetric, only.values = FALSE, method = c(""dsyevr"",     ""dsyev"")) ","base","base","1.6.2"
"La.svd","closure","function","TRUE","FALSE","(x, nu = min(n, p), nv = min(n, p), method = c(""dgesdd"",     ""dgesvd"")) ","base","base","1.6.2"
"MacRoman","integer","integer","TRUE","FALSE","NA","base","base","1.6.2"
"Machine","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"Math.POSIXt","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Math.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Math.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Mod","builtin","function","TRUE","NA","","base","base","1.6.2"
"NCOL","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"NROW","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"NextMethod","closure","function","TRUE","FALSE","(generic = NULL, object = NULL, ...) ","base","base","1.6.2"
"Ops.POSIXct","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"Ops.POSIXlt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"Ops.POSIXt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"Ops.data.frame","closure","function","TRUE","FALSE","(e1, e2 = NULL) ","base","base","1.6.2"
"Ops.factor","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"Ops.ordered","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"Ops.ts","closure","function","TRUE","FALSE","(e1, e2) ","base","base","1.6.2"
"Platform","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"R.Version","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"R.home","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"R.version","list","simple.list","TRUE","FALSE","NA","base","base","1.6.2"
"R.version.string","character","character","TRUE","FALSE","NA","base","base","1.6.2"
"RNGkind","closure","function","TRUE","FALSE","(kind = NULL, normal.kind = NULL) ","base","base","1.6.2"
"Re","builtin","function","TRUE","NA","","base","base","1.6.2"
"Recall","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"Rprof","closure","function","TRUE","FALSE","(filename = ""Rprof.out"", append = FALSE, interval = 0.02) ","base","base","1.6.2"
"Summary.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Summary.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Summary.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Summary.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"Sys.getenv","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"Sys.getlocale","closure","function","TRUE","FALSE","(category = ""LC_ALL"") ","base","base","1.6.2"
"Sys.info","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"Sys.localeconv","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"Sys.putenv","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"Sys.setlocale","closure","function","TRUE","FALSE","(category = ""LC_ALL"", locale = """") ","base","base","1.6.2"
"Sys.sleep","closure","function","TRUE","FALSE","(time) ","base","base","1.6.2"
"Sys.time","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"Sys.timezone","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"T","logical","logical","TRUE","FALSE","NA","base","base","1.6.2"
"TukeyHSD","closure","function","TRUE","FALSE","(x, which = seq(along = tabs), ordered = FALSE, conf.level = 0.95,     ...) ","base","base","1.6.2"
"TukeyHSD.aov","closure","function","TRUE","FALSE","(x, which = seq(along = tabs), ordered = FALSE, conf.level = 0.95,     ...) ","base","base","1.6.2"
"UseMethod","special","function","TRUE","NA","","base","base","1.6.2"
"Version","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"WinAnsi","integer","integer","TRUE","FALSE","NA","base","base","1.6.2"
"X11","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12,     gamma = 1, colortype = getOption(""X11colortype""), maxcubesize = 256,     canvas = ""white"") ","base","base","1.6.2"
"[","special","function","TRUE","NA","","base","base","1.6.2"
"[.AsIs","closure","function","TRUE","FALSE","(x, i, ...) ","base","base","1.6.2"
"[.POSIXct","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","1.6.2"
"[.POSIXlt","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","1.6.2"
"[.data.frame","closure","function","TRUE","FALSE","(x, i, j, drop = if (missing(i)) TRUE else length(cols) ==     1) ","base","base","1.6.2"
"[.factor","closure","function","TRUE","FALSE","(x, i, drop = FALSE) ","base","base","1.6.2"
"[.formula","closure","function","TRUE","FALSE","(x, i) ","base","base","1.6.2"
"[.noquote","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"[.ts","closure","function","TRUE","FALSE","(x, i, j, drop = TRUE) ","base","base","1.6.2"
"[<-","special","function","TRUE","NA","","base","base","1.6.2"
"[<-.POSIXct","closure","function","TRUE","FALSE","(x, ..., value) ","base","base","1.6.2"
"[<-.POSIXlt","closure","function","TRUE","FALSE","(x, i, value) ","base","base","1.6.2"
"[<-.data.frame","closure","function","TRUE","FALSE","(x, i, j, value) ","base","base","1.6.2"
"[<-.factor","closure","function","TRUE","FALSE","(x, i, value) ","base","base","1.6.2"
"[[","special","function","TRUE","NA","","base","base","1.6.2"
"[[.POSIXct","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","1.6.2"
"[[.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"[[<-","special","function","TRUE","NA","","base","base","1.6.2"
"[[<-.data.frame","closure","function","TRUE","FALSE","(x, i, j, value) ","base","base","1.6.2"
"^","builtin","function","TRUE","NA","","base","base","1.6.2"
"abbreviate","closure","function","TRUE","FALSE","(names.arg, minlength = 4, use.classes = TRUE, dot = FALSE) ","base","base","1.6.2"
"abline","closure","function","TRUE","FALSE","(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,     coef = NULL, untf = FALSE, col = par(""col""), lty = par(""lty""),     lwd = NULL, ...) ","base","base","1.6.2"
"abs","builtin","function","TRUE","NA","","base","base","1.6.2"
"acos","builtin","function","TRUE","NA","","base","base","1.6.2"
"acosh","builtin","function","TRUE","NA","","base","base","1.6.2"
"add.scope","closure","function","TRUE","FALSE","(terms1, terms2) ","base","base","1.6.2"
"add1","closure","function","TRUE","FALSE","(object, scope, ...) ","base","base","1.6.2"
"add1.default","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq""),     k = 2, trace = FALSE, ...) ","base","base","1.6.2"
"add1.glm","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), x = NULL, k = 2, ...) ","base","base","1.6.2"
"add1.lm","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), x = NULL, k = 2, ...) ","base","base","1.6.2"
"add1.mlm","closure","function","TRUE","FALSE","(object, scope, ...) ","base","base","1.6.2"
"addTaskCallback","closure","function","TRUE","FALSE","(f, data = NULL, name = character(0)) ","base","base","1.6.2"
"aggregate","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"aggregate.data.frame","closure","function","TRUE","FALSE","(x, by, FUN, ...) ","base","base","1.6.2"
"aggregate.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"aggregate.ts","closure","function","TRUE","FALSE","(x, nfrequency = 1, FUN = sum, ndeltat = 1, ts.eps = getOption(""ts.eps""),     ...) ","base","base","1.6.2"
"agrep","closure","function","TRUE","FALSE","(pattern, x, ignore.case = FALSE, value = FALSE, max.distance = 0.1) ","base","base","1.6.2"
"alias","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"alias.formula","closure","function","TRUE","FALSE","(object, data, ...) ","base","base","1.6.2"
"alias.lm","closure","function","TRUE","FALSE","(object, complete = TRUE, partial = FALSE, partial.pattern = FALSE,     ...) ","base","base","1.6.2"
"alist","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"all","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"all.equal","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.POSIXct","closure","function","TRUE","FALSE","(target, current, ..., scale = 1) ","base","base","1.6.2"
"all.equal.character","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.default","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.factor","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.formula","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.language","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.list","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"all.equal.numeric","closure","function","TRUE","FALSE","(target, current, tolerance = .Machine$double.eps^0.5,     scale = NULL, ...) ","base","base","1.6.2"
"all.names","closure","function","TRUE","FALSE","(expr, functions = TRUE, max.names = 200, unique = FALSE) ","base","base","1.6.2"
"all.vars","closure","function","TRUE","FALSE","(expr, functions = FALSE, max.names = 200, unique = TRUE) ","base","base","1.6.2"
"anova","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"anova.glm","closure","function","TRUE","FALSE","(object, ..., dispersion = NULL, test = NULL) ","base","base","1.6.2"
"anova.glm.null","closure","function","TRUE","FALSE","(object, ..., test = NULL, na.action = na.omit) ","base","base","1.6.2"
"anova.glmlist","closure","function","TRUE","FALSE","(object, ..., dispersion = NULL, test = NULL) ","base","base","1.6.2"
"anova.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"anova.lm.null","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"anova.lmlist","closure","function","TRUE","FALSE","(object, ..., scale = 0, test = ""F"") ","base","base","1.6.2"
"anova.mlm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"anovalist.lm","closure","function","TRUE","FALSE","(object, ..., test = NULL) ","base","base","1.6.2"
"any","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"aov","closure","function","TRUE","FALSE","(formula, data = NULL, projections = FALSE, qr = TRUE,     contrasts = NULL, ...) ","base","base","1.6.2"
"aperm","closure","function","TRUE","FALSE","(a, perm, resize = TRUE) ","base","base","1.6.2"
"append","closure","function","TRUE","FALSE","(x, values, after = length(x)) ","base","base","1.6.2"
"apply","closure","function","TRUE","FALSE","(X, MARGIN, FUN, ...) ","base","base","1.6.2"
"approx","closure","function","TRUE","FALSE","(x, y = NULL, xout, method = ""linear"", n = 50, yleft,     yright, rule = 1, f = 0, ties = mean) ","base","base","1.6.2"
"approxfun","closure","function","TRUE","FALSE","(x, y = NULL, method = ""linear"", yleft, yright, rule = 1,     f = 0, ties = mean) ","base","base","1.6.2"
"apropos","closure","function","TRUE","FALSE","(what, where = FALSE, mode = ""any"") ","base","base","1.6.2"
"args","closure","function","TRUE","FALSE","(name) ","base","base","1.6.2"
"array","closure","function","TRUE","FALSE","(data = NA, dim = length(data), dimnames = NULL) ","base","base","1.6.2"
"arrows","closure","function","TRUE","FALSE","(x0, y0, x1, y1, length = 0.25, angle = 30, code = 2,     col = par(""fg""), lty = NULL, lwd = par(""lwd""), xpd = NULL) ","base","base","1.6.2"
"as.POSIXct","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","1.6.2"
"as.POSIXct.POSIXlt","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","1.6.2"
"as.POSIXct.date","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.POSIXct.dates","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.POSIXct.default","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","1.6.2"
"as.POSIXlt","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","1.6.2"
"as.array","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.call","builtin","function","TRUE","NA","","base","base","1.6.2"
"as.character","special","function","TRUE","NA","","base","base","1.6.2"
"as.character.POSIXt","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.character.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.character.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.character.octmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.complex","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.complex.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.data.frame","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.AsIs","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.POSIXct","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.POSIXlt","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.character","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.complex","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.data.frame","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.default","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.factor","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.integer","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.list","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.logLik","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.logical","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.matrix","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.model.matrix","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.numeric","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.ordered","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.table","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","1.6.2"
"as.data.frame.ts","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.data.frame.vector","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","base","1.6.2"
"as.double","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.double.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.environment","builtin","function","TRUE","NA","","base","base","1.6.2"
"as.expression","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.expression.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.factor","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.formula","closure","function","TRUE","FALSE","(object, env = parent.frame()) ","base","base","1.6.2"
"as.function","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.function.default","closure","function","TRUE","FALSE","(x, envir = parent.frame(), ...) ","base","base","1.6.2"
"as.integer","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.integer.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.list","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.list.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.list.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.logical","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.logical.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.matrix","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.matrix.POSIXlt","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.matrix.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.matrix.default","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.matrix.noquote","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.name","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.null","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.null.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.numeric","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.ordered","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.pairlist","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.qr","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.real","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.single","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.single.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.symbol","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.table","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.table.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.table.ftable","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"as.ts","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"as.vector","closure","function","TRUE","FALSE","(x, mode = ""any"") ","base","base","1.6.2"
"as.vector.factor","closure","function","TRUE","FALSE","(x, type = ""any"") ","base","base","1.6.2"
"asin","builtin","function","TRUE","NA","","base","base","1.6.2"
"asinh","builtin","function","TRUE","NA","","base","base","1.6.2"
"assign","closure","function","TRUE","FALSE","(x, value, pos = -1, envir = as.environment(pos), inherits = FALSE,     immediate = TRUE) ","base","base","1.6.2"
"assocplot","closure","function","TRUE","FALSE","(x, col = c(""black"", ""red""), space = 0.3, main = NULL,     xlab = NULL, ylab = NULL) ","base","base","1.6.2"
"atan","builtin","function","TRUE","NA","","base","base","1.6.2"
"atan2","closure","function","TRUE","FALSE","(y, x) ","base","base","1.6.2"
"atanh","builtin","function","TRUE","NA","","base","base","1.6.2"
"attach","closure","function","TRUE","FALSE","(what, pos = 2, name = deparse(substitute(what))) ","base","base","1.6.2"
"attr","builtin","function","TRUE","NA","","base","base","1.6.2"
"attr.all.equal","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","1.6.2"
"attr<-","special","function","TRUE","NA","","base","base","1.6.2"
"attributes","builtin","function","TRUE","NA","","base","base","1.6.2"
"attributes<-","builtin","function","TRUE","NA","","base","base","1.6.2"
"autoload","closure","function","TRUE","FALSE","(name, package, ...) ","base","base","1.6.2"
"autoloader","closure","function","TRUE","FALSE","(name, package, ...) ","base","base","1.6.2"
"ave","closure","function","TRUE","FALSE","(x, ..., FUN = mean) ","base","base","1.6.2"
"axTicks","closure","function","TRUE","FALSE","(side, axp = NULL, usr = NULL, log = NULL) ","base","base","1.6.2"
"axis","closure","function","TRUE","FALSE","(side, at = NULL, labels = TRUE, tick = TRUE, line = NA,     pos = NA, outer = FALSE, font = NA, vfont = NULL, lty = ""solid"",     lwd = 1, col = NULL, ...) ","base","base","1.6.2"
"axis.POSIXct","closure","function","TRUE","FALSE","(side, x, at, format, ...) ","base","base","1.6.2"
"backsolve","closure","function","TRUE","FALSE","(r, x, k = ncol(r), upper.tri = TRUE, transpose = FALSE) ","base","base","1.6.2"
"barplot","closure","function","TRUE","FALSE","(height, ...) ","base","base","1.6.2"
"barplot.default","closure","function","TRUE","FALSE","(height, width = 1, space = NULL, names.arg = NULL,     legend.text = NULL, beside = FALSE, horiz = FALSE, density = NULL,     angle = 45, col = heat.colors(NR), border = par(""fg""), main = NULL,     sub = NULL, xlab = NULL, ylab = NULL, xlim = NULL, ylim = NULL,     xpd = TRUE, axes = TRUE, axisnames = TRUE, cex.axis = par(""cex.axis""),     cex.names = par(""cex.axis""), inside = TRUE, plot = TRUE,     axis.lty = 0, ...) ","base","base","1.6.2"
"basename","closure","function","TRUE","FALSE","(path) ","base","base","1.6.2"
"besselI","closure","function","TRUE","FALSE","(x, nu, expon.scaled = FALSE) ","base","base","1.6.2"
"besselJ","closure","function","TRUE","FALSE","(x, nu) ","base","base","1.6.2"
"besselK","closure","function","TRUE","FALSE","(x, nu, expon.scaled = FALSE) ","base","base","1.6.2"
"besselY","closure","function","TRUE","FALSE","(x, nu) ","base","base","1.6.2"
"beta","closure","function","TRUE","FALSE","(a, b) ","base","base","1.6.2"
"bindingIsActive","closure","function","TRUE","FALSE","(sym, env) ","base","base","1.6.2"
"bindingIsLocked","closure","function","TRUE","FALSE","(sym, env) ","base","base","1.6.2"
"binomial","closure","function","TRUE","FALSE","(link = ""logit"") ","base","base","1.6.2"
"bitmap","closure","function","TRUE","FALSE","(file, type = ""png256"", height = 6, width = 6, res = 72,     pointsize, ...) ","base","base","1.6.2"
"body","closure","function","TRUE","FALSE","(fun = sys.function(sys.parent())) ","base","base","1.6.2"
"body<-","closure","function","TRUE","FALSE","(f, value, envir = parent.frame()) ","base","base","1.6.2"
"box","closure","function","TRUE","FALSE","(which = ""plot"", lty = ""solid"", ...) ","base","base","1.6.2"
"boxplot","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"boxplot.default","closure","function","TRUE","FALSE","(x, ..., range = 1.5, width = NULL, varwidth = FALSE,     notch = FALSE, outline = TRUE, names, boxwex = 0.8, plot = TRUE,     border = par(""fg""), col = NULL, log = """", pars = NULL, horizontal = FALSE,     add = FALSE, at = NULL) ","base","base","1.6.2"
"boxplot.formula","closure","function","TRUE","FALSE","(formula, data = NULL, ..., subset) ","base","base","1.6.2"
"boxplot.stats","closure","function","TRUE","FALSE","(x, coef = 1.5, do.conf = TRUE, do.out = TRUE) ","base","base","1.6.2"
"break","special","function","TRUE","NA","","base","base","1.6.2"
"browseEnv","closure","function","TRUE","FALSE","(envir = .GlobalEnv, pattern, excludepatt = ""^last\\.warning"",     html = .Platform$OS.type != ""mac"", expanded = TRUE, properties = NULL,     main = NULL, debugMe = FALSE) ","base","base","1.6.2"
"browseURL","closure","function","TRUE","FALSE","(url, browser = getOption(""browser"")) ","base","base","1.6.2"
"browser","special","function","TRUE","NA","","base","base","1.6.2"
"bug.report","closure","function","TRUE","FALSE","(subject = """", ccaddress = Sys.getenv(""USER""), method = getOption(""mailer""),     address = ""r-bugs@r-project.org"", file = ""R.bug.report"") ","base","base","1.6.2"
"builtins","closure","function","TRUE","FALSE","(internal = FALSE) ","base","base","1.6.2"
"bw.SJ","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax, method = c(""ste"",     ""dpi"")) ","base","base","1.6.2"
"bw.bcv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","base","base","1.6.2"
"bw.nrd","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"bw.nrd0","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"bw.ucv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","base","base","1.6.2"
"bxp","closure","function","TRUE","FALSE","(z, notch = FALSE, width = NULL, varwidth = FALSE, outline = TRUE,     notch.frac = 0.5, boxwex = 0.8, border = par(""fg""), col = NULL,     log = """", pars = NULL, frame.plot = axes, horizontal = FALSE,     add = FALSE, at = NULL, show.names = NULL, ...) ","base","base","1.6.2"
"by","closure","function","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","base","1.6.2"
"by.data.frame","closure","function","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","base","1.6.2"
"by.default","closure","function","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","base","1.6.2"
"bzfile","closure","function","TRUE","FALSE","(description, open = """", encoding = getOption(""encoding"")) ","base","base","1.6.2"
"c","special","function","TRUE","NA","","base","base","1.6.2"
"c.POSIXct","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","1.6.2"
"c.POSIXlt","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","1.6.2"
"call","special","function","TRUE","NA","","base","base","1.6.2"
"capabilities","closure","function","TRUE","FALSE","(what = NULL) ","base","base","1.6.2"
"case.names","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"case.names.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"case.names.lm","closure","function","TRUE","FALSE","(object, full = FALSE, ...) ","base","base","1.6.2"
"casefold","closure","function","TRUE","FALSE","(x, upper = FALSE) ","base","base","1.6.2"
"cat","closure","function","TRUE","FALSE","(..., file = """", sep = "" "", fill = FALSE, labels = NULL,     append = FALSE) ","base","base","1.6.2"
"category","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"cbind","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","1.6.2"
"cbind.data.frame","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","1.6.2"
"cbind.ts","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","1.6.2"
"ceiling","builtin","function","TRUE","NA","","base","base","1.6.2"
"char.expand","closure","function","TRUE","FALSE","(input, target, nomatch = stop(""no match"")) ","base","base","1.6.2"
"character","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"charmatch","closure","function","TRUE","FALSE","(x, table, nomatch = NA) ","base","base","1.6.2"
"chartr","closure","function","TRUE","FALSE","(old, new, x) ","base","base","1.6.2"
"check.options","closure","function","TRUE","FALSE","(new, name.opt, reset = FALSE, assign.opt = FALSE, envir = .GlobalEnv,     check.attributes = c(""mode"", ""length""), override.check = FALSE) ","base","base","1.6.2"
"chol","closure","function","TRUE","FALSE","(x, pivot = FALSE) ","base","base","1.6.2"
"chol2inv","closure","function","TRUE","FALSE","(x, size = ncol(x)) ","base","base","1.6.2"
"choose","closure","function","TRUE","FALSE","(n, k) ","base","base","1.6.2"
"chull","closure","function","TRUE","FALSE","(x, y = NULL) ","base","base","1.6.2"
"class","builtin","function","TRUE","NA","","base","base","1.6.2"
"class<-","builtin","function","TRUE","NA","","base","base","1.6.2"
"close","closure","function","TRUE","FALSE","(con, ...) ","base","base","1.6.2"
"close.connection","closure","function","TRUE","FALSE","(con, type = ""rw"", ...) ","base","base","1.6.2"
"close.screen","closure","function","TRUE","FALSE","(n, all.screens = FALSE) ","base","base","1.6.2"
"close.socket","closure","function","TRUE","FALSE","(socket, ...) ","base","base","1.6.2"
"closeAllConnections","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"cm","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"cm.colors","closure","function","TRUE","FALSE","(n) ","base","base","1.6.2"
"co.intervals","closure","function","TRUE","FALSE","(x, number = 6, overlap = 0.5) ","base","base","1.6.2"
"codes","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"codes.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"codes.ordered","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"codes<-","closure","function","TRUE","FALSE","(x, value, ...) ","base","base","1.6.2"
"coef","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"coef.aov","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"coef.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"coef.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"coef.listof","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"coef.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"coefficients","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"col","closure","function","TRUE","FALSE","(x, as.factor = FALSE) ","base","base","1.6.2"
"col2rgb","closure","function","TRUE","FALSE","(col) ","base","base","1.6.2"
"colMeans","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","1.6.2"
"colSums","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","1.6.2"
"colnames","closure","function","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""col"") ","base","base","1.6.2"
"colnames<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"colors","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"colours","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"commandArgs","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"comment","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"comment<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"compareVersion","closure","function","TRUE","FALSE","(a, b) ","base","base","1.6.2"
"complete.cases","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"complex","closure","function","TRUE","FALSE","(length.out = 0, real = numeric(), imaginary = numeric(),     modulus = 1, argument = 0) ","base","base","1.6.2"
"conflicts","closure","function","TRUE","FALSE","(where = search(), detail = FALSE) ","base","base","1.6.2"
"contour","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"contour.default","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, nlevels = 10, levels = pretty(zlim, nlevels), labels = NULL,     xlim = range(x, finite = TRUE), ylim = range(y, finite = TRUE),     zlim = range(z, finite = TRUE), labcex = 0.6, drawlabels = TRUE,     method = ""flattest"", vfont = c(""sans serif"", ""plain""), axes = TRUE,     frame.plot = axes, col = par(""fg""), lty = par(""lty""), lwd = par(""lwd""),     add = FALSE, ...) ","base","base","1.6.2"
"contr.helmert","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","base","base","1.6.2"
"contr.poly","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","base","base","1.6.2"
"contr.sum","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","base","base","1.6.2"
"contr.treatment","closure","function","TRUE","FALSE","(n, base = 1, contrasts = TRUE) ","base","base","1.6.2"
"contrasts","closure","function","TRUE","FALSE","(x, contrasts = TRUE) ","base","base","1.6.2"
"contrasts<-","closure","function","TRUE","FALSE","(x, how.many, value) ","base","base","1.6.2"
"contrib.url","closure","function","TRUE","FALSE","(CRAN) ","base","base","1.6.2"
"contributors","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"convolve","closure","function","TRUE","FALSE","(x, y, conj = TRUE, type = c(""circular"", ""open"", ""filter"")) ","base","base","1.6.2"
"cooks.distance","closure","function","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj),     sd = sqrt(deviance(lm.obj)/df.residual(lm.obj))) ","base","base","1.6.2"
"coplot","closure","function","TRUE","FALSE","(formula, data, given.values, panel = points, rows,     columns, show.given = TRUE, col = par(""fg""), pch = par(""pch""),     bar.bg = c(num = gray(0.8), fac = gray(0.95)), xlab = c(x.name,         paste(""Given :"", a.name)), ylab = c(y.name, paste(""Given :"",         b.name)), subscripts = FALSE, axlabels = function(f) abbreviate(levels(f)),     number = 6, overlap = 0.5, xlim, ylim, ...) ","base","base","1.6.2"
"cor","closure","function","TRUE","FALSE","(x, y = NULL, use = ""all.obs"") ","base","base","1.6.2"
"cos","builtin","function","TRUE","NA","","base","base","1.6.2"
"cosh","builtin","function","TRUE","NA","","base","base","1.6.2"
"count.fields","closure","function","TRUE","FALSE","(file, sep = """", quote = ""\""'"", skip = 0, blank.lines.skip = TRUE,     comment.char = ""#"") ","base","base","1.6.2"
"cov","closure","function","TRUE","FALSE","(x, y = NULL, use = ""all.obs"") ","base","base","1.6.2"
"cov.wt","closure","function","TRUE","FALSE","(x, wt = rep(1/nrow(x), nrow(x)), cor = FALSE, center = TRUE) ","base","base","1.6.2"
"covratio","closure","function","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj)) ","base","base","1.6.2"
"crossprod","closure","function","TRUE","FALSE","(x, y = NULL) ","base","base","1.6.2"
"cummax","builtin","function","TRUE","NA","","base","base","1.6.2"
"cummin","builtin","function","TRUE","NA","","base","base","1.6.2"
"cumprod","builtin","function","TRUE","NA","","base","base","1.6.2"
"cumsum","builtin","function","TRUE","NA","","base","base","1.6.2"
"curve","closure","function","TRUE","FALSE","(expr, from, to, n = 101, add = FALSE, type = ""l"", ylab = NULL,     log = NULL, xlim = NULL, ...) ","base","base","1.6.2"
"cut","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"cut.POSIXt","closure","function","TRUE","FALSE","(x, breaks, labels = NULL, start.on.monday = TRUE, ...) ","base","base","1.6.2"
"cut.default","closure","function","TRUE","FALSE","(x, breaks, labels = NULL, include.lowest = FALSE, right = TRUE,     dig.lab = 3, ...) ","base","base","1.6.2"
"cycle","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"cycle.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"cycle.ts","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"data","closure","function","TRUE","FALSE","(..., list = character(0), package = .packages(), lib.loc = NULL,     verbose = getOption(""verbose"")) ","base","base","1.6.2"
"data.class","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"data.entry","closure","function","TRUE","FALSE","(..., Modes = NULL, Names = NULL) ","base","base","1.6.2"
"data.frame","closure","function","TRUE","FALSE","(..., row.names = NULL, check.rows = FALSE, check.names = TRUE) ","base","base","1.6.2"
"data.matrix","closure","function","TRUE","FALSE","(frame) ","base","base","1.6.2"
"dataClass","builtin","function","TRUE","NA","","base","base","1.6.2"
"dataentry","closure","function","TRUE","FALSE","(data, modes) ","base","base","1.6.2"
"date","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"dbeta","closure","function","TRUE","FALSE","(x, shape1, shape2, ncp = 0, log = FALSE) ","base","base","1.6.2"
"dbinom","closure","function","TRUE","FALSE","(x, size, prob, log = FALSE) ","base","base","1.6.2"
"dcauchy","closure","function","TRUE","FALSE","(x, location = 0, scale = 1, log = FALSE) ","base","base","1.6.2"
"dchisq","closure","function","TRUE","FALSE","(x, df, ncp = 0, log = FALSE) ","base","base","1.6.2"
"de","closure","function","TRUE","FALSE","(..., Modes = list(), Names = NULL) ","base","base","1.6.2"
"de.ncols","closure","function","TRUE","FALSE","(inlist) ","base","base","1.6.2"
"de.restore","closure","function","TRUE","FALSE","(inlist, ncols, coltypes, argnames, args) ","base","base","1.6.2"
"de.setup","closure","function","TRUE","FALSE","(ilist, list.names, incols) ","base","base","1.6.2"
"debug","builtin","function","TRUE","NA","","base","base","1.6.2"
"debugger","closure","function","TRUE","FALSE","(dump = last.dump) ","base","base","1.6.2"
"delay","closure","function","TRUE","FALSE","(x, env = .GlobalEnv) ","base","base","1.6.2"
"delete.response","closure","function","TRUE","FALSE","(termobj) ","base","base","1.6.2"
"deltat","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"deltat.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"demo","closure","function","TRUE","FALSE","(topic, device = getOption(""device""), package = .packages(),     lib.loc = NULL, character.only = FALSE, verbose = getOption(""verbose"")) ","base","base","1.6.2"
"density","closure","function","TRUE","FALSE","(x, bw = ""nrd0"", adjust = 1, kernel = c(""gaussian"",     ""epanechnikov"", ""rectangular"", ""triangular"", ""biweight"",     ""cosine"", ""optcosine""), window = kernel, width, give.Rkern = FALSE,     n = 512, from, to, cut = 3, na.rm = FALSE) ","base","base","1.6.2"
"deparse","closure","function","TRUE","FALSE","(expr, width.cutoff = 60) ","base","base","1.6.2"
"deriv","closure","function","TRUE","FALSE","(expr, ...) ","base","base","1.6.2"
"deriv.default","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = FALSE, ...) ","base","base","1.6.2"
"deriv.formula","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = FALSE, ...) ","base","base","1.6.2"
"deriv3","closure","function","TRUE","FALSE","(expr, ...) ","base","base","1.6.2"
"deriv3.default","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = TRUE, ...) ","base","base","1.6.2"
"deriv3.formula","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = TRUE, ...) ","base","base","1.6.2"
"det","closure","function","TRUE","FALSE","(x, method = c(""qr"", ""eigenvalues""), tol = 1e-07) ","base","base","1.6.2"
"detach","closure","function","TRUE","FALSE","(name, pos = 2) ","base","base","1.6.2"
"dev.control","closure","function","TRUE","FALSE","(displaylist) ","base","base","1.6.2"
"dev.copy","closure","function","TRUE","FALSE","(device, ..., which = dev.next()) ","base","base","1.6.2"
"dev.copy2eps","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"dev.cur","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"dev.interactive","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"dev.list","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"dev.next","closure","function","TRUE","FALSE","(which = dev.cur()) ","base","base","1.6.2"
"dev.off","closure","function","TRUE","FALSE","(which = dev.cur()) ","base","base","1.6.2"
"dev.prev","closure","function","TRUE","FALSE","(which = dev.cur()) ","base","base","1.6.2"
"dev.print","closure","function","TRUE","FALSE","(device = postscript, ...) ","base","base","1.6.2"
"dev.set","closure","function","TRUE","FALSE","(which = dev.next()) ","base","base","1.6.2"
"dev2bitmap","closure","function","TRUE","FALSE","(file, type = ""png256"", height = 6, width = 6, res = 72,     pointsize, ...) ","base","base","1.6.2"
"deviance","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"deviance.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"deviance.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"deviance.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"deviance.mlm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"dexp","closure","function","TRUE","FALSE","(x, rate = 1, log = FALSE) ","base","base","1.6.2"
"df","closure","function","TRUE","FALSE","(x, df1, df2, log = FALSE) ","base","base","1.6.2"
"df.residual","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"df.residual.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"dfbetas","closure","function","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj)) ","base","base","1.6.2"
"dffits","closure","function","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj)) ","base","base","1.6.2"
"dgamma","closure","function","TRUE","FALSE","(x, shape, rate = 1, scale = 1/rate, log = FALSE) ","base","base","1.6.2"
"dgeom","closure","function","TRUE","FALSE","(x, prob, log = FALSE) ","base","base","1.6.2"
"dget","closure","function","TRUE","FALSE","(file) ","base","base","1.6.2"
"dhyper","closure","function","TRUE","FALSE","(x, m, n, k, log = FALSE) ","base","base","1.6.2"
"diag","closure","function","TRUE","FALSE","(x = 1, nrow, ncol = n) ","base","base","1.6.2"
"diag<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"diff","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"diff.default","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","base","base","1.6.2"
"diff.ts","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","base","base","1.6.2"
"difftime","closure","function","TRUE","FALSE","(time1, time2, tz = """", units = c(""auto"", ""secs"", ""mins"",     ""hours"", ""days"", ""weeks"")) ","base","base","1.6.2"
"digamma","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"dim","special","function","TRUE","NA","","base","base","1.6.2"
"dim.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"dim<-","special","function","TRUE","NA","","base","base","1.6.2"
"dimnames","special","function","TRUE","NA","","base","base","1.6.2"
"dimnames.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"dimnames<-","special","function","TRUE","NA","","base","base","1.6.2"
"dimnames<-.data.frame","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"dir","closure","function","TRUE","FALSE","(path = ""."", pattern = NULL, all.files = FALSE, full.names = FALSE) ","base","base","1.6.2"
"dir.create","closure","function","TRUE","FALSE","(path) ","base","base","1.6.2"
"dirname","closure","function","TRUE","FALSE","(path) ","base","base","1.6.2"
"dlnorm","closure","function","TRUE","FALSE","(x, meanlog = 0, sdlog = 1, log = FALSE) ","base","base","1.6.2"
"dlogis","closure","function","TRUE","FALSE","(x, location = 0, scale = 1, log = FALSE) ","base","base","1.6.2"
"dnbinom","closure","function","TRUE","FALSE","(x, size, prob, mu, log = FALSE) ","base","base","1.6.2"
"dnorm","closure","function","TRUE","FALSE","(x, mean = 0, sd = 1, log = FALSE) ","base","base","1.6.2"
"do.call","closure","function","TRUE","FALSE","(what, args) ","base","base","1.6.2"
"dotchart","closure","function","TRUE","FALSE","(x, labels = NULL, groups = NULL, gdata = NULL, cex = par(""cex""),     pch = 21, gpch = 21, bg = par(""bg""), color = par(""fg""), gcolor = par(""fg""),     lcolor = ""gray"", xlim = range(x[is.finite(x)]), main = NULL,     xlab = NULL, ylab = NULL, ...) ","base","base","1.6.2"
"double","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"download.file","closure","function","TRUE","FALSE","(url, destfile, method, quiet = FALSE, mode = ""w"", cacheOK = TRUE) ","base","base","1.6.2"
"download.packages","closure","function","TRUE","FALSE","(pkgs, destdir, available = NULL, CRAN = getOption(""CRAN""),     contriburl = contrib.url(CRAN), method) ","base","base","1.6.2"
"dpois","closure","function","TRUE","FALSE","(x, lambda, log = FALSE) ","base","base","1.6.2"
"dput","closure","function","TRUE","FALSE","(x, file = """") ","base","base","1.6.2"
"drop","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"drop.scope","closure","function","TRUE","FALSE","(terms1, terms2) ","base","base","1.6.2"
"drop.terms","closure","function","TRUE","FALSE","(termobj, dropx = NULL, keep.response = FALSE) ","base","base","1.6.2"
"drop1","closure","function","TRUE","FALSE","(object, scope, ...) ","base","base","1.6.2"
"drop1.default","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq""),     k = 2, trace = FALSE, ...) ","base","base","1.6.2"
"drop1.glm","closure","function","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), k = 2, ...) ","base","base","1.6.2"
"drop1.lm","closure","function","TRUE","FALSE","(object, scope, scale = 0, all.cols = TRUE, test = c(""none"",     ""Chisq"", ""F""), k = 2, ...) ","base","base","1.6.2"
"drop1.mlm","closure","function","TRUE","FALSE","(object, scope, ...) ","base","base","1.6.2"
"dsignrank","closure","function","TRUE","FALSE","(x, n, log = FALSE) ","base","base","1.6.2"
"dt","closure","function","TRUE","FALSE","(x, df, log = FALSE) ","base","base","1.6.2"
"dummy.coef","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"dummy.coef.aovlist","closure","function","TRUE","FALSE","(object, use.na = FALSE, ...) ","base","base","1.6.2"
"dummy.coef.lm","closure","function","TRUE","FALSE","(object, use.na = FALSE, ...) ","base","base","1.6.2"
"dump","closure","function","TRUE","FALSE","(list, file = ""dumpdata.R"", append = FALSE) ","base","base","1.6.2"
"dump.frames","closure","function","TRUE","FALSE","(dumpto = ""last.dump"", to.file = FALSE) ","base","base","1.6.2"
"dunif","closure","function","TRUE","FALSE","(x, min = 0, max = 1, log = FALSE) ","base","base","1.6.2"
"duplicated","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","1.6.2"
"duplicated.array","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","1.6.2"
"duplicated.data.frame","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","1.6.2"
"duplicated.default","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","1.6.2"
"duplicated.matrix","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","1.6.2"
"dweibull","closure","function","TRUE","FALSE","(x, shape, scale = 1, log = FALSE) ","base","base","1.6.2"
"dwilcox","closure","function","TRUE","FALSE","(x, m, n, log = FALSE) ","base","base","1.6.2"
"dyn.load","closure","function","TRUE","FALSE","(x, local = TRUE, now = TRUE) ","base","base","1.6.2"
"dyn.unload","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"edit","closure","function","TRUE","FALSE","(name, ...) ","base","base","1.6.2"
"edit.data.frame","closure","function","TRUE","FALSE","(name, factor.mode = c(""character"", ""numeric""), edit.row.names = any(row.names(name) !=     1:nrow(name)), ...) ","base","base","1.6.2"
"edit.default","closure","function","TRUE","FALSE","(name = NULL, file = """", editor = getOption(""editor""),     ...) ","base","base","1.6.2"
"edit.matrix","closure","function","TRUE","FALSE","(name, edit.row.names = any(rownames(name) != 1:nrow(name)),     ...) ","base","base","1.6.2"
"eff.aovlist","closure","function","TRUE","FALSE","(aovlist) ","base","base","1.6.2"
"effects","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"effects.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"effects.lm","closure","function","TRUE","FALSE","(object, set.sign = FALSE, ...) ","base","base","1.6.2"
"eigen","closure","function","TRUE","FALSE","(x, symmetric, only.values = FALSE) ","base","base","1.6.2"
"emacs","closure","function","TRUE","FALSE","(name = NULL, file = """") ","base","base","1.6.2"
"end","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"end.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"environment","closure","function","TRUE","FALSE","(fun = NULL) ","base","base","1.6.2"
"environment<-","builtin","function","TRUE","NA","","base","base","1.6.2"
"environmentIsLocked","closure","function","TRUE","FALSE","(env) ","base","base","1.6.2"
"erase.screen","closure","function","TRUE","FALSE","(n = .split.cur.screen) ","base","base","1.6.2"
"eval","closure","function","TRUE","FALSE","(expr, envir = parent.frame(), enclos = if (is.list(envir) ||     is.pairlist(envir)) parent.frame()) ","base","base","1.6.2"
"eval.parent","closure","function","TRUE","FALSE","(expr, n = 1) ","base","base","1.6.2"
"evalq","closure","function","TRUE","FALSE","(expr, envir, enclos) ","base","base","1.6.2"
"example","closure","function","TRUE","FALSE","(topic, package = .packages(), lib.loc = NULL, echo = TRUE,     verbose = getOption(""verbose""), prompt.echo = paste(abbreviate(topic,         6), ""> "", sep = """")) ","base","base","1.6.2"
"exists","closure","function","TRUE","FALSE","(x, where = -1, envir = if (missing(frame)) as.environment(where) else sys.frame(frame),     frame, mode = ""any"", inherits = TRUE) ","base","base","1.6.2"
"exp","builtin","function","TRUE","NA","","base","base","1.6.2"
"expand.grid","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"expand.model.frame","closure","function","TRUE","FALSE","(model, extras, envir = environment(formula(model)),     na.expand = FALSE) ","base","base","1.6.2"
"expm1","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"expression","special","function","TRUE","NA","","base","base","1.6.2"
"extractAIC","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","base","1.6.2"
"extractAIC.aov","closure","function","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","base","base","1.6.2"
"extractAIC.coxph","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","base","1.6.2"
"extractAIC.glm","closure","function","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","base","base","1.6.2"
"extractAIC.lm","closure","function","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","base","base","1.6.2"
"extractAIC.negbin","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","base","1.6.2"
"extractAIC.survreg","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","base","1.6.2"
"factor","closure","function","TRUE","FALSE","(x, levels = sort(unique.default(x), na.last = TRUE),     labels = levels, exclude = NA, ordered = is.ordered(x)) ","base","base","1.6.2"
"factor.scope","closure","function","TRUE","FALSE","(factor, scope) ","base","base","1.6.2"
"family","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"family.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"family.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"fft","closure","function","TRUE","FALSE","(z, inverse = FALSE) ","base","base","1.6.2"
"fifo","closure","function","TRUE","FALSE","(description = """", open = """", blocking = FALSE, encoding = getOption(""encoding"")) ","base","base","1.6.2"
"file","closure","function","TRUE","FALSE","(description = """", open = """", blocking = TRUE, encoding = getOption(""encoding"")) ","base","base","1.6.2"
"file.access","closure","function","TRUE","FALSE","(names, mode = 0) ","base","base","1.6.2"
"file.append","closure","function","TRUE","FALSE","(file1, file2) ","base","base","1.6.2"
"file.choose","closure","function","TRUE","FALSE","(new = FALSE) ","base","base","1.6.2"
"file.copy","closure","function","TRUE","FALSE","(from, to, overwrite = FALSE) ","base","base","1.6.2"
"file.create","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"file.exists","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"file.info","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"file.path","closure","function","TRUE","FALSE","(..., fsep = .Platform$file.sep) ","base","base","1.6.2"
"file.remove","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"file.rename","closure","function","TRUE","FALSE","(from, to) ","base","base","1.6.2"
"file.show","closure","function","TRUE","FALSE","(..., header = rep("""", nfiles), title = ""R Information"",     delete.file = FALSE, pager = getOption(""pager"")) ","base","base","1.6.2"
"filled.contour","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, xlim = range(x, finite = TRUE), ylim = range(y, finite = TRUE),     zlim = range(z, finite = TRUE), levels = pretty(zlim, nlevels),     nlevels = 20, color.palette = cm.colors, col = color.palette(length(levels) -         1), plot.title, plot.axes, key.title, key.axes, asp = NA,     xaxs = ""i"", yaxs = ""i"", las = 1, axes = TRUE, ...) ","base","base","1.6.2"
"find","closure","function","TRUE","FALSE","(what, mode = ""any"", numeric. = FALSE, simple.words = TRUE) ","base","base","1.6.2"
"findInterval","closure","function","TRUE","FALSE","(x, vec, rightmost.closed = FALSE, all.inside = FALSE) ","base","base","1.6.2"
"fitted","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"fitted.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"fitted.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"fitted.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"fitted.values","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"fivenum","closure","function","TRUE","FALSE","(x, na.rm = TRUE) ","base","base","1.6.2"
"fix","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"floor","builtin","function","TRUE","NA","","base","base","1.6.2"
"for","special","function","TRUE","NA","","base","base","1.6.2"
"formals","closure","function","TRUE","FALSE","(fun = sys.function(sys.parent())) ","base","base","1.6.2"
"formals<-","closure","function","TRUE","FALSE","(f, value, envir = parent.frame()) ","base","base","1.6.2"
"format","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"format.AsIs","closure","function","TRUE","FALSE","(x, width = 12, ...) ","base","base","1.6.2"
"format.POSIXct","closure","function","TRUE","FALSE","(x, format = """", tz = """", usetz = FALSE, ...) ","base","base","1.6.2"
"format.POSIXlt","closure","function","TRUE","FALSE","(x, format = """", usetz = FALSE, ...) ","base","base","1.6.2"
"format.char","closure","function","TRUE","FALSE","(x, width = NULL, flag = ""-"") ","base","base","1.6.2"
"format.data.frame","closure","function","TRUE","FALSE","(x, ..., justify = ""none"") ","base","base","1.6.2"
"format.default","closure","function","TRUE","FALSE","(x, trim = FALSE, digits = NULL, nsmall = 0, justify = c(""left"",     ""right"", ""none""), big.mark = """", big.interval = 3, small.mark = """",     small.interval = 5, decimal.mark = ""."", ...) ","base","base","1.6.2"
"format.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"format.info","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"format.octmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"format.pval","closure","function","TRUE","FALSE","(pv, digits = max(1, getOption(""digits"") - 2), eps = .Machine$double.eps,     na.form = ""NA"") ","base","base","1.6.2"
"formatC","closure","function","TRUE","FALSE","(x, digits = NULL, width = NULL, format = NULL, flag = """",     mode = NULL, big.mark = """", big.interval = 3, small.mark = """",     small.interval = 5, decimal.mark = ""."") ","base","base","1.6.2"
"formatDL","closure","function","TRUE","FALSE","(x, y, style = c(""table"", ""list""), width = 0.9 * getOption(""width""),     indent = NULL) ","base","base","1.6.2"
"formula","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"formula.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"formula.default","closure","function","TRUE","FALSE","(x, env = parent.frame(), ...) ","base","base","1.6.2"
"formula.formula","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"formula.lm","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"formula.terms","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"forwardsolve","closure","function","TRUE","FALSE","(l, x, k = ncol(l), upper.tri = FALSE, transpose = FALSE) ","base","base","1.6.2"
"fourfoldplot","closure","function","TRUE","FALSE","(x, color = c(""#99CCFF"", ""#6699CC""), conf.level = 0.95,     std = c(""margins"", ""ind.max"", ""all.max""), margin = c(1, 2),     space = 0.2, main = NULL, mfrow = NULL, mfcol = NULL) ","base","base","1.6.2"
"frame","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"frequency","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"frequency.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"ftable","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"ftable.default","closure","function","TRUE","FALSE","(..., exclude = c(NA, NaN), row.vars = NULL, col.vars = NULL) ","base","base","1.6.2"
"ftable.formula","closure","function","TRUE","FALSE","(formula, data = NULL, subset, na.action, ...) ","base","base","1.6.2"
"function","special","function","TRUE","NA","","base","base","1.6.2"
"gamma","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"gammaCody","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"gaussian","closure","function","TRUE","FALSE","(link = ""identity"") ","base","base","1.6.2"
"gc","closure","function","TRUE","FALSE","(verbose = getOption(""verbose"")) ","base","base","1.6.2"
"gc.time","builtin","function","TRUE","NA","","base","base","1.6.2"
"gcinfo","closure","function","TRUE","FALSE","(verbose) ","base","base","1.6.2"
"gctorture","closure","function","TRUE","FALSE","(on = TRUE) ","base","base","1.6.2"
"get","closure","function","TRUE","FALSE","(x, pos = -1, envir = as.environment(pos), mode = ""any"",     inherits = TRUE) ","base","base","1.6.2"
"getAllConnections","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"getCConverterDescriptions","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"getCConverterStatus","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"getConnection","closure","function","TRUE","FALSE","(what) ","base","base","1.6.2"
"getNativeSymbolInfo","closure","function","TRUE","FALSE","(name, PACKAGE) ","base","base","1.6.2"
"getNumCConverters","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"getOption","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"getTaskCallbackNames","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"getenv","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"geterrmessage","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"getwd","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"gl","closure","function","TRUE","FALSE","(n, k, length = n * k, labels = 1:n, ordered = FALSE) ","base","base","1.6.2"
"glm","closure","function","TRUE","FALSE","(formula, family = gaussian, data = list(), weights = NULL,     subset = NULL, na.action = na.fail, start = NULL, offset = NULL,     control = glm.control(...), model = TRUE, method = ""glm.fit"",     x = FALSE, y = TRUE, contrasts = NULL, ...) ","base","base","1.6.2"
"glm.control","closure","function","TRUE","FALSE","(epsilon = 1e-04, maxit = 10, trace = FALSE) ","base","base","1.6.2"
"glm.fit","closure","function","TRUE","FALSE","(x, y, weights = rep(1, nobs), start = NULL, etastart = NULL,     mustart = NULL, offset = rep(0, nobs), family = gaussian(),     control = glm.control(), intercept = TRUE) ","base","base","1.6.2"
"glm.fit.null","closure","function","TRUE","FALSE","(x, y, weights = rep(1, nobs), start = NULL, etastart = NULL,     mustart = NULL, offset = rep(0, nobs), family = gaussian(),     control = glm.control(), intercept = FALSE) ","base","base","1.6.2"
"globalenv","builtin","function","TRUE","NA","","base","base","1.6.2"
"gnome","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","base","1.6.2"
"graphics.off","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"gray","closure","function","TRUE","FALSE","(level) ","base","base","1.6.2"
"grep","closure","function","TRUE","FALSE","(pattern, x, ignore.case = FALSE, extended = TRUE, perl = FALSE,     value = FALSE) ","base","base","1.6.2"
"grey","closure","function","TRUE","FALSE","(level) ","base","base","1.6.2"
"grid","closure","function","TRUE","FALSE","(nx = NULL, ny = nx, col = ""lightgray"", lty = ""dotted"",     lwd = NULL, equilogs = TRUE) ","base","base","1.6.2"
"gsub","closure","function","TRUE","FALSE","(pattern, replacement, x, ignore.case = FALSE, extended = TRUE,     perl = FALSE) ","base","base","1.6.2"
"gtk","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","base","1.6.2"
"gzfile","closure","function","TRUE","FALSE","(description, open = """", encoding = getOption(""encoding""),     compression = 6) ","base","base","1.6.2"
"hasTsp","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"hat","closure","function","TRUE","FALSE","(x, intercept = TRUE) ","base","base","1.6.2"
"heat.colors","closure","function","TRUE","FALSE","(n) ","base","base","1.6.2"
"help","closure","function","TRUE","FALSE","(topic, offline = FALSE, package = .packages(), lib.loc = NULL,     verbose = getOption(""verbose""), try.all.packages = getOption(""help.try.all.packages""),     htmlhelp = getOption(""htmlhelp""), pager = getOption(""pager"")) ","base","base","1.6.2"
"help.search","closure","function","TRUE","FALSE","(pattern, fields = c(""alias"", ""title""), apropos, keyword,     whatis, ignore.case = TRUE, package = NULL, lib.loc = NULL,     help.db = getOption(""help.db""), verbose = getOption(""verbose""),     rebuild = FALSE, agrep = NULL) ","base","base","1.6.2"
"help.start","closure","function","TRUE","FALSE","(gui = ""irrelevant"", browser = getOption(""browser""),     remote = NULL) ","base","base","1.6.2"
"hist","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"hist.POSIXt","closure","function","TRUE","FALSE","(x, breaks, ..., xlab = deparse(substitute(x)), axes = TRUE,     plot = TRUE, freq = FALSE, start.on.monday = TRUE, format) ","base","base","1.6.2"
"hist.default","closure","function","TRUE","FALSE","(x, breaks = ""Sturges"", freq = NULL, probability = !freq,     include.lowest = TRUE, right = TRUE, density = NULL, angle = 45,     col = NULL, border = NULL, main = paste(""Histogram of"", xname),     xlim = range(breaks), ylim = NULL, xlab = xname, ylab, axes = TRUE,     plot = TRUE, labels = FALSE, nclass = NULL, ...) ","base","base","1.6.2"
"history","closure","function","TRUE","FALSE","(max.show = 25, reverse = FALSE) ","base","base","1.6.2"
"hsv","closure","function","TRUE","FALSE","(h = 1, s = 1, v = 1, gamma = 1) ","base","base","1.6.2"
"httpclient","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"identical","closure","function","TRUE","FALSE","(x, y) ","base","base","1.6.2"
"identify","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"identify.default","closure","function","TRUE","FALSE","(x, y = NULL, labels = seq(along = x), pos = FALSE,     n = length(x), plot = TRUE, offset = 0.5, ...) ","base","base","1.6.2"
"if","special","function","TRUE","NA","","base","base","1.6.2"
"ifelse","closure","function","TRUE","FALSE","(test, yes, no) ","base","base","1.6.2"
"image","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"image.default","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, zlim = range(z[is.finite(z)]), xlim = range(x[is.finite(x)]),     ylim = range(y[is.finite(y)]), col = heat.colors(12), add = FALSE,     xaxs = ""i"", yaxs = ""i"", xlab, ylab, breaks, oldstyle = FALSE,     ...) ","base","base","1.6.2"
"index.search","closure","function","TRUE","FALSE","(topic, path, file = ""AnIndex"", type = ""help"") ","base","base","1.6.2"
"influence.measures","closure","function","TRUE","FALSE","(lm.obj) ","base","base","1.6.2"
"inherits","closure","function","TRUE","FALSE","(x, what, which = FALSE) ","base","base","1.6.2"
"install.packages","closure","function","TRUE","FALSE","(pkgs, lib, CRAN = getOption(""CRAN""), contriburl = contrib.url(CRAN),     method, available = NULL, destdir = NULL) ","base","base","1.6.2"
"installed.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, priority = NULL) ","base","base","1.6.2"
"integer","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"integrate","closure","function","TRUE","FALSE","(f, lower, upper, subdivisions = 100, rel.tol = .Machine$double.eps^0.25,     abs.tol = rel.tol, stop.on.error = TRUE, keep.xy = FALSE,     aux = NULL, ...) ","base","base","1.6.2"
"interaction","closure","function","TRUE","FALSE","(..., drop = FALSE) ","base","base","1.6.2"
"interaction.plot","closure","function","TRUE","FALSE","(x.factor, trace.factor, response, fun = mean, type = c(""l"",     ""p""), legend = TRUE, trace.label = deparse(substitute(trace.factor)),     fixed = FALSE, xlab = deparse(substitute(x.factor)), ylab = ylabel,     ylim = range(cells, na.rm = TRUE), lty = nc:1, col = 1, pch = c(1:9,         0, letters), ...) ","base","base","1.6.2"
"interactive","special","function","TRUE","NA","","base","base","1.6.2"
"intersect","closure","function","TRUE","FALSE","(x, y) ","base","base","1.6.2"
"inverse.gaussian","closure","function","TRUE","FALSE","(link = ""1/mu^2"") ","base","base","1.6.2"
"inverse.rle","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"invisible","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.R","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"is.array","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.atomic","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.call","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.character","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.complex","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.double","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.element","closure","function","TRUE","FALSE","(el, set) ","base","base","1.6.2"
"is.empty.model","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.environment","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.expression","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.factor","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.finite","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.function","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.infinite","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.integer","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.language","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.list","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.loaded","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.logical","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.matrix","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.mts","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.na","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.na.POSIXlt","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.na.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.na<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"is.na<-.default","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"is.na<-.factor","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"is.name","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.nan","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.null","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.numeric","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.object","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.ordered","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.pairlist","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.qr","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.real","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.recursive","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.single","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.symbol","builtin","function","TRUE","NA","","base","base","1.6.2"
"is.table","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.ts","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"is.unsorted","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","base","base","1.6.2"
"is.vector","closure","function","TRUE","FALSE","(x, mode = ""any"") ","base","base","1.6.2"
"isIncomplete","closure","function","TRUE","FALSE","(con) ","base","base","1.6.2"
"isOpen","closure","function","TRUE","FALSE","(con, rw = """") ","base","base","1.6.2"
"isSeekable","closure","function","TRUE","FALSE","(con) ","base","base","1.6.2"
"jitter","closure","function","TRUE","FALSE","(x, factor = 1, amount = NULL) ","base","base","1.6.2"
"jpeg","closure","function","TRUE","FALSE","(filename = ""Rplot%03d.jpeg"", width = 480, height = 480,     pointsize = 12, quality = 75, gamma = 1, colortype = getOption(""X11colortype""),     maxcubesize = 256, bg = ""white"") ","base","base","1.6.2"
"julian","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"julian.POSIXt","closure","function","TRUE","FALSE","(x, origin = as.POSIXct(""1970-01-01"", tz = ""GMT""), ...) ","base","base","1.6.2"
"kappa","closure","function","TRUE","FALSE","(z, ...) ","base","base","1.6.2"
"kappa.default","closure","function","TRUE","FALSE","(z, exact = FALSE, ...) ","base","base","1.6.2"
"kappa.lm","closure","function","TRUE","FALSE","(z, ...) ","base","base","1.6.2"
"kappa.qr","closure","function","TRUE","FALSE","(z, ...) ","base","base","1.6.2"
"kappa.tri","closure","function","TRUE","FALSE","(z, exact = FALSE, ...) ","base","base","1.6.2"
"kronecker","closure","function","TRUE","FALSE","(X, Y, FUN = ""*"", make.dimnames = FALSE, ...) ","base","base","1.6.2"
"labels","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"labels.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"labels.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"labels.terms","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"lapply","closure","function","TRUE","FALSE","(X, FUN, ...) ","base","base","1.6.2"
"layout","closure","function","TRUE","FALSE","(mat, widths = rep(1, dim(mat)[2]), heights = rep(1,     dim(mat)[1]), respect = FALSE) ","base","base","1.6.2"
"layout.show","closure","function","TRUE","FALSE","(n = 1) ","base","base","1.6.2"
"lbeta","closure","function","TRUE","FALSE","(a, b) ","base","base","1.6.2"
"lchoose","closure","function","TRUE","FALSE","(n, k) ","base","base","1.6.2"
"lcm","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"legend","closure","function","TRUE","FALSE","(x, y, legend, fill, col = ""black"", lty, lwd, pch, angle = NULL,     density = NULL, bty = ""o"", bg = par(""bg""), pt.bg = NA, cex = 1,     xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1, adj = 0,     text.width = NULL, merge = do.lines && has.pch, trace = FALSE,     ncol = 1, horiz = FALSE) ","base","base","1.6.2"
"length","builtin","function","TRUE","NA","","base","base","1.6.2"
"length<-","builtin","function","TRUE","NA","","base","base","1.6.2"
"letters","character","character","TRUE","FALSE","NA","base","base","1.6.2"
"levels","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"levels<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"levels<-.default","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"levels<-.factor","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"lgamma","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"library","closure","function","TRUE","FALSE","(package, help, lib.loc = NULL, character.only = FALSE,     logical.return = FALSE, warn.conflicts = TRUE, keep.source = getOption(""keep.source.pkgs""),     verbose = getOption(""verbose"")) ","base","base","1.6.2"
"library.dynam","closure","function","TRUE","FALSE","(chname, package = .packages(), lib.loc = NULL, verbose = getOption(""verbose""),     file.ext = .Platform$dynlib.ext, ...) ","base","base","1.6.2"
"licence","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"license","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"limitedLabels","closure","function","TRUE","FALSE","(value, maxwidth = options()$width) ","base","base","1.6.2"
"lines","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"lines.default","closure","function","TRUE","FALSE","(x, y = NULL, type = ""l"", col = par(""col""), lty = par(""lty""),     ...) ","base","base","1.6.2"
"lines.formula","closure","function","TRUE","FALSE","(formula, data = parent.frame(), ..., subset) ","base","base","1.6.2"
"lines.histogram","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"lines.ts","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"list","builtin","function","TRUE","NA","","base","base","1.6.2"
"list.files","closure","function","TRUE","FALSE","(path = ""."", pattern = NULL, all.files = FALSE, full.names = FALSE) ","base","base","1.6.2"
"lm","closure","function","TRUE","FALSE","(formula, data = list(), subset, weights, na.action,     method = ""qr"", model = TRUE, x = FALSE, y = FALSE, qr = TRUE,     singular.ok = TRUE, contrasts = NULL, offset = NULL, ...) ","base","base","1.6.2"
"lm.fit","closure","function","TRUE","FALSE","(x, y, offset = NULL, method = ""qr"", tol = 1e-07, ...) ","base","base","1.6.2"
"lm.fit.null","closure","function","TRUE","FALSE","(x, y, method = ""qr"", tol = 1e-07, ...) ","base","base","1.6.2"
"lm.influence","closure","function","TRUE","FALSE","(lm.obj) ","base","base","1.6.2"
"lm.wfit","closure","function","TRUE","FALSE","(x, y, w, offset = NULL, method = ""qr"", tol = 1e-07,     ...) ","base","base","1.6.2"
"lm.wfit.null","closure","function","TRUE","FALSE","(x, y, w, method = ""qr"", tol = 1e-07, ...) ","base","base","1.6.2"
"load","closure","function","TRUE","FALSE","(file, envir = parent.frame()) ","base","base","1.6.2"
"loadhistory","closure","function","TRUE","FALSE","(file = "".Rhistory"") ","base","base","1.6.2"
"local","closure","function","TRUE","FALSE","(expr, envir = new.env()) ","base","base","1.6.2"
"locator","closure","function","TRUE","FALSE","(n = 512, type = ""n"", ...) ","base","base","1.6.2"
"lockBinding","closure","function","TRUE","FALSE","(sym, env) ","base","base","1.6.2"
"lockEnvironment","closure","function","TRUE","FALSE","(env, bindings = FALSE) ","base","base","1.6.2"
"log","closure","function","TRUE","FALSE","(x, base = exp(1)) ","base","base","1.6.2"
"log10","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"log1p","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"log2","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"logLik","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"logLik.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"logLik.lm","closure","function","TRUE","FALSE","(object, REML = FALSE, ...) ","base","base","1.6.2"
"logb","closure","function","TRUE","FALSE","(x, base = exp(1)) ","base","base","1.6.2"
"logical","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"loglin","closure","function","TRUE","FALSE","(table, margin, start = rep(1, length(table)), fit = FALSE,     eps = 0.1, iter = 20, param = FALSE, print = TRUE) ","base","base","1.6.2"
"lower.tri","closure","function","TRUE","FALSE","(x, diag = FALSE) ","base","base","1.6.2"
"lowess","closure","function","TRUE","FALSE","(x, y = NULL, f = 2/3, iter = 3, delta = 0.01 * diff(range(xy$x[o]))) ","base","base","1.6.2"
"ls","closure","function","TRUE","FALSE","(name, pos = -1, envir = as.environment(pos), all.names = FALSE,     pattern) ","base","base","1.6.2"
"ls.diag","closure","function","TRUE","FALSE","(ls.out) ","base","base","1.6.2"
"ls.print","closure","function","TRUE","FALSE","(ls.out, digits = 4, print.it = TRUE) ","base","base","1.6.2"
"ls.str","closure","function","TRUE","FALSE","(pos = 1, pattern, ..., envir = as.environment(pos),     mode = ""any"", max.level = 1, give.attr = FALSE) ","base","base","1.6.2"
"lsf.str","closure","function","TRUE","FALSE","(pos = 1, ..., envir = as.environment(pos)) ","base","base","1.6.2"
"lsfit","closure","function","TRUE","FALSE","(x, y, wt = NULL, intercept = TRUE, tolerance = 1e-07,     yname = NULL) ","base","base","1.6.2"
"machine","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"mad","closure","function","TRUE","FALSE","(x, center = median(x), constant = 1.4826, na.rm = FALSE,     low = FALSE, high = FALSE) ","base","base","1.6.2"
"mahalanobis","closure","function","TRUE","FALSE","(x, center, cov, inverted = FALSE, tol.inv = 1e-07) ","base","base","1.6.2"
"make.link","closure","function","TRUE","FALSE","(link) ","base","base","1.6.2"
"make.names","closure","function","TRUE","FALSE","(names, unique = FALSE) ","base","base","1.6.2"
"make.socket","closure","function","TRUE","FALSE","(host = ""localhost"", port, fail = TRUE, server = FALSE) ","base","base","1.6.2"
"make.tables.aovproj","closure","function","TRUE","FALSE","(proj.cols, mf.cols, prjs, mf, fun = ""mean"", prt = FALSE,     ...) ","base","base","1.6.2"
"make.tables.aovprojlist","closure","function","TRUE","FALSE","(proj.cols, strata.cols, model.cols, projections, model,     eff, fun = ""mean"", prt = FALSE, ...) ","base","base","1.6.2"
"makeActiveBinding","closure","function","TRUE","FALSE","(sym, fun, env) ","base","base","1.6.2"
"makepredictcall","closure","function","TRUE","FALSE","(var, call) ","base","base","1.6.2"
"makepredictcall.default","closure","function","TRUE","FALSE","(var, call) ","base","base","1.6.2"
"makepredictcall.poly","closure","function","TRUE","FALSE","(var, call) ","base","base","1.6.2"
"manova","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"margin.table","closure","function","TRUE","FALSE","(x, margin = NULL) ","base","base","1.6.2"
"mat.or.vec","closure","function","TRUE","FALSE","(nr, nc) ","base","base","1.6.2"
"match","closure","function","TRUE","FALSE","(x, table, nomatch = NA, incomparables = FALSE) ","base","base","1.6.2"
"match.arg","closure","function","TRUE","FALSE","(arg, choices) ","base","base","1.6.2"
"match.call","closure","function","TRUE","FALSE","(definition = NULL, call = sys.call(sys.parent()), expand.dots = TRUE) ","base","base","1.6.2"
"match.fun","closure","function","TRUE","FALSE","(FUN, descend = TRUE) ","base","base","1.6.2"
"matlines","closure","function","TRUE","FALSE","(x, y, type = ""l"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     ...) ","base","base","1.6.2"
"matplot","closure","function","TRUE","FALSE","(x, y, type = ""p"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     cex = NULL, xlab = NULL, ylab = NULL, xlim = NULL, ylim = NULL,     ..., add = FALSE, verbose = getOption(""verbose"")) ","base","base","1.6.2"
"matpoints","closure","function","TRUE","FALSE","(x, y, type = ""p"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     ...) ","base","base","1.6.2"
"matrix","closure","function","TRUE","FALSE","(data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL) ","base","base","1.6.2"
"max","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"max.col","closure","function","TRUE","FALSE","(m) ","base","base","1.6.2"
"mean","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"mean.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"mean.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"mean.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"mean.default","closure","function","TRUE","FALSE","(x, trim = 0, na.rm = FALSE, ...) ","base","base","1.6.2"
"median","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","base","base","1.6.2"
"mem.limits","closure","function","TRUE","FALSE","(nsize = NA, vsize = NA) ","base","base","1.6.2"
"memory.profile","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"menu","closure","function","TRUE","FALSE","(choices, graphics = FALSE, title = """") ","base","base","1.6.2"
"merge","closure","function","TRUE","FALSE","(x, y, ...) ","base","base","1.6.2"
"merge.data.frame","closure","function","TRUE","FALSE","(x, y, by = intersect(names(x), names(y)), by.x = by,     by.y = by, all = FALSE, all.x = all, all.y = all, sort = TRUE,     suffixes = c("".x"", "".y""), ...) ","base","base","1.6.2"
"merge.default","closure","function","TRUE","FALSE","(x, y, ...) ","base","base","1.6.2"
"methods","closure","function","TRUE","FALSE","(generic.function, class) ","base","base","1.6.2"
"min","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"missing","special","function","TRUE","NA","","base","base","1.6.2"
"mode","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"mode<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"model.extract","closure","function","TRUE","FALSE","(frame, component) ","base","base","1.6.2"
"model.frame","closure","function","TRUE","FALSE","(formula, ...) ","base","base","1.6.2"
"model.frame.aovlist","closure","function","TRUE","FALSE","(formula, data = NULL, ...) ","base","base","1.6.2"
"model.frame.default","closure","function","TRUE","FALSE","(formula, data = NULL, subset = NULL, na.action = na.fail,     drop.unused.levels = FALSE, xlev = NULL, ...) ","base","base","1.6.2"
"model.frame.glm","closure","function","TRUE","FALSE","(formula, data, na.action, ...) ","base","base","1.6.2"
"model.frame.lm","closure","function","TRUE","FALSE","(formula, data, na.action, ...) ","base","base","1.6.2"
"model.matrix","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"model.matrix.default","closure","function","TRUE","FALSE","(object, data = environment(object), contrasts.arg = NULL,     xlev = NULL, ...) ","base","base","1.6.2"
"model.matrix.glm.null","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"model.matrix.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"model.matrix.lm.null","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"model.offset","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"model.response","closure","function","TRUE","FALSE","(data, type = ""any"") ","base","base","1.6.2"
"model.tables","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"model.tables.aov","closure","function","TRUE","FALSE","(x, type = ""effects"", se = FALSE, cterms, ...) ","base","base","1.6.2"
"model.tables.aovlist","closure","function","TRUE","FALSE","(x, type = ""effects"", se = FALSE, ...) ","base","base","1.6.2"
"model.weights","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"month.abb","character","character","TRUE","FALSE","NA","base","base","1.6.2"
"month.name","character","character","TRUE","FALSE","NA","base","base","1.6.2"
"months","closure","function","TRUE","FALSE","(x, abbreviate) ","base","base","1.6.2"
"months.POSIXt","closure","function","TRUE","FALSE","(x, abbreviate = FALSE) ","base","base","1.6.2"
"mosaicplot","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"mosaicplot.default","closure","function","TRUE","FALSE","(x, main = NULL, xlab = NULL, ylab = NULL, sort = NULL,     off = NULL, dir = NULL, color = FALSE, shade = FALSE, margin = NULL,     type = c(""pearson"", ""deviance"", ""FT""), ...) ","base","base","1.6.2"
"mosaicplot.formula","closure","function","TRUE","FALSE","(formula, data = NULL, ..., subset) ","base","base","1.6.2"
"mostattributes<-","closure","function","TRUE","FALSE","(obj, value) ","base","base","1.6.2"
"mtext","closure","function","TRUE","FALSE","(text, side = 3, line = 0, outer = FALSE, at = NA, adj = NA,     cex = NA, col = NA, font = NA, vfont = NULL, ...) ","base","base","1.6.2"
"mvfft","closure","function","TRUE","FALSE","(z, inverse = FALSE) ","base","base","1.6.2"
"n2mfrow","closure","function","TRUE","FALSE","(nr.plots) ","base","base","1.6.2"
"na.action","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.action.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.exclude","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.exclude.data.frame","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.exclude.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.fail","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.fail.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.omit","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.omit.data.frame","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.omit.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.omit.ts","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"na.pass","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"names","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"names.default","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"names<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"names<-.default","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"napredict","closure","function","TRUE","FALSE","(omit, x, ...) ","base","base","1.6.2"
"napredict.default","closure","function","TRUE","FALSE","(omit, x, ...) ","base","base","1.6.2"
"napredict.exclude","closure","function","TRUE","FALSE","(omit, x, ...) ","base","base","1.6.2"
"naprint","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"naprint.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"naprint.exclude","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"naprint.omit","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"naresid","closure","function","TRUE","FALSE","(omit, x, ...) ","base","base","1.6.2"
"naresid.default","closure","function","TRUE","FALSE","(omit, x, ...) ","base","base","1.6.2"
"naresid.exclude","closure","function","TRUE","FALSE","(omit, x, ...) ","base","base","1.6.2"
"nargs","special","function","TRUE","NA","","base","base","1.6.2"
"native.enc","integer","integer","TRUE","FALSE","NA","base","base","1.6.2"
"nchar","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"nclass.FD","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"nclass.Sturges","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"nclass.scott","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"ncol","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"new.env","closure","function","TRUE","FALSE","(hash = FALSE, parent = parent.frame()) ","base","base","1.6.2"
"newestVersion","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"next","special","function","TRUE","NA","","base","base","1.6.2"
"nextn","closure","function","TRUE","FALSE","(n, factors = c(2, 3, 5)) ","base","base","1.6.2"
"nlevels","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"nlm","closure","function","TRUE","FALSE","(f, p, hessian = FALSE, typsize = rep(1, length(p)),     fscale = 1, print.level = 0, ndigit = 12, gradtol = 1e-06,     stepmax = max(1000 * sqrt(sum((p/typsize)^2)), 1000), steptol = 1e-06,     iterlim = 100, check.analyticals = TRUE, ...) ","base","base","1.6.2"
"noquote","closure","function","TRUE","FALSE","(obj) ","base","base","1.6.2"
"nrow","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"nsl","closure","function","TRUE","FALSE","(hostname) ","base","base","1.6.2"
"numeric","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"objWithClass","builtin","function","TRUE","NA","","base","base","1.6.2"
"object.size","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"objects","closure","function","TRUE","FALSE","(name, pos = -1, envir = as.environment(pos), all.names = FALSE,     pattern) ","base","base","1.6.2"
"offset","closure","function","TRUE","FALSE","(object) ","base","base","1.6.2"
"old.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, CRAN = getOption(""CRAN""), contriburl = contrib.url(CRAN),     method, available = NULL) ","base","base","1.6.2"
"on.exit","special","function","TRUE","NA","","base","base","1.6.2"
"open","closure","function","TRUE","FALSE","(con, ...) ","base","base","1.6.2"
"open.connection","closure","function","TRUE","FALSE","(con, open = ""r"", blocking = TRUE, ...) ","base","base","1.6.2"
"optim","closure","function","TRUE","FALSE","(par, fn, gr = NULL, method = c(""Nelder-Mead"", ""BFGS"",     ""CG"", ""L-BFGS-B"", ""SANN""), lower = -Inf, upper = Inf, control = list(),     hessian = FALSE, ...) ","base","base","1.6.2"
"optimise","closure","function","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     maximum = FALSE, tol = .Machine$double.eps^0.25, ...) ","base","base","1.6.2"
"optimize","closure","function","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     maximum = FALSE, tol = .Machine$double.eps^0.25, ...) ","base","base","1.6.2"
"options","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"order","closure","function","TRUE","FALSE","(..., na.last = TRUE, decreasing = FALSE) ","base","base","1.6.2"
"ordered","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"outer","closure","function","TRUE","FALSE","(X, Y, FUN = ""*"", ...) ","base","base","1.6.2"
"p.adjust","closure","function","TRUE","FALSE","(p, method = p.adjust.methods, n = length(p)) ","base","base","1.6.2"
"p.adjust.methods","character","character","TRUE","FALSE","NA","base","base","1.6.2"
"package.contents","closure","function","TRUE","FALSE","(pkg, lib.loc = NULL) ","base","base","1.6.2"
"package.dependencies","closure","function","TRUE","FALSE","(x, check = FALSE) ","base","base","1.6.2"
"package.description","closure","function","TRUE","FALSE","(pkg, lib.loc = NULL, fields = NULL) ","base","base","1.6.2"
"package.skeleton","closure","function","TRUE","FALSE","(name = ""anRpackage"", list, environment = .GlobalEnv,     path = ""."", force = FALSE) ","base","base","1.6.2"
"packageStatus","closure","function","TRUE","FALSE","(lib.loc = NULL, repositories = getOption(""repositories"")) ","base","base","1.6.2"
"page","closure","function","TRUE","FALSE","(x, method = c(""dput"", ""print""), ...) ","base","base","1.6.2"
"pairlist","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"pairs","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"pairs.default","closure","function","TRUE","FALSE","(x, labels, panel = points, ..., main = NULL, oma = NULL,     font.main = par(""font.main""), cex.main = par(""cex.main""),     lower.panel = panel, upper.panel = panel, diag.panel = NULL,     text.panel = textPanel, label.pos = 0.5 + has.diag/3, cex.labels = NULL,     font.labels = 1, row1attop = TRUE, gap = 1) ","base","base","1.6.2"
"pairs.formula","closure","function","TRUE","FALSE","(formula, data = NULL, ..., subset) ","base","base","1.6.2"
"palette","closure","function","TRUE","FALSE","(value) ","base","base","1.6.2"
"panel.smooth","closure","function","TRUE","FALSE","(x, y, col = par(""col""), bg = NA, pch = par(""pch""),     cex = 1, col.smooth = ""red"", span = 2/3, iter = 3, ...) ","base","base","1.6.2"
"par","closure","function","TRUE","FALSE","(..., no.readonly = FALSE) ","base","base","1.6.2"
"parent.env","closure","function","TRUE","FALSE","(env) ","base","base","1.6.2"
"parent.env<-","closure","function","TRUE","FALSE","(env, value) ","base","base","1.6.2"
"parent.frame","closure","function","TRUE","FALSE","(n = 1) ","base","base","1.6.2"
"parse","closure","function","TRUE","FALSE","(file = """", n = NULL, text = NULL, prompt = ""?"", white = FALSE) ","base","base","1.6.2"
"parse.dcf","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"paste","closure","function","TRUE","FALSE","(..., sep = "" "", collapse = NULL) ","base","base","1.6.2"
"path.expand","closure","function","TRUE","FALSE","(path) ","base","base","1.6.2"
"pbeta","closure","function","TRUE","FALSE","(q, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pbinom","closure","function","TRUE","FALSE","(q, size, prob, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pbirthday","closure","function","TRUE","FALSE","(n, classes = 365, coincident = 2) ","base","base","1.6.2"
"pcauchy","closure","function","TRUE","FALSE","(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pchisq","closure","function","TRUE","FALSE","(q, df, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pdf","closure","function","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.pdf"", ""Rplot%03d.pdf""),     width = 6, height = 6, onefile = TRUE, ...) ","base","base","1.6.2"
"pentagamma","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"persp","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"persp.default","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, xlim = range(x), ylim = range(y), zlim = range(z, na.rm = TRUE),     xlab = NULL, ylab = NULL, zlab = NULL, main = NULL, sub = NULL,     theta = 0, phi = 15, r = sqrt(3), d = 1, scale = TRUE, expand = 1,     col = ""white"", border = NULL, ltheta = -135, lphi = 0, shade = NA,     box = TRUE, axes = TRUE, nticks = 5, ticktype = ""simple"",     ...) ","base","base","1.6.2"
"pexp","closure","function","TRUE","FALSE","(q, rate = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pf","closure","function","TRUE","FALSE","(q, df1, df2, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pgamma","closure","function","TRUE","FALSE","(q, shape, rate = 1, scale = 1/rate, lower.tail = TRUE,     log.p = FALSE) ","base","base","1.6.2"
"pgeom","closure","function","TRUE","FALSE","(q, prob, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"phyper","closure","function","TRUE","FALSE","(q, m, n, k, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pi","double","numeric","TRUE","FALSE","NA","base","base","1.6.2"
"pico","closure","function","TRUE","FALSE","(name = NULL, file = """") ","base","base","1.6.2"
"pictex","closure","function","TRUE","FALSE","(file = ""Rplots.tex"", width = 5, height = 4, debug = FALSE,     bg = ""white"", fg = ""black"") ","base","base","1.6.2"
"pie","closure","function","TRUE","FALSE","(x, labels = names(x), edges = 200, radius = 0.8, density = NULL,     angle = 45, col = NULL, border = NULL, lty = NULL, main = NULL,     ...) ","base","base","1.6.2"
"piechart","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"pipe","closure","function","TRUE","FALSE","(description, open = """", encoding = getOption(""encoding"")) ","base","base","1.6.2"
"plnorm","closure","function","TRUE","FALSE","(q, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"plogis","closure","function","TRUE","FALSE","(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"plot","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"plot.POSIXct","closure","function","TRUE","FALSE","(x, y, xlab = """", xaxt = par(""xaxt""), ...) ","base","base","1.6.2"
"plot.POSIXlt","closure","function","TRUE","FALSE","(x, y, xlab = """", xaxt = par(""xaxt""), ...) ","base","base","1.6.2"
"plot.TukeyHSD","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"plot.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"plot.default","closure","function","TRUE","FALSE","(x, y = NULL, type = ""p"", xlim = NULL, ylim = NULL,     log = """", main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     ann = par(""ann""), axes = TRUE, frame.plot = axes, panel.first = NULL,     panel.last = NULL, col = par(""col""), bg = NA, pch = par(""pch""),     cex = 1, lty = par(""lty""), lab = par(""lab""), lwd = par(""lwd""),     asp = NA, ...) ","base","base","1.6.2"
"plot.density","closure","function","TRUE","FALSE","(x, main = NULL, xlab = NULL, ylab = ""Density"", type = ""l"",     zero.line = TRUE, ...) ","base","base","1.6.2"
"plot.factor","closure","function","TRUE","FALSE","(x, y, legend.text = levels(y), ...) ","base","base","1.6.2"
"plot.formula","closure","function","TRUE","FALSE","(formula, data = parent.frame(), ..., subset, ylab = varnames[response],     ask = TRUE) ","base","base","1.6.2"
"plot.function","closure","function","TRUE","FALSE","(x, from = 0, to = 1, xlim = NULL, ...) ","base","base","1.6.2"
"plot.histogram","closure","function","TRUE","FALSE","(x, freq = equidist, density = NULL, angle = 45, col = NULL,     border = par(""fg""), lty = NULL, main = paste(""Histogram of"",         x$xname), xlim = range(x$breaks), ylim = NULL, xlab = x$xname,     ylab, axes = TRUE, labels = FALSE, add = FALSE, ...) ","base","base","1.6.2"
"plot.lm","closure","function","TRUE","FALSE","(x, which = 1:4, caption = c(""Residuals vs Fitted"",     ""Normal Q-Q plot"", ""Scale-Location plot"", ""Cook's distance plot""),     panel = points, sub.caption = deparse(x$call), main = """",     ask = prod(par(""mfcol"")) < length(which) && dev.interactive(),     ..., id.n = 3, labels.id = names(residuals(x)), cex.id = 0.75) ","base","base","1.6.2"
"plot.mlm","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"plot.mts","closure","function","TRUE","FALSE","(x, plot.type = c(""multiple"", ""single""), panel = lines,     log = """", col = par(""col""), bg = NA, pch = par(""pch""), cex = par(""cex""),     lty = par(""lty""), lwd = par(""lwd""), ann = par(""ann""), xlab = ""Time"",     type = ""l"", main = NULL, oma = c(6, 0, 5, 0), ...) ","base","base","1.6.2"
"plot.new","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"plot.table","closure","function","TRUE","FALSE","(x, type = ""h"", ylim = c(0, max(x)), lwd = 2, xlab = NULL,     ylab = NULL, frame.plot = is.num, ...) ","base","base","1.6.2"
"plot.ts","closure","function","TRUE","FALSE","(x, y = NULL, type = ""l"", xlim = NULL, ylim = NULL,     xlab = ""Time"", ylab, log = """", col = par(""col""), bg = NA,     pch = par(""pch""), cex = par(""cex""), lty = par(""lty""), lwd = par(""lwd""),     axes = TRUE, frame.plot = axes, ann = par(""ann""), main = NULL,     plot.type = c(""multiple"", ""single""), xy.labels = n <= 150,     xy.lines = do.lab, panel = lines, ...) ","base","base","1.6.2"
"plot.window","closure","function","TRUE","FALSE","(xlim, ylim, log = """", asp = NA, ...) ","base","base","1.6.2"
"plot.xy","closure","function","TRUE","FALSE","(xy, type, pch = 1, lty = ""solid"", col = par(""fg""),     bg = NA, cex = 1, ...) ","base","base","1.6.2"
"pmatch","closure","function","TRUE","FALSE","(x, table, nomatch = NA, duplicates.ok = FALSE) ","base","base","1.6.2"
"pmax","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"pmin","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"pnbinom","closure","function","TRUE","FALSE","(q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"png","closure","function","TRUE","FALSE","(filename = ""Rplot%03d.png"", width = 480, height = 480,     pointsize = 12, gamma = 1, colortype = getOption(""X11colortype""),     maxcubesize = 256, bg = ""white"") ","base","base","1.6.2"
"pnorm","closure","function","TRUE","FALSE","(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"points","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"points.default","closure","function","TRUE","FALSE","(x, y = NULL, type = ""p"", pch = par(""pch""), col = par(""col""),     bg = NA, cex = 1, ...) ","base","base","1.6.2"
"points.formula","closure","function","TRUE","FALSE","(formula, data = parent.frame(), ..., subset) ","base","base","1.6.2"
"poisson","closure","function","TRUE","FALSE","(link = ""log"") ","base","base","1.6.2"
"poly","closure","function","TRUE","FALSE","(x, ..., degree = 1, coefs = NULL) ","base","base","1.6.2"
"polygon","closure","function","TRUE","FALSE","(x, y = NULL, density = NULL, angle = 45, border = NULL,     col = NA, lty = NULL, xpd = NULL, ..debug.hatch = FALSE,     ...) ","base","base","1.6.2"
"polym","closure","function","TRUE","FALSE","(..., degree = 1) ","base","base","1.6.2"
"polyroot","closure","function","TRUE","FALSE","(z) ","base","base","1.6.2"
"pos.to.env","builtin","function","TRUE","NA","","base","base","1.6.2"
"postscript","closure","function","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.ps"", ""Rplot%03d.ps""),     onefile = TRUE, family, ...) ","base","base","1.6.2"
"power","closure","function","TRUE","FALSE","(lambda = 1) ","base","base","1.6.2"
"ppoints","closure","function","TRUE","FALSE","(n, a = ifelse(n <= 10, 3/8, 1/2)) ","base","base","1.6.2"
"ppois","closure","function","TRUE","FALSE","(q, lambda, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"predict","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"predict.glm","closure","function","TRUE","FALSE","(object, newdata = NULL, type = c(""link"", ""response"",     ""terms""), se.fit = FALSE, dispersion = NULL, terms = NULL,     ...) ","base","base","1.6.2"
"predict.lm","closure","function","TRUE","FALSE","(object, newdata, se.fit = FALSE, scale = NULL, df = Inf,     interval = c(""none"", ""confidence"", ""prediction""), level = 0.95,     type = c(""response"", ""terms""), terms = NULL, ...) ","base","base","1.6.2"
"predict.mlm","closure","function","TRUE","FALSE","(object, newdata, se.fit = FALSE, ...) ","base","base","1.6.2"
"predict.poly","closure","function","TRUE","FALSE","(object, newdata, ...) ","base","base","1.6.2"
"preplot","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"pretty","closure","function","TRUE","FALSE","(x, n = 5, min.n = n%/%3, shrink.sml = 0.75, high.u.bias = 1.5,     u5.bias = 0.5 + 1.5 * high.u.bias, eps.correct = 0) ","base","base","1.6.2"
"prettyNum","closure","function","TRUE","FALSE","(x, big.mark = """", big.interval = 3, small.mark = """",     small.interval = 5, decimal.mark = ""."", ...) ","base","base","1.6.2"
"print","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.AsIs","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.TukeyHSD","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.anova","closure","function","TRUE","FALSE","(x, digits = max(getOption(""digits"") - 2, 3), signif.stars = getOption(""show.signif.stars""),     ...) ","base","base","1.6.2"
"print.aov","closure","function","TRUE","FALSE","(x, intercept = FALSE, tol = .Machine$double.eps^0.5,     ...) ","base","base","1.6.2"
"print.aovlist","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.atomic","closure","function","TRUE","FALSE","(x, quote = TRUE, ...) ","base","base","1.6.2"
"print.by","closure","function","TRUE","FALSE","(x, ..., vsep) ","base","base","1.6.2"
"print.coefmat","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 2), signif.stars = getOption(""show.signif.stars""),     dig.tst = max(1, min(5, digits - 1)), cs.ind = 1:k, tst.ind = k +         1, zap.ind = integer(0), P.values = NULL, has.Pvalue = nc >=         4 && substr(colnames(x)[nc], 1, 3) == ""Pr("", eps.Pvalue = .Machine$double.eps,     na.print = """", ...) ","base","base","1.6.2"
"print.connection","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.data.frame","closure","function","TRUE","FALSE","(x, ..., digits = NULL, quote = FALSE, right = TRUE) ","base","base","1.6.2"
"print.default","closure","function","TRUE","FALSE","(x, digits = NULL, quote = TRUE, na.print = NULL, print.gap = NULL,     right = FALSE, ...) ","base","base","1.6.2"
"print.density","closure","function","TRUE","FALSE","(x, digits = NULL, ...) ","base","base","1.6.2"
"print.difftime","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","1.6.2"
"print.dummy.coef","closure","function","TRUE","FALSE","(x, ..., title) ","base","base","1.6.2"
"print.dummy.coef.list","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.factor","closure","function","TRUE","FALSE","(x, quote = FALSE, max.levels = NULL, width = getOption(""width""),     ...) ","base","base","1.6.2"
"print.family","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.formula","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.ftable","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","1.6.2"
"print.glm","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","base","1.6.2"
"print.glm.null","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","base","1.6.2"
"print.hsearch","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.htest","closure","function","TRUE","FALSE","(x, digits = 4, quote = TRUE, prefix = """", ...) ","base","base","1.6.2"
"print.infl","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 4), ...) ","base","base","1.6.2"
"print.integrate","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","1.6.2"
"print.libraryIQR","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.listof","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.lm","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","base","1.6.2"
"print.lm.null","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","base","1.6.2"
"print.logLik","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","1.6.2"
"print.matrix","closure","function","TRUE","FALSE","(x, rowlab = dn[[1]], collab = dn[[2]], quote = TRUE,     right = FALSE, na.print = NULL, print.gap = NULL, ...) ","base","base","1.6.2"
"print.mtable","closure","function","TRUE","FALSE","(x, ..., digits = getOption(""digits""), quote = FALSE,     right = FALSE) ","base","base","1.6.2"
"print.noquote","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.octmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.packageIQR","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.packageInfo","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.packageStatus","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.recordedplot","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.rle","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","1.6.2"
"print.simple.list","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.socket","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.summary.aov","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), symbolic.cor = p >     4, signif.stars = getOption(""show.signif.stars""), ...) ","base","base","1.6.2"
"print.summary.aovlist","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.summary.glm","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     symbolic.cor = p > 4, signif.stars = getOption(""show.signif.stars""),     ...) ","base","base","1.6.2"
"print.summary.glm.null","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","base","1.6.2"
"print.summary.lm","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), symbolic.cor = p >     4, signif.stars = getOption(""show.signif.stars""), ...) ","base","base","1.6.2"
"print.summary.lm.null","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","base","1.6.2"
"print.summary.manova","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","1.6.2"
"print.summary.table","closure","function","TRUE","FALSE","(x, digits = max(1, getOption(""digits"") - 3), ...) ","base","base","1.6.2"
"print.table","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), quote = FALSE, na.print = """",     ...) ","base","base","1.6.2"
"print.tables.aov","closure","function","TRUE","FALSE","(x, digits = 4, ...) ","base","base","1.6.2"
"print.terms","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"print.ts","closure","function","TRUE","FALSE","(x, calendar, ...) ","base","base","1.6.2"
"print.xtabs","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"prmatrix","closure","function","TRUE","FALSE","(x, rowlab = dn[[1]], collab = dn[[2]], quote = TRUE,     right = FALSE, na.print = NULL, print.gap = NULL, ...) ","base","base","1.6.2"
"proc.time","builtin","function","TRUE","NA","","base","base","1.6.2"
"prod","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"profile","closure","function","TRUE","FALSE","(fitted, ...) ","base","base","1.6.2"
"proj","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"proj.aov","closure","function","TRUE","FALSE","(object, onedf = FALSE, unweighted.scale = FALSE, ...) ","base","base","1.6.2"
"proj.aovlist","closure","function","TRUE","FALSE","(object, onedf = FALSE, unweighted.scale = FALSE, ...) ","base","base","1.6.2"
"proj.default","closure","function","TRUE","FALSE","(object, onedf = TRUE, ...) ","base","base","1.6.2"
"proj.lm","closure","function","TRUE","FALSE","(object, onedf = FALSE, unweighted.scale = FALSE, ...) ","base","base","1.6.2"
"prompt","closure","function","TRUE","FALSE","(object, filename = paste0(name, "".Rd""), name = NULL,     ...) ","base","base","1.6.2"
"prompt.data.frame","closure","function","TRUE","FALSE","(object, filename = paste0(name, "".Rd""), name = NULL,     ...) ","base","base","1.6.2"
"prompt.default","closure","function","TRUE","FALSE","(object, filename = paste0(name, "".Rd""), name = NULL,     force.function = FALSE, ...) ","base","base","1.6.2"
"prop.table","closure","function","TRUE","FALSE","(x, margin = NULL) ","base","base","1.6.2"
"provide","closure","function","TRUE","FALSE","(package) ","base","base","1.6.2"
"ps.options","closure","function","TRUE","FALSE","(..., reset = FALSE, override.check = FALSE) ","base","base","1.6.2"
"psignrank","closure","function","TRUE","FALSE","(q, n, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pt","closure","function","TRUE","FALSE","(q, df, ncp, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"ptukey","closure","function","TRUE","FALSE","(q, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"punif","closure","function","TRUE","FALSE","(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pushBack","closure","function","TRUE","FALSE","(data, connection, newLine = TRUE) ","base","base","1.6.2"
"pushBackLength","closure","function","TRUE","FALSE","(connection) ","base","base","1.6.2"
"pweibull","closure","function","TRUE","FALSE","(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"pwilcox","closure","function","TRUE","FALSE","(q, m, n, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"q","closure","function","TRUE","FALSE","(save = ""default"", status = 0, runLast = TRUE) ","base","base","1.6.2"
"qbeta","closure","function","TRUE","FALSE","(p, shape1, shape2, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qbinom","closure","function","TRUE","FALSE","(p, size, prob, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qbirthday","closure","function","TRUE","FALSE","(prob = 0.5, classes = 365, coincident = 2) ","base","base","1.6.2"
"qcauchy","closure","function","TRUE","FALSE","(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qchisq","closure","function","TRUE","FALSE","(p, df, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qexp","closure","function","TRUE","FALSE","(p, rate = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qf","closure","function","TRUE","FALSE","(p, df1, df2, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qgamma","closure","function","TRUE","FALSE","(p, shape, rate = 1, scale = 1/rate, lower.tail = TRUE,     log.p = FALSE) ","base","base","1.6.2"
"qgeom","closure","function","TRUE","FALSE","(p, prob, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qhyper","closure","function","TRUE","FALSE","(p, m, n, k, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qlnorm","closure","function","TRUE","FALSE","(p, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qlogis","closure","function","TRUE","FALSE","(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qnbinom","closure","function","TRUE","FALSE","(p, size, prob, mu, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qnorm","closure","function","TRUE","FALSE","(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qpois","closure","function","TRUE","FALSE","(p, lambda, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qqline","closure","function","TRUE","FALSE","(y, ...) ","base","base","1.6.2"
"qqnorm","closure","function","TRUE","FALSE","(y, ...) ","base","base","1.6.2"
"qqnorm.default","closure","function","TRUE","FALSE","(y, ylim, main = ""Normal Q-Q Plot"", xlab = ""Theoretical Quantiles"",     ylab = ""Sample Quantiles"", plot.it = TRUE, ...) ","base","base","1.6.2"
"qqplot","closure","function","TRUE","FALSE","(x, y, plot.it = TRUE, xlab = deparse(substitute(x)),     ylab = deparse(substitute(y)), ...) ","base","base","1.6.2"
"qr","closure","function","TRUE","FALSE","(x, tol = 1e-07) ","base","base","1.6.2"
"qr.Q","closure","function","TRUE","FALSE","(qr, complete = FALSE, Dvec = rep(if (cmplx) 1 + (0+0i) else 1,     if (complete) dqr[1] else min(dqr))) ","base","base","1.6.2"
"qr.R","closure","function","TRUE","FALSE","(qr, complete = FALSE) ","base","base","1.6.2"
"qr.X","closure","function","TRUE","FALSE","(qr, complete = FALSE, ncol = if (complete) nrow(R) else min(dim(R))) ","base","base","1.6.2"
"qr.coef","closure","function","TRUE","FALSE","(qr, y) ","base","base","1.6.2"
"qr.fitted","closure","function","TRUE","FALSE","(qr, y, k = qr$rank) ","base","base","1.6.2"
"qr.qty","closure","function","TRUE","FALSE","(qr, y) ","base","base","1.6.2"
"qr.qy","closure","function","TRUE","FALSE","(qr, y) ","base","base","1.6.2"
"qr.resid","closure","function","TRUE","FALSE","(qr, y) ","base","base","1.6.2"
"qr.solve","closure","function","TRUE","FALSE","(a, b, tol = 1e-07) ","base","base","1.6.2"
"qsignrank","closure","function","TRUE","FALSE","(p, n, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qt","closure","function","TRUE","FALSE","(p, df, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qtukey","closure","function","TRUE","FALSE","(p, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"quantile","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"quantile.default","closure","function","TRUE","FALSE","(x, probs = seq(0, 1, 0.25), na.rm = FALSE, names = TRUE,     ...) ","base","base","1.6.2"
"quarters","closure","function","TRUE","FALSE","(x, abbreviate) ","base","base","1.6.2"
"quarters.POSIXt","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"quartz","closure","function","TRUE","FALSE","(display = """", width = 5, height = 5, pointsize = 12,     family = ""Helvetica"", antialias = TRUE, autorefresh = TRUE) ","base","base","1.6.2"
"quasi","closure","function","TRUE","FALSE","(link = ""identity"", variance = ""constant"") ","base","base","1.6.2"
"quasibinomial","closure","function","TRUE","FALSE","(link = ""logit"") ","base","base","1.6.2"
"quasipoisson","closure","function","TRUE","FALSE","(link = ""log"") ","base","base","1.6.2"
"quit","closure","function","TRUE","FALSE","(save = ""default"", status = 0, runLast = TRUE) ","base","base","1.6.2"
"qunif","closure","function","TRUE","FALSE","(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"quote","special","function","TRUE","NA","","base","base","1.6.2"
"qweibull","closure","function","TRUE","FALSE","(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"qwilcox","closure","function","TRUE","FALSE","(p, m, n, lower.tail = TRUE, log.p = FALSE) ","base","base","1.6.2"
"rainbow","closure","function","TRUE","FALSE","(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n,     gamma = 1) ","base","base","1.6.2"
"range","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"range.default","closure","function","TRUE","FALSE","(..., na.rm = FALSE, finite = FALSE) ","base","base","1.6.2"
"rank","closure","function","TRUE","FALSE","(x, na.last = TRUE) ","base","base","1.6.2"
"rbeta","closure","function","TRUE","FALSE","(n, shape1, shape2) ","base","base","1.6.2"
"rbind","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","1.6.2"
"rbind.data.frame","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","1.6.2"
"rbinom","closure","function","TRUE","FALSE","(n, size, prob) ","base","base","1.6.2"
"rcauchy","closure","function","TRUE","FALSE","(n, location = 0, scale = 1) ","base","base","1.6.2"
"rchisq","closure","function","TRUE","FALSE","(n, df, ncp = 0) ","base","base","1.6.2"
"read.00Index","closure","function","TRUE","FALSE","(file) ","base","base","1.6.2"
"read.csv","closure","function","TRUE","FALSE","(file, header = TRUE, sep = "","", quote = ""\"""", dec = ""."",     fill = TRUE, ...) ","base","base","1.6.2"
"read.csv2","closure","function","TRUE","FALSE","(file, header = TRUE, sep = "";"", quote = ""\"""", dec = "","",     fill = TRUE, ...) ","base","base","1.6.2"
"read.dcf","closure","function","TRUE","FALSE","(file, fields = NULL) ","base","base","1.6.2"
"read.delim","closure","function","TRUE","FALSE","(file, header = TRUE, sep = ""\t"", quote = ""\"""", dec = ""."",     fill = TRUE, ...) ","base","base","1.6.2"
"read.delim2","closure","function","TRUE","FALSE","(file, header = TRUE, sep = ""\t"", quote = ""\"""", dec = "","",     fill = TRUE, ...) ","base","base","1.6.2"
"read.ftable","closure","function","TRUE","FALSE","(file, sep = """", quote = ""\"""", row.var.names, col.vars,     skip = 0) ","base","base","1.6.2"
"read.fwf","closure","function","TRUE","FALSE","(file, widths, sep = ""\t"", as.is = FALSE, skip = 0,     row.names, col.names, n = -1, ...) ","base","base","1.6.2"
"read.socket","closure","function","TRUE","FALSE","(socket, maxlen = 256, loop = FALSE) ","base","base","1.6.2"
"read.table","closure","function","TRUE","FALSE","(file, header = FALSE, sep = """", quote = ""\""'"", dec = ""."",     row.names, col.names, as.is = FALSE, na.strings = ""NA"", colClasses = NA,     nrows = -1, skip = 0, check.names = TRUE, fill = !blank.lines.skip,     strip.white = FALSE, blank.lines.skip = TRUE, comment.char = ""#"") ","base","base","1.6.2"
"read.table.url","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"readBin","closure","function","TRUE","FALSE","(con, what, n = 1, size = NA, signed = TRUE, endian = .Platform$endian) ","base","base","1.6.2"
"readChar","closure","function","TRUE","FALSE","(con, nchars) ","base","base","1.6.2"
"readLines","closure","function","TRUE","FALSE","(con = stdin(), n = -1, ok = TRUE) ","base","base","1.6.2"
"readline","closure","function","TRUE","FALSE","(prompt = """") ","base","base","1.6.2"
"real","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"recordPlot","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"recover","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"rect","closure","function","TRUE","FALSE","(xleft, ybottom, xright, ytop, density = NULL, angle = 45,     col = NULL, border = NULL, lty = NULL, lwd = par(""lwd""),     xpd = NULL, ...) ","base","base","1.6.2"
"reformulate","closure","function","TRUE","FALSE","(termlabels, response = NULL) ","base","base","1.6.2"
"reg.finalizer","builtin","function","TRUE","NA","","base","base","1.6.2"
"regexpr","closure","function","TRUE","FALSE","(pattern, text, extended = TRUE, perl = FALSE) ","base","base","1.6.2"
"relevel","closure","function","TRUE","FALSE","(x, ref, ...) ","base","base","1.6.2"
"relevel.default","closure","function","TRUE","FALSE","(x, ref, ...) ","base","base","1.6.2"
"relevel.factor","closure","function","TRUE","FALSE","(x, ref, ...) ","base","base","1.6.2"
"relevel.ordered","closure","function","TRUE","FALSE","(x, ref, ...) ","base","base","1.6.2"
"remove","closure","function","TRUE","FALSE","(..., list = character(0), pos = -1, envir = as.environment(pos),     inherits = FALSE) ","base","base","1.6.2"
"remove.packages","closure","function","TRUE","FALSE","(pkgs, lib) ","base","base","1.6.2"
"removeCConverter","closure","function","TRUE","FALSE","(id) ","base","base","1.6.2"
"removeTaskCallback","closure","function","TRUE","FALSE","(id) ","base","base","1.6.2"
"rep","closure","function","TRUE","FALSE","(x, times, length.out, each) ","base","base","1.6.2"
"rep.int","closure","function","TRUE","FALSE","(x, times) ","base","base","1.6.2"
"repeat","special","function","TRUE","NA","","base","base","1.6.2"
"replace","closure","function","TRUE","FALSE","(x, list, values) ","base","base","1.6.2"
"replayPlot","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"replications","closure","function","TRUE","FALSE","(formula, data = NULL, na.action) ","base","base","1.6.2"
"require","closure","function","TRUE","FALSE","(package, quietly = FALSE, warn.conflicts = TRUE, keep.source = getOption(""keep.source.pkgs"")) ","base","base","1.6.2"
"reshape","closure","function","TRUE","FALSE","(data, varying = NULL, v.names = NULL, timevar = ""time"",     idvar = ""id"", ids = 1:NROW(data), times = seq(length = length(varying[[1]])),     drop = NULL, direction, new.row.names = NULL, split = list(regexp = ""\\."",         include = FALSE)) ","base","base","1.6.2"
"reshapeLong","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"reshapeWide","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"resid","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"residuals","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"residuals.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"residuals.glm","closure","function","TRUE","FALSE","(object, type = c(""deviance"", ""pearson"", ""working"",     ""response"", ""partial""), ...) ","base","base","1.6.2"
"residuals.lm","closure","function","TRUE","FALSE","(object, type = c(""working"", ""response"", ""deviance"",     ""pearson"", ""partial""), ...) ","base","base","1.6.2"
"restart","closure","function","TRUE","FALSE","(on = TRUE) ","base","base","1.6.2"
"return","special","function","TRUE","NA","","base","base","1.6.2"
"rev","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"rexp","closure","function","TRUE","FALSE","(n, rate = 1) ","base","base","1.6.2"
"rf","closure","function","TRUE","FALSE","(n, df1, df2) ","base","base","1.6.2"
"rgamma","closure","function","TRUE","FALSE","(n, shape, rate = 1, scale = 1/rate) ","base","base","1.6.2"
"rgb","closure","function","TRUE","FALSE","(red, green, blue, names = NULL, maxColorValue = 1) ","base","base","1.6.2"
"rgeom","closure","function","TRUE","FALSE","(n, prob) ","base","base","1.6.2"
"rhyper","closure","function","TRUE","FALSE","(nn, m, n, k) ","base","base","1.6.2"
"rle","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"rlnorm","closure","function","TRUE","FALSE","(n, meanlog = 0, sdlog = 1) ","base","base","1.6.2"
"rlogis","closure","function","TRUE","FALSE","(n, location = 0, scale = 1) ","base","base","1.6.2"
"rm","closure","function","TRUE","FALSE","(..., list = character(0), pos = -1, envir = as.environment(pos),     inherits = FALSE) ","base","base","1.6.2"
"rnbinom","closure","function","TRUE","FALSE","(n, size, prob, mu) ","base","base","1.6.2"
"rnorm","closure","function","TRUE","FALSE","(n, mean = 0, sd = 1) ","base","base","1.6.2"
"round","closure","function","TRUE","FALSE","(x, digits = 0) ","base","base","1.6.2"
"round.POSIXt","closure","function","TRUE","FALSE","(x, units = c(""secs"", ""mins"", ""hours"", ""days"")) ","base","base","1.6.2"
"round.difftime","closure","function","TRUE","FALSE","(x, digits = 0) ","base","base","1.6.2"
"row","closure","function","TRUE","FALSE","(x, as.factor = FALSE) ","base","base","1.6.2"
"row.names","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"row.names.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"row.names.default","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"row.names<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"row.names<-.data.frame","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"row.names<-.default","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"rowMeans","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","1.6.2"
"rowSums","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","1.6.2"
"rownames","closure","function","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""row"") ","base","base","1.6.2"
"rownames<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"rowsum","closure","function","TRUE","FALSE","(x, group, reorder = TRUE, ...) ","base","base","1.6.2"
"rowsum.data.frame","closure","function","TRUE","FALSE","(x, group, reorder = TRUE, ...) ","base","base","1.6.2"
"rowsum.default","closure","function","TRUE","FALSE","(x, group, reorder = TRUE, ...) ","base","base","1.6.2"
"rpois","closure","function","TRUE","FALSE","(n, lambda) ","base","base","1.6.2"
"rsignrank","closure","function","TRUE","FALSE","(nn, n) ","base","base","1.6.2"
"rstandard","closure","function","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj),     sd = sqrt(deviance(lm.obj)/df.residual(lm.obj))) ","base","base","1.6.2"
"rstudent","closure","function","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj)) ","base","base","1.6.2"
"rt","closure","function","TRUE","FALSE","(n, df) ","base","base","1.6.2"
"rug","closure","function","TRUE","FALSE","(x, ticksize = 0.03, side = 1, lwd = 0.5, col, quiet = getOption(""warn"") <     0, ...) ","base","base","1.6.2"
"runif","closure","function","TRUE","FALSE","(n, min = 0, max = 1) ","base","base","1.6.2"
"rweibull","closure","function","TRUE","FALSE","(n, shape, scale = 1) ","base","base","1.6.2"
"rwilcox","closure","function","TRUE","FALSE","(nn, m, n) ","base","base","1.6.2"
"sample","closure","function","TRUE","FALSE","(x, size, replace = FALSE, prob = NULL) ","base","base","1.6.2"
"sapply","closure","function","TRUE","FALSE","(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE) ","base","base","1.6.2"
"save","closure","function","TRUE","FALSE","(..., list = character(0), file = stop(""`file' must be specified""),     ascii = FALSE, version = NULL, envir = parent.frame(), compress = FALSE) ","base","base","1.6.2"
"save.image","closure","function","TRUE","FALSE","(file = "".RData"", version = NULL, ascii = FALSE, compress = FALSE,     safe = TRUE) ","base","base","1.6.2"
"savehistory","closure","function","TRUE","FALSE","(file = "".Rhistory"") ","base","base","1.6.2"
"scale","closure","function","TRUE","FALSE","(x, center = TRUE, scale = TRUE) ","base","base","1.6.2"
"scale.default","closure","function","TRUE","FALSE","(x, center = TRUE, scale = TRUE) ","base","base","1.6.2"
"scan","closure","function","TRUE","FALSE","(file = """", what = double(0), nmax = -1, n = -1, sep = """",     quote = if (sep == ""\n"") """" else ""'\"""", dec = ""."", skip = 0,     nlines = 0, na.strings = ""NA"", flush = FALSE, fill = FALSE,     strip.white = FALSE, quiet = FALSE, blank.lines.skip = TRUE,     multi.line = TRUE, comment.char = """") ","base","base","1.6.2"
"scan.url","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"screen","closure","function","TRUE","FALSE","(n = .split.cur.screen, new = TRUE) ","base","base","1.6.2"
"sd","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","base","base","1.6.2"
"se.aov","closure","function","TRUE","FALSE","(object, n, type = ""means"") ","base","base","1.6.2"
"se.aovlist","closure","function","TRUE","FALSE","(object, dn.proj, dn.strata, factors, mf, efficiency,     n, type = ""diff.means"", ...) ","base","base","1.6.2"
"se.contrast","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"se.contrast.aov","closure","function","TRUE","FALSE","(object, contrast.obj, coef = contr.helmert(ncol(contrast))[,     1], data = NULL, ...) ","base","base","1.6.2"
"se.contrast.aovlist","closure","function","TRUE","FALSE","(object, contrast.obj, coef = contr.helmert(ncol(contrast))[,     1], data = NULL, ...) ","base","base","1.6.2"
"search","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"searchpaths","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"seek","closure","function","TRUE","FALSE","(con, ...) ","base","base","1.6.2"
"seek.connection","closure","function","TRUE","FALSE","(con, where = NA, origin = ""start"", rw = """", ...) ","base","base","1.6.2"
"segments","closure","function","TRUE","FALSE","(x0, y0, x1, y1, col = par(""fg""), lty = par(""lty""),     lwd = par(""lwd""), ...) ","base","base","1.6.2"
"seq","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"seq.POSIXt","closure","function","TRUE","FALSE","(from, to, by, length.out = NULL, along.with = NULL,     ...) ","base","base","1.6.2"
"seq.default","closure","function","TRUE","FALSE","(from = 1, to = 1, by = ((to - from)/(length.out - 1)),     length.out = NULL, along.with = NULL, ...) ","base","base","1.6.2"
"sequence","closure","function","TRUE","FALSE","(nvec) ","base","base","1.6.2"
"set.seed","closure","function","TRUE","FALSE","(seed, kind = NULL) ","base","base","1.6.2"
"setCConverterStatus","closure","function","TRUE","FALSE","(id, status) ","base","base","1.6.2"
"setdiff","closure","function","TRUE","FALSE","(x, y) ","base","base","1.6.2"
"setequal","closure","function","TRUE","FALSE","(x, y) ","base","base","1.6.2"
"setwd","closure","function","TRUE","FALSE","(dir) ","base","base","1.6.2"
"showConnections","closure","function","TRUE","FALSE","(all = FALSE) ","base","base","1.6.2"
"sign","builtin","function","TRUE","NA","","base","base","1.6.2"
"signif","closure","function","TRUE","FALSE","(x, digits = 6) ","base","base","1.6.2"
"sin","builtin","function","TRUE","NA","","base","base","1.6.2"
"single","closure","function","TRUE","FALSE","(length = 0) ","base","base","1.6.2"
"sinh","builtin","function","TRUE","NA","","base","base","1.6.2"
"sink","closure","function","TRUE","FALSE","(file = NULL, append = FALSE, type = c(""output"", ""message"")) ","base","base","1.6.2"
"sink.number","closure","function","TRUE","FALSE","(type = c(""output"", ""message"")) ","base","base","1.6.2"
"socketConnection","closure","function","TRUE","FALSE","(host = ""localhost"", port, server = FALSE, blocking = FALSE,     open = ""a+"", encoding = getOption(""encoding"")) ","base","base","1.6.2"
"solve","closure","function","TRUE","FALSE","(a, b, ...) ","base","base","1.6.2"
"solve.default","closure","function","TRUE","FALSE","(a, b, tol = 1e-07, ...) ","base","base","1.6.2"
"solve.qr","closure","function","TRUE","FALSE","(a, b, tol = 1e-07, ...) ","base","base","1.6.2"
"sort","closure","function","TRUE","FALSE","(x, partial = NULL, na.last = NA, decreasing = FALSE,     method = c(""shell"", ""quick""), index.return = FALSE) ","base","base","1.6.2"
"sort.list","closure","function","TRUE","FALSE","(x, partial = NULL, na.last = TRUE, decreasing = FALSE) ","base","base","1.6.2"
"source","closure","function","TRUE","FALSE","(file, local = FALSE, echo = verbose, print.eval = echo,     verbose = getOption(""verbose""), prompt.echo = getOption(""prompt""),     max.deparse.length = 150, chdir = FALSE) ","base","base","1.6.2"
"source.url","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"spline","closure","function","TRUE","FALSE","(x, y = NULL, n = 3 * length(x), method = ""fmm"", xmin = min(x),     xmax = max(x)) ","base","base","1.6.2"
"splinefun","closure","function","TRUE","FALSE","(x, y = NULL, method = ""fmm"") ","base","base","1.6.2"
"split","closure","function","TRUE","FALSE","(x, f) ","base","base","1.6.2"
"split.data.frame","closure","function","TRUE","FALSE","(x, f) ","base","base","1.6.2"
"split.data.frame<-","closure","function","TRUE","FALSE","(x, f, value) ","base","base","1.6.2"
"split.default","closure","function","TRUE","FALSE","(x, f) ","base","base","1.6.2"
"split.screen","closure","function","TRUE","FALSE","(figs, screen = if (exists("".split.screens"", envir = .GlobalEnv)) .split.cur.screen else 0,     erase = TRUE) ","base","base","1.6.2"
"split<-","closure","function","TRUE","FALSE","(x, f, value) ","base","base","1.6.2"
"split<-.data.frame","closure","function","TRUE","FALSE","(x, f, value) ","base","base","1.6.2"
"split<-.default","closure","function","TRUE","FALSE","(x, f, value) ","base","base","1.6.2"
"sprintf","closure","function","TRUE","FALSE","(fmt, ...) ","base","base","1.6.2"
"sqrt","builtin","function","TRUE","NA","","base","base","1.6.2"
"stack","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"stack.data.frame","closure","function","TRUE","FALSE","(x, select, ...) ","base","base","1.6.2"
"stack.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"standardGeneric","builtin","function","TRUE","NA","","base","base","1.6.2"
"stars","closure","function","TRUE","FALSE","(x, full = TRUE, scale = TRUE, radius = TRUE, labels = dimnames(x)[[1]],     locations = NULL, nrow = NULL, ncol = NULL, len = 1, key.loc = NULL,     key.labels = dimnames(x)[[2]], key.xpd = TRUE, xlim = NULL,     ylim = NULL, flip.labels = NULL, draw.segments = FALSE, col.segments = 1:n.seg,     col.stars = NA, axes = FALSE, frame.plot = axes, main = NULL,     sub = NULL, xlab = """", ylab = """", cex = 0.8, lwd = 0.25,     lty = par(""lty""), xpd = FALSE, mar = pmin(par(""mar""), 1.1 +         c(2 * axes + (xlab != """"), 2 * axes + (ylab != """"), 1,             0)), add = FALSE, plot = TRUE, ...) ","base","base","1.6.2"
"start","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"start.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"stat.anova","closure","function","TRUE","FALSE","(table, test = c(""Chisq"", ""F"", ""Cp""), scale, df.scale,     n) ","base","base","1.6.2"
"stderr","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"stdin","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"stdout","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"stem","closure","function","TRUE","FALSE","(x, scale = 1, width = 80, atom = 1e-08) ","base","base","1.6.2"
"step","closure","function","TRUE","FALSE","(object, scope, scale = 0, direction = c(""both"", ""backward"",     ""forward""), trace = 1, keep = NULL, steps = 1000, k = 2,     ...) ","base","base","1.6.2"
"stop","closure","function","TRUE","FALSE","(..., call. = TRUE) ","base","base","1.6.2"
"stopifnot","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"storage.mode","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"storage.mode<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"str","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"str.POSIXt","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"str.data.frame","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"str.default","closure","function","TRUE","FALSE","(object, max.level = 0, vec.len = 4, digits.d = 3, nchar.max = 128,     give.attr = TRUE, give.length = TRUE, wid = getOption(""width""),     nest.lev = 0, indent.str = paste(rep("" "", max(0, nest.lev +         1)), collapse = ""..""), ...) ","base","base","1.6.2"
"str.logLik","closure","function","TRUE","FALSE","(object, digits = max(2, getOption(""digits"") - 3), ...) ","base","base","1.6.2"
"strftime","closure","function","TRUE","FALSE","(x, format = """", usetz = FALSE, ...) ","base","base","1.6.2"
"strheight","closure","function","TRUE","FALSE","(s, units = ""user"", cex = NULL) ","base","base","1.6.2"
"stripchart","closure","function","TRUE","FALSE","(x, method = ""overplot"", jitter = 0.1, offset = 1/3,     vertical = FALSE, group.names, xlim = NULL, ylim = NULL,     main = """", ylab = """", xlab = """", pch = 0, col = par(""fg""),     cex = par(""cex"")) ","base","base","1.6.2"
"strptime","closure","function","TRUE","FALSE","(x, format) ","base","base","1.6.2"
"strsplit","closure","function","TRUE","FALSE","(x, split, extended = TRUE) ","base","base","1.6.2"
"structure","closure","function","TRUE","FALSE","(.Data, ...) ","base","base","1.6.2"
"strwidth","closure","function","TRUE","FALSE","(s, units = ""user"", cex = NULL) ","base","base","1.6.2"
"strwrap","closure","function","TRUE","FALSE","(x, width = 0.9 * getOption(""width""), indent = 0, exdent = 0,     prefix = """", simplify = TRUE) ","base","base","1.6.2"
"sub","closure","function","TRUE","FALSE","(pattern, replacement, x, ignore.case = FALSE, extended = TRUE,     perl = FALSE) ","base","base","1.6.2"
"subset","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"subset.data.frame","closure","function","TRUE","FALSE","(x, subset, select, ...) ","base","base","1.6.2"
"subset.default","closure","function","TRUE","FALSE","(x, subset, ...) ","base","base","1.6.2"
"substitute","special","function","TRUE","NA","","base","base","1.6.2"
"substr","closure","function","TRUE","FALSE","(x, start, stop) ","base","base","1.6.2"
"substr<-","closure","function","TRUE","FALSE","(x, start, stop, value) ","base","base","1.6.2"
"substring","closure","function","TRUE","FALSE","(text, first, last = 1e+06) ","base","base","1.6.2"
"substring<-","closure","function","TRUE","FALSE","(text, first, last = 1e+06, value) ","base","base","1.6.2"
"sum","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","1.6.2"
"summary","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summary.POSIXct","closure","function","TRUE","FALSE","(object, digits = 15, ...) ","base","base","1.6.2"
"summary.POSIXlt","closure","function","TRUE","FALSE","(object, digits = 15, ...) ","base","base","1.6.2"
"summary.aov","closure","function","TRUE","FALSE","(object, intercept = FALSE, split, expand.split = TRUE,     keep.zero.df = TRUE, ...) ","base","base","1.6.2"
"summary.aovlist","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summary.connection","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summary.data.frame","closure","function","TRUE","FALSE","(object, maxsum = 7, digits = max(3, getOption(""digits"") -     3), ...) ","base","base","1.6.2"
"summary.default","closure","function","TRUE","FALSE","(object, ..., digits = max(3, getOption(""digits"") -     3)) ","base","base","1.6.2"
"summary.factor","closure","function","TRUE","FALSE","(object, maxsum = 100, ...) ","base","base","1.6.2"
"summary.glm","closure","function","TRUE","FALSE","(object, dispersion = NULL, correlation = FALSE, ...) ","base","base","1.6.2"
"summary.glm.null","closure","function","TRUE","FALSE","(object, dispersion = NULL, correlation = TRUE, na.action = na.omit,     ...) ","base","base","1.6.2"
"summary.infl","closure","function","TRUE","FALSE","(object, digits = max(2, getOption(""digits"") - 5), ...) ","base","base","1.6.2"
"summary.lm","closure","function","TRUE","FALSE","(object, correlation = FALSE, ...) ","base","base","1.6.2"
"summary.lm.null","closure","function","TRUE","FALSE","(object, correlation = FALSE, ...) ","base","base","1.6.2"
"summary.manova","closure","function","TRUE","FALSE","(object, test = c(""Pillai"", ""Wilks"", ""Hotelling-Lawley"",     ""Roy""), intercept = FALSE, ...) ","base","base","1.6.2"
"summary.matrix","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summary.mlm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summary.packageStatus","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summary.table","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"summaryRprof","closure","function","TRUE","FALSE","(filename = ""Rprof.out"", chunksize = 5000) ","base","base","1.6.2"
"sunflowerplot","closure","function","TRUE","FALSE","(x, y = NULL, number, log = """", digits = 6, xlab = NULL,     ylab = NULL, xlim = NULL, ylim = NULL, add = FALSE, rotate = FALSE,     pch = 16, cex = 0.8, cex.fact = 1.5, size = 1/8, seg.col = 2,     seg.lwd = 1.5, ...) ","base","base","1.6.2"
"svd","closure","function","TRUE","FALSE","(x, nu = min(n, p), nv = min(n, p)) ","base","base","1.6.2"
"sweep","closure","function","TRUE","FALSE","(x, MARGIN, STATS, FUN = ""-"", ...) ","base","base","1.6.2"
"switch","closure","function","TRUE","FALSE","(EXPR, ...) ","base","base","1.6.2"
"symbol.C","builtin","function","TRUE","NA","","base","base","1.6.2"
"symbol.For","builtin","function","TRUE","NA","","base","base","1.6.2"
"symbols","closure","function","TRUE","FALSE","(x, y, circles, squares, rectangles, stars, thermometers,     boxplots, inches = TRUE, add = FALSE, fg = 1, bg = NA, xlab = NULL,     ylab = NULL, main = NULL, xlim = NULL, ylim = NULL, ...) ","base","base","1.6.2"
"symnum","closure","function","TRUE","FALSE","(x, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95), symbols = c("" "",     ""."", "","", ""+"", ""*"", ""B""), legend = length(symbols) >= 3,     na = ""?"", eps = 1e-05, corr = missing(cutpoints), show.max = if (corr) ""1"",     show.min = NULL, lower.triangular = corr & is.matrix(x),     diag.lower.tri = corr & !is.null(show.max)) ","base","base","1.6.2"
"sys.call","closure","function","TRUE","FALSE","(which = 0) ","base","base","1.6.2"
"sys.calls","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"sys.frame","closure","function","TRUE","FALSE","(which = 0) ","base","base","1.6.2"
"sys.frames","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"sys.function","closure","function","TRUE","FALSE","(n = 0) ","base","base","1.6.2"
"sys.load.image","closure","function","TRUE","FALSE","(name, quiet) ","base","base","1.6.2"
"sys.nframe","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"sys.on.exit","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"sys.parent","closure","function","TRUE","FALSE","(n = 1) ","base","base","1.6.2"
"sys.parents","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"sys.save.image","closure","function","TRUE","FALSE","(name) ","base","base","1.6.2"
"sys.source","closure","function","TRUE","FALSE","(file, envir = NULL, chdir = FALSE, keep.source = getOption(""keep.source.pkgs"")) ","base","base","1.6.2"
"sys.status","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"system","closure","function","TRUE","FALSE","(command, intern = FALSE, ignore.stderr = FALSE) ","base","base","1.6.2"
"system.file","closure","function","TRUE","FALSE","(..., package = ""base"", lib.loc = NULL, pkg, lib) ","base","base","1.6.2"
"system.time","closure","function","TRUE","FALSE","(expr) ","base","base","1.6.2"
"t","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"t.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"t.default","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"t.ts","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"table","closure","function","TRUE","FALSE","(..., exclude = c(NA, NaN), dnn = list.names(...), deparse.level = 1) ","base","base","1.6.2"
"tabulate","closure","function","TRUE","FALSE","(bin, nbins = max(1, bin)) ","base","base","1.6.2"
"tan","builtin","function","TRUE","NA","","base","base","1.6.2"
"tanh","builtin","function","TRUE","NA","","base","base","1.6.2"
"tapply","closure","function","TRUE","FALSE","(X, INDEX, FUN = NULL, ..., simplify = TRUE) ","base","base","1.6.2"
"taskCallbackManager","closure","function","TRUE","FALSE","(handlers = list(), registered = FALSE, verbose = FALSE) ","base","base","1.6.2"
"tempdir","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"tempfile","closure","function","TRUE","FALSE","(pattern = ""file"") ","base","base","1.6.2"
"termplot","closure","function","TRUE","FALSE","(model, data = NULL, envir = environment(formula(model)),     partial.resid = FALSE, rug = FALSE, terms = NULL, se = FALSE,     xlabs = NULL, ylabs = NULL, main = NULL, col.term = 2, lwd.term = 1.5,     col.se = ""orange"", lty.se = 2, lwd.se = 1, col.res = ""gray"",     cex = 1, pch = par(""pch""), ask = interactive() && nb.fig <         n.tms && .Device != ""postscript"", use.factor.levels = TRUE,     ...) ","base","base","1.6.2"
"terms","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"terms.aovlist","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"terms.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"terms.formula","closure","function","TRUE","FALSE","(x, specials = NULL, abb = NULL, data = NULL, neg.out = TRUE,     keep.order = FALSE, ...) ","base","base","1.6.2"
"terms.terms","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"terrain.colors","closure","function","TRUE","FALSE","(n) ","base","base","1.6.2"
"tetragamma","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"text","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"text.default","closure","function","TRUE","FALSE","(x, y = NULL, labels = seq(along = x), adj = NULL, pos = NULL,     offset = 0.5, vfont = NULL, cex = 1, col = NULL, font = NULL,     xpd = NULL, ...) ","base","base","1.6.2"
"textConnection","closure","function","TRUE","FALSE","(object, open = ""r"") ","base","base","1.6.2"
"time","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"time.default","closure","function","TRUE","FALSE","(x, offset = 0, ...) ","base","base","1.6.2"
"time.ts","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"title","closure","function","TRUE","FALSE","(main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     line = NA, outer = FALSE, ...) ","base","base","1.6.2"
"toString","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"toString.default","closure","function","TRUE","FALSE","(x, width, ...) ","base","base","1.6.2"
"tolower","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"topicName","closure","function","TRUE","FALSE","(type, topic) ","base","base","1.6.2"
"topo.colors","closure","function","TRUE","FALSE","(n) ","base","base","1.6.2"
"toupper","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"trace","closure","function","TRUE","FALSE","(what, tracer, exit, at, print, signature) ","base","base","1.6.2"
"traceback","closure","function","TRUE","FALSE","() ","base","base","1.6.2"
"tracingState","closure","function","TRUE","FALSE","(on = NULL) ","base","base","1.6.2"
"transform","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"transform.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"transform.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"trigamma","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"trunc","builtin","function","TRUE","NA","","base","base","1.6.2"
"trunc.POSIXt","closure","function","TRUE","FALSE","(x, units = c(""secs"", ""mins"", ""hours"", ""days"")) ","base","base","1.6.2"
"truncate","closure","function","TRUE","FALSE","(con, ...) ","base","base","1.6.2"
"truncate.connection","closure","function","TRUE","FALSE","(con, ...) ","base","base","1.6.2"
"try","closure","function","TRUE","FALSE","(expr, first = TRUE) ","base","base","1.6.2"
"ts","closure","function","TRUE","FALSE","(data = NA, start = 1, end = numeric(0), frequency = 1,     deltat = 1, ts.eps = getOption(""ts.eps""), class = if (nseries >         1) c(""mts"", ""ts"") else ""ts"", names = if (!is.null(dimnames(data))) colnames(data) else paste(""Series"",         seq(nseries))) ","base","base","1.6.2"
"tsp","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"tsp<-","closure","function","TRUE","FALSE","(x, value) ","base","base","1.6.2"
"type.convert","closure","function","TRUE","FALSE","(x, na.strings = ""NA"", as.is = FALSE, dec = ""."") ","base","base","1.6.2"
"typeof","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"unclass","builtin","function","TRUE","NA","","base","base","1.6.2"
"undebug","builtin","function","TRUE","NA","","base","base","1.6.2"
"union","closure","function","TRUE","FALSE","(x, y) ","base","base","1.6.2"
"unique","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","1.6.2"
"unique.array","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","1.6.2"
"unique.data.frame","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","1.6.2"
"unique.default","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","1.6.2"
"unique.matrix","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","1.6.2"
"uniroot","closure","function","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     tol = .Machine$double.eps^0.25, maxiter = 1000, ...) ","base","base","1.6.2"
"unix","closure","function","TRUE","FALSE","(call, intern = FALSE) ","base","base","1.6.2"
"unix.time","closure","function","TRUE","FALSE","(expr) ","base","base","1.6.2"
"unlink","closure","function","TRUE","FALSE","(x, recursive = FALSE) ","base","base","1.6.2"
"unlist","closure","function","TRUE","FALSE","(x, recursive = TRUE, use.names = TRUE) ","base","base","1.6.2"
"unname","closure","function","TRUE","FALSE","(obj, force = FALSE) ","base","base","1.6.2"
"unsplit","closure","function","TRUE","FALSE","(value, f) ","base","base","1.6.2"
"unstack","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"unstack.data.frame","closure","function","TRUE","FALSE","(x, form = formula(x), ...) ","base","base","1.6.2"
"unstack.default","closure","function","TRUE","FALSE","(x, form, ...) ","base","base","1.6.2"
"untrace","closure","function","TRUE","FALSE","(what, signature = NULL) ","base","base","1.6.2"
"unz","closure","function","TRUE","FALSE","(description, filename, open = """", encoding = getOption(""encoding"")) ","base","base","1.6.2"
"update","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"update.default","closure","function","TRUE","FALSE","(object, formula., ..., evaluate = TRUE) ","base","base","1.6.2"
"update.formula","closure","function","TRUE","FALSE","(old, new, ...) ","base","base","1.6.2"
"update.packageStatus","closure","function","TRUE","FALSE","(object, lib.loc = levels(object$inst$LibPath), repositories = levels(object$avail$Repository),     ...) ","base","base","1.6.2"
"update.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, CRAN = getOption(""CRAN""), contriburl = contrib.url(CRAN),     method, instlib = NULL, ask = TRUE, available = NULL, destdir = NULL) ","base","base","1.6.2"
"upgrade","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"upgrade.packageStatus","closure","function","TRUE","FALSE","(object, ask = TRUE, ...) ","base","base","1.6.2"
"upper.tri","closure","function","TRUE","FALSE","(x, diag = FALSE) ","base","base","1.6.2"
"url","closure","function","TRUE","FALSE","(description, open = """", blocking = TRUE, encoding = getOption(""encoding"")) ","base","base","1.6.2"
"url.show","closure","function","TRUE","FALSE","(url, title = url, file = tempfile(), delete.file = TRUE,     method, ...) ","base","base","1.6.2"
"var","closure","function","TRUE","FALSE","(x, y = NULL, na.rm = FALSE, use) ","base","base","1.6.2"
"variable.names","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"variable.names.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"variable.names.lm","closure","function","TRUE","FALSE","(object, full = FALSE, ...) ","base","base","1.6.2"
"vcov","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vcov.coxph","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vcov.glm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vcov.gls","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vcov.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vcov.lme","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vcov.survreg","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"vector","closure","function","TRUE","FALSE","(mode = ""logical"", length = 0) ","base","base","1.6.2"
"version","list","simple.list","TRUE","FALSE","NA","base","base","1.6.2"
"vi","closure","function","TRUE","FALSE","(name = NULL, file = """") ","base","base","1.6.2"
"warning","closure","function","TRUE","FALSE","(..., call. = TRUE) ","base","base","1.6.2"
"warnings","closure","function","TRUE","FALSE","(...) ","base","base","1.6.2"
"weekdays","closure","function","TRUE","FALSE","(x, abbreviate) ","base","base","1.6.2"
"weekdays.POSIXt","closure","function","TRUE","FALSE","(x, abbreviate = FALSE) ","base","base","1.6.2"
"weighted.mean","closure","function","TRUE","FALSE","(x, w, na.rm = FALSE) ","base","base","1.6.2"
"weighted.residuals","closure","function","TRUE","FALSE","(obj, drop0 = TRUE) ","base","base","1.6.2"
"weights","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"weights.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"weights.glm","closure","function","TRUE","FALSE","(object, type = c(""prior"", ""working""), ...) ","base","base","1.6.2"
"weights.lm","closure","function","TRUE","FALSE","(object, ...) ","base","base","1.6.2"
"which","closure","function","TRUE","FALSE","(x, arr.ind = FALSE) ","base","base","1.6.2"
"which.max","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"which.min","closure","function","TRUE","FALSE","(x) ","base","base","1.6.2"
"while","special","function","TRUE","NA","","base","base","1.6.2"
"window","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"window.default","closure","function","TRUE","FALSE","(x, start = NULL, end = NULL, frequency = NULL, deltat = NULL,     extend = FALSE, ...) ","base","base","1.6.2"
"window.ts","closure","function","TRUE","FALSE","(x, ...) ","base","base","1.6.2"
"with","closure","function","TRUE","FALSE","(data, expr, ...) ","base","base","1.6.2"
"with.default","closure","function","TRUE","FALSE","(data, expr, ...) ","base","base","1.6.2"
"write","closure","function","TRUE","FALSE","(x, file = ""data"", ncolumns = if (is.character(x)) 1 else 5,     append = FALSE) ","base","base","1.6.2"
"write.dcf","closure","function","TRUE","FALSE","(x, file = """", append = FALSE, indent = 0.1 * getOption(""width""),     width = 0.9 * getOption(""width"")) ","base","base","1.6.2"
"write.ftable","closure","function","TRUE","FALSE","(x, file = """", quote = TRUE, digits = getOption(""digits"")) ","base","base","1.6.2"
"write.socket","closure","function","TRUE","FALSE","(socket, string) ","base","base","1.6.2"
"write.table","closure","function","TRUE","FALSE","(x, file = """", append = FALSE, quote = TRUE, sep = "" "",     eol = ""\n"", na = ""NA"", dec = ""."", row.names = TRUE, col.names = TRUE,     qmethod = c(""escape"", ""double"")) ","base","base","1.6.2"
"writeBin","closure","function","TRUE","FALSE","(object, con, size = NA, endian = .Platform$endian) ","base","base","1.6.2"
"writeChar","closure","function","TRUE","FALSE","(object, con, nchars = nchar(object), eos = """") ","base","base","1.6.2"
"writeLines","closure","function","TRUE","FALSE","(text, con = stdout(), sep = ""\n"") ","base","base","1.6.2"
"wsbrowser","closure","function","TRUE","FALSE","(IDS, IsRoot, IsContainer, ItemsPerContainer, ParentID,     NAMES, TYPES, DIMS, expanded = TRUE, kind = ""HTML"", main = ""R Workspace"",     properties = list(), browser = getOption(""browser"")) ","base","base","1.6.2"
"x11","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12,     gamma = 1, colortype = getOption(""X11colortype""), maxcubesize = 256,     canvas = ""white"") ","base","base","1.6.2"
"xedit","closure","function","TRUE","FALSE","(name = NULL, file = """") ","base","base","1.6.2"
"xemacs","closure","function","TRUE","FALSE","(name = NULL, file = """") ","base","base","1.6.2"
"xfig","closure","function","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.fig"", ""Rplot%03d.fig""),     onefile = FALSE, ...) ","base","base","1.6.2"
"xinch","closure","function","TRUE","FALSE","(x = 1, warn.log = TRUE) ","base","base","1.6.2"
"xor","closure","function","TRUE","FALSE","(x, y) ","base","base","1.6.2"
"xpdrows.data.frame","closure","function","TRUE","FALSE","(x, old.rows, new.rows) ","base","base","1.6.2"
"xtabs","closure","function","TRUE","FALSE","(formula = ~., data = parent.frame(), subset, na.action,     exclude = c(NA, NaN), drop.unused.levels = FALSE) ","base","base","1.6.2"
"xy.coords","closure","function","TRUE","FALSE","(x, y, xlab = NULL, ylab = NULL, log = NULL, recycle = FALSE) ","base","base","1.6.2"
"xyinch","closure","function","TRUE","FALSE","(xy = 1, warn.log = TRUE) ","base","base","1.6.2"
"xyz.coords","closure","function","TRUE","FALSE","(x, y, z, xlab = NULL, ylab = NULL, zlab = NULL, log = NULL,     recycle = FALSE) ","base","base","1.6.2"
"yinch","closure","function","TRUE","FALSE","(y = 1, warn.log = TRUE) ","base","base","1.6.2"
"zapsmall","closure","function","TRUE","FALSE","(x, digits = getOption(""digits"")) ","base","base","1.6.2"
"zip.file.extract","closure","function","TRUE","FALSE","(file, zipname = ""R.zip"") ","base","base","1.6.2"
"{","special","function","TRUE","NA","","base","base","1.6.2"
"|","builtin","function","TRUE","NA","","base","base","1.6.2"
"||","special","function","TRUE","NA","","base","base","1.6.2"
"~","special","function","TRUE","NA","","base","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","boot","recommended","1.6.2"
"EEF.profile","closure","function","TRUE","FALSE","(y, tmin = min(y) + 0.1, tmax = max(y) - 0.1, n.t = 25,     u = function(y, t) ","boot","recommended","1.6.2"
"EL.profile","closure","function","TRUE","FALSE","(y, tmin = min(y) + 0.1, tmax = max(y) - 0.1, n.t = 25,     u = function(y, t) y - t) ","boot","recommended","1.6.2"
"abc.ci","closure","function","TRUE","FALSE","(data, statistic, index = 1, strata = rep(1, n), conf = 0.95,     eps = 0.001/n, ...) ","boot","recommended","1.6.2"
"anti.arr","closure","function","TRUE","FALSE","(n, R, L, inds = 1:n) ","boot","recommended","1.6.2"
"antithetic.array","closure","function","TRUE","FALSE","(n, R, L, strata) ","boot","recommended","1.6.2"
"balanced.array","closure","function","TRUE","FALSE","(n, R, strata) ","boot","recommended","1.6.2"
"basic.ci","closure","function","TRUE","FALSE","(t0, t, conf = 0.95, hinv = function(t) t) ","boot","recommended","1.6.2"
"bca.ci","closure","function","TRUE","FALSE","(boot.out, conf = 0.95, index = 1, t0 = NULL, t = NULL,     L = NULL, h = function(t) t, hdot = function(t) 1, hinv = function(t) t,     ...) ","boot","recommended","1.6.2"
"boot","closure","function","TRUE","FALSE","(data, statistic, R, sim = ""ordinary"", stype = ""i"",     strata = rep(1, n), L = NULL, m = 0, weights = NULL, ran.gen = function(d,         p) d, mle = NULL, ...) ","boot","recommended","1.6.2"
"boot.array","closure","function","TRUE","FALSE","(boot.out, indices = FALSE) ","boot","recommended","1.6.2"
"boot.ci","closure","function","TRUE","FALSE","(boot.out, conf = 0.95, type = ""all"", index = 1:min(2,     length(boot.out$t0)), var.t0 = NULL, var.t = NULL, t0 = NULL,     t = NULL, L = NULL, h = function(t) t, hdot = function(t) rep(1,         length(t)), hinv = function(t) t, ...) ","boot","recommended","1.6.2"
"boot.return","closure","function","TRUE","FALSE","(sim, t0, t, strata, R, data, stat, stype, call, seed,     L, m, pred.i, weights, ran.gen, mle) ","boot","recommended","1.6.2"
"cens.case","closure","function","TRUE","FALSE","(n, strata, R) ","boot","recommended","1.6.2"
"cens.resamp","closure","function","TRUE","FALSE","(data, R, F.surv, G.surv, strata, index = c(1, 2), cox = NULL,     sim = ""model"") ","boot","recommended","1.6.2"
"cens.return","closure","function","TRUE","FALSE","(sim, t0, t, strata, R, data, statistic, call, seed) ","boot","recommended","1.6.2"
"cens.weird","closure","function","TRUE","FALSE","(data, surv, strata) ","boot","recommended","1.6.2"
"censboot","closure","function","TRUE","FALSE","(data, statistic, R, F.surv, G.surv, strata = matrix(1,     n, 2), sim = ""ordinary"", cox = NULL, index = c(1, 2), ...) ","boot","recommended","1.6.2"
"const","closure","function","TRUE","FALSE","(w, eps = 1e-08) ","boot","recommended","1.6.2"
"control","closure","function","TRUE","FALSE","(boot.out, L = NULL, distn = NULL, index = 1, t0 = NULL,     t = NULL, bias.adj = FALSE, alpha = NULL, ...) ","boot","recommended","1.6.2"
"corr","closure","function","TRUE","FALSE","(d, w = rep(1, nrow(d))/nrow(d)) ","boot","recommended","1.6.2"
"cum3","closure","function","TRUE","FALSE","(a, b = a, c = a, unbiased = TRUE) ","boot","recommended","1.6.2"
"cv.glm","closure","function","TRUE","FALSE","(data, glmfit, cost = function(y, yhat) mean((y - yhat)^2),     K = n) ","boot","recommended","1.6.2"
"empinf","closure","function","TRUE","FALSE","(boot.out = NULL, data = NULL, statistic = NULL, type = NULL,     stype = NULL, index = 1, t = NULL, strata = rep(1, n), eps = 0.001,     ...) ","boot","recommended","1.6.2"
"empinf.reg","closure","function","TRUE","FALSE","(boot.out, t = boot.out$t[, 1]) ","boot","recommended","1.6.2"
"envelope","closure","function","TRUE","FALSE","(boot.out = NULL, mat = NULL, level = 0.95, index = 1:n) ","boot","recommended","1.6.2"
"exp.tilt","closure","function","TRUE","FALSE","(L, theta = NULL, t0 = 0, lambda = NULL, strata = rep(1,     length(L))) ","boot","recommended","1.6.2"
"extra.array","closure","function","TRUE","FALSE","(n, R, m, strata = rep(1, n)) ","boot","recommended","1.6.2"
"freq.array","closure","function","TRUE","FALSE","(i.array) ","boot","recommended","1.6.2"
"glm.diag","closure","function","TRUE","FALSE","(glmfit) ","boot","recommended","1.6.2"
"glm.diag.plots","closure","function","TRUE","FALSE","(glmfit, glmdiag = NULL, subset = NULL, iden = FALSE,     labels = NULL, ret = FALSE) ","boot","recommended","1.6.2"
"iden","closure","function","TRUE","FALSE","(n) ","boot","recommended","1.6.2"
"imp.moments","closure","function","TRUE","FALSE","(boot.out = NULL, index = 1, t = boot.out$t[, index],     w = NULL, def = TRUE, q = NULL) ","boot","recommended","1.6.2"
"imp.prob","closure","function","TRUE","FALSE","(boot.out = NULL, index = 1, t0 = boot.out$t0[index],     t = boot.out$t[, index], w = NULL, def = TRUE, q = NULL) ","boot","recommended","1.6.2"
"imp.quantile","closure","function","TRUE","FALSE","(boot.out = NULL, alpha = NULL, index = 1, t = boot.out$t[,     index], w = NULL, def = TRUE, q = NULL) ","boot","recommended","1.6.2"
"imp.reg","closure","function","TRUE","FALSE","(w) ","boot","recommended","1.6.2"
"imp.weights","closure","function","TRUE","FALSE","(boot.out, def = TRUE, q = NULL) ","boot","recommended","1.6.2"
"importance.array","closure","function","TRUE","FALSE","(n, R, weights, strata) ","boot","recommended","1.6.2"
"importance.array.bal","closure","function","TRUE","FALSE","(n, R, weights, strata) ","boot","recommended","1.6.2"
"index.array","closure","function","TRUE","FALSE","(n, R, sim, strata = rep(1, n), m = 0, L = NULL, weights = NULL) ","boot","recommended","1.6.2"
"inf.jack","closure","function","TRUE","FALSE","(data, stat, index = 1, strata = rep(1, n), eps = 0.001,     ...) ","boot","recommended","1.6.2"
"inv.logit","closure","function","TRUE","FALSE","(x) ","boot","recommended","1.6.2"
"isMatrix","closure","function","TRUE","FALSE","(x) ","boot","recommended","1.6.2"
"jack.after.boot","closure","function","TRUE","FALSE","(boot.out, index = 1, t = NULL, L = NULL, useJ = TRUE,     stinf = TRUE, alpha = NULL, main = """", ylab = NULL, ...) ","boot","recommended","1.6.2"
"k3.linear","closure","function","TRUE","FALSE","(L, strata = NULL) ","boot","recommended","1.6.2"
"lik.CI","closure","function","TRUE","FALSE","(like, lim) ","boot","recommended","1.6.2"
"linear.approx","closure","function","TRUE","FALSE","(boot.out, L = NULL, index = 1, type = NULL, t0 = NULL,     t = NULL, ...) ","boot","recommended","1.6.2"
"lines.saddle.distn","closure","function","TRUE","FALSE","(x, dens = TRUE, h = function(u) u, J = function(u) 1,     npts = 50, lty = 1, ...) ","boot","recommended","1.6.2"
"logit","closure","function","TRUE","FALSE","(p) ","boot","recommended","1.6.2"
"make.ends","closure","function","TRUE","FALSE","(a, n) ","boot","recommended","1.6.2"
"nested.corr","closure","function","TRUE","FALSE","(data, w, t0, M) ","boot","recommended","1.6.2"
"norm.ci","closure","function","TRUE","FALSE","(boot.out = NULL, conf = 0.95, index = 1, var.t0 = NULL,     t0 = NULL, t = NULL, L = NULL, h = function(t) t, hdot = function(t) 1,     hinv = function(t) t) ","boot","recommended","1.6.2"
"norm.inter","closure","function","TRUE","FALSE","(t, alpha) ","boot","recommended","1.6.2"
"normalize","closure","function","TRUE","FALSE","(wts, strata) ","boot","recommended","1.6.2"
"ordinary.array","closure","function","TRUE","FALSE","(n, R, strata) ","boot","recommended","1.6.2"
"perc.ci","closure","function","TRUE","FALSE","(t, conf = 0.95, hinv = function(t) t) ","boot","recommended","1.6.2"
"permutation.array","closure","function","TRUE","FALSE","(n, R, strata) ","boot","recommended","1.6.2"
"plot.boot","closure","function","TRUE","FALSE","(x, index = 1, t0 = NULL, t = NULL, jack = FALSE, qdist = ""norm"",     nclass = NULL, df, ...) ","boot","recommended","1.6.2"
"positive.jack","closure","function","TRUE","FALSE","(data, stat, stype = ""w"", index = 1, strata = rep(1,     n), ...) ","boot","recommended","1.6.2"
"print.boot","closure","function","TRUE","FALSE","(x, digits = options()$digits, index = 1:ncol(boot.out$t),     ...) ","boot","recommended","1.6.2"
"print.bootci","closure","function","TRUE","FALSE","(x, hinv = NULL, ...) ","boot","recommended","1.6.2"
"print.saddle.distn","closure","function","TRUE","FALSE","(x, ...) ","boot","recommended","1.6.2"
"print.simplex","closure","function","TRUE","FALSE","(x, ...) ","boot","recommended","1.6.2"
"saddle","closure","function","TRUE","FALSE","(A = NULL, u = NULL, wdist = ""m"", type = ""simp"", d = NULL,     d1 = 1, init = rep(0.1, d), mu = rep(0.5, n), LR = FALSE,     strata = NULL, K.adj = NULL, K2 = NULL) ","boot","recommended","1.6.2"
"saddle.distn","closure","function","TRUE","FALSE","(A, u = NULL, alpha = NULL, wdist = ""m"", type = ""simp"",     npts = 20, t = NULL, t0 = NULL, init = rep(0.1, d), mu = rep(0.5,         n), LR = FALSE, strata = NULL, ...) ","boot","recommended","1.6.2"
"scramble","closure","function","TRUE","FALSE","(ts, norm = TRUE) ","boot","recommended","1.6.2"
"simplex","closure","function","TRUE","FALSE","(a, A1 = NULL, b1 = NULL, A2 = NULL, b2 = NULL, A3 = NULL,     b3 = NULL, maxi = FALSE, n.iter = n + 2 * m, eps = 1e-10) ","boot","recommended","1.6.2"
"simplex1","closure","function","TRUE","FALSE","(a, A, b, init, basic, val = 0, stage = 2, n1 = N, eps = 1e-10,     n.iter = n1) ","boot","recommended","1.6.2"
"smooth.f","closure","function","TRUE","FALSE","(theta, boot.out, index = 1, t = boot.out$t[, index],     width = 0.5) ","boot","recommended","1.6.2"
"stud.ci","closure","function","TRUE","FALSE","(tv0, tv, conf = 0.95, hinv = function(t) t) ","boot","recommended","1.6.2"
"tilt.boot","closure","function","TRUE","FALSE","(data, statistic, R, sim = ""ordinary"", stype = ""i"",     strata = rep(1, n), L = NULL, theta = NULL, alpha = c(0.025,         0.975), tilt = TRUE, width = 0.5, index = 1, ...) ","boot","recommended","1.6.2"
"ts.array","closure","function","TRUE","FALSE","(n, n.sim, R, l, sim, endcorr) ","boot","recommended","1.6.2"
"ts.return","closure","function","TRUE","FALSE","(t0, t, R, tseries, seed, stat, sim, endcorr, n.sim,     l, ran.gen, ran.args, call, norm) ","boot","recommended","1.6.2"
"tsboot","closure","function","TRUE","FALSE","(tseries, statistic, R, l = NULL, sim = ""model"", endcorr = TRUE,     n.sim = NULL, orig.t = TRUE, ran.gen = function(tser, n.sim,         args) tser, ran.args = NULL, norm = TRUE, ...) ","boot","recommended","1.6.2"
"usual.jack","closure","function","TRUE","FALSE","(data, stat, stype = ""w"", index = 1, strata = rep(1,     n), ...) ","boot","recommended","1.6.2"
"var.linear","closure","function","TRUE","FALSE","(L, strata = NULL) ","boot","recommended","1.6.2"
"zero","closure","function","TRUE","FALSE","(n, m) ","boot","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","class","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","class","recommended","1.6.2"
"SOM","closure","function","TRUE","FALSE","(data, grid = somgrid(), rlen = 10000, alpha = seq(0.05,     0, len = rlen), radii = seq(4, 1, len = rlen), init) ","class","recommended","1.6.2"
"batchSOM","closure","function","TRUE","FALSE","(data, grid = somgrid(), radii, init) ","class","recommended","1.6.2"
"condense","closure","function","TRUE","FALSE","(train, class, store = sample(seq(n), 1), trace = TRUE) ","class","recommended","1.6.2"
"knn","closure","function","TRUE","FALSE","(train, test, cl, k = 1, l = 0, prob = FALSE, use.all = TRUE) ","class","recommended","1.6.2"
"knn.cv","closure","function","TRUE","FALSE","(train, cl, k = 1, l = 0, prob = FALSE, use.all = TRUE) ","class","recommended","1.6.2"
"knn1","closure","function","TRUE","FALSE","(train, test, cl) ","class","recommended","1.6.2"
"lvq1","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 100 * nrow(codebk$x), alpha = 0.03) ","class","recommended","1.6.2"
"lvq2","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 100 * nrow(codebk$x), alpha = 0.03,     win = 0.3) ","class","recommended","1.6.2"
"lvq3","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 100 * nrow(codebk$x), alpha = 0.03,     win = 0.3, epsilon = 0.1) ","class","recommended","1.6.2"
"lvqinit","closure","function","TRUE","FALSE","(x, cl, size, prior, k = 5) ","class","recommended","1.6.2"
"lvqtest","closure","function","TRUE","FALSE","(codebk, test) ","class","recommended","1.6.2"
"multiedit","closure","function","TRUE","FALSE","(x, class, k = 1, V = 3, I = 5, trace = TRUE) ","class","recommended","1.6.2"
"olvq1","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 40 * nrow(codebk$x), alpha = 0.3) ","class","recommended","1.6.2"
"plot.SOM","closure","function","TRUE","FALSE","(x, ...) ","class","recommended","1.6.2"
"plot.somgrid","closure","function","TRUE","FALSE","(x, type = ""p"", ...) ","class","recommended","1.6.2"
"reduce.nn","closure","function","TRUE","FALSE","(train, ind, class) ","class","recommended","1.6.2"
"somgrid","closure","function","TRUE","FALSE","(xdim = 8, ydim = 6, topo = c(""rectangular"", ""hexagonal"")) ","class","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","cluster","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","cluster","recommended","1.6.2"
"agnes","closure","function","TRUE","FALSE","(x, diss = inherits(x, ""dist""), metric = ""euclidean"",     stand = FALSE, method = ""average"") ","cluster","recommended","1.6.2"
"bannerplot","closure","function","TRUE","FALSE","(x, w = rev(x$height), fromLeft = TRUE, main, sub, xlab = ""Height"",     adj = 0, col = c(2, 0), border = 0, axes = TRUE, frame.plot = axes,     rev.xax = !fromLeft, xax.pretty = TRUE, labels = NULL, nmax.lab = 35,     max.strlen = 5, yax.do = axes && length(x$order) <= nmax.lab,     yaxRight = fromLeft, y.mar = 2.4 + max.strlen/2.5, ...) ","cluster","recommended","1.6.2"
"clara","closure","function","TRUE","FALSE","(x, k, metric = ""euclidean"", stand = FALSE, samples = 5,     sampsize = 40 + 2 * k, trace = 0, keepdata = TRUE) ","cluster","recommended","1.6.2"
"clusplot","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"clusplot.default","closure","function","TRUE","FALSE","(x, clus, diss = FALSE, cor = TRUE, stand = FALSE, lines = 2,     shade = FALSE, color = FALSE, labels = 0, plotchar = TRUE,     col.p = ""dark green"", col.txt = col.p, col.clus = if (color) c(2,         4, 6, 3) else 5, span = TRUE, xlim = NULL, ylim = NULL,     main = paste(""CLUSPLOT("", deparse(substitute(x)), "")""), verbose = getOption(""verbose""),     ...) ","cluster","recommended","1.6.2"
"clusplot.partition","closure","function","TRUE","FALSE","(x, main = NULL, ...) ","cluster","recommended","1.6.2"
"daisy","closure","function","TRUE","FALSE","(x, metric = c(""euclidean"", ""manhattan""), stand = FALSE,     type = list()) ","cluster","recommended","1.6.2"
"diana","closure","function","TRUE","FALSE","(x, diss = inherits(x, ""dist""), metric = ""euclidean"",     stand = FALSE) ","cluster","recommended","1.6.2"
"ellipsoidPoints","closure","function","TRUE","FALSE","(A, d2, loc, n = 201) ","cluster","recommended","1.6.2"
"ellipsoidhull","closure","function","TRUE","FALSE","(x, tol = 0.01, maxit = 5000, ret.wt = FALSE, ret.sqdist = FALSE,     ret.pr = FALSE) ","cluster","recommended","1.6.2"
"fanny","closure","function","TRUE","FALSE","(x, k, diss = inherits(x, ""dist""), metric = ""euclidean"",     stand = FALSE) ","cluster","recommended","1.6.2"
"lower.to.upper.tri.inds","closure","function","TRUE","FALSE","(n) ","cluster","recommended","1.6.2"
"meanabsdev","closure","function","TRUE","FALSE","(y) ","cluster","recommended","1.6.2"
"mona","closure","function","TRUE","FALSE","(x) ","cluster","recommended","1.6.2"
"pam","closure","function","TRUE","FALSE","(x, k, diss = inherits(x, ""dist""), metric = ""euclidean"",     stand = FALSE) ","cluster","recommended","1.6.2"
"plot.agnes","closure","function","TRUE","FALSE","(x, ask = FALSE, which.plots = NULL, main = NULL, sub = paste(""Agglomerative Coefficient = "",     round(x$ac, digits = 2)), adj = 0, nmax.lab = 35, max.strlen = 5,     xax.pretty = TRUE, ...) ","cluster","recommended","1.6.2"
"plot.diana","closure","function","TRUE","FALSE","(x, ask = FALSE, which.plots = NULL, main = NULL, sub = paste(""Divisive Coefficient = "",     round(x$dc, digits = 2)), adj = 0, nmax.lab = 35, max.strlen = 5,     xax.pretty = TRUE, ...) ","cluster","recommended","1.6.2"
"plot.mona","closure","function","TRUE","FALSE","(x, main = paste(""Banner of "", deparse(x$call)), sub = NULL,     xlab = ""Separation step"", col = c(2, 0), axes = TRUE, adj = 0,     nmax.lab = 35, max.strlen = 5, ...) ","cluster","recommended","1.6.2"
"plot.partition","closure","function","TRUE","FALSE","(x, ask = FALSE, which.plots = NULL, nmax.lab = 40,     max.strlen = 5, data = x$data, cor = TRUE, stand = FALSE,     lines = 2, shade = FALSE, color = FALSE, labels = 0, plotchar = TRUE,     span = TRUE, xlim = NULL, ylim = NULL, ...) ","cluster","recommended","1.6.2"
"plot.silhouette","closure","function","TRUE","FALSE","(x, nmax.lab = 40, max.strlen = 5, main = NULL, sub = NULL,     xlab = expression(""Silhouette width "" * s[i]), col = ""gray"",     border = 0, cex.names = par(""cex.axis""), do.n.k = TRUE, do.clus.stat = TRUE,     ...) ","cluster","recommended","1.6.2"
"pltree","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"pltree.twins","closure","function","TRUE","FALSE","(x, main = paste(""Dendrogram of "", deparse(call)), labels = NULL,     ...) ","cluster","recommended","1.6.2"
"predict.ellipsoid","closure","function","TRUE","FALSE","(object, n.out = 201, ...) ","cluster","recommended","1.6.2"
"print.agnes","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.clara","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.diana","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.dissimilarity","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.ellipsoid","closure","function","TRUE","FALSE","(x, digits = max(1, getOption(""digits"") - 2), ...) ","cluster","recommended","1.6.2"
"print.fanny","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.mona","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.pam","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.agnes","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.clara","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.diana","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.dissimilarity","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.fanny","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.mona","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.pam","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"print.summary.silhouette","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"silhouette","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"silhouette.default","closure","function","TRUE","FALSE","(x, dist, ...) ","cluster","recommended","1.6.2"
"silhouette.partition","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","1.6.2"
"sizeDiss","closure","function","TRUE","FALSE","(d) ","cluster","recommended","1.6.2"
"sortSilhouette","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.agnes","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.clara","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.diana","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.dissimilarity","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.fanny","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.mona","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.pam","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","1.6.2"
"summary.silhouette","closure","function","TRUE","FALSE","(object, FUN = mean, ...) ","cluster","recommended","1.6.2"
"upper.to.lower.tri.inds","closure","function","TRUE","FALSE","(n) ","cluster","recommended","1.6.2"
"volume","closure","function","TRUE","FALSE","(object) ","cluster","recommended","1.6.2"
"volume.ellipsoid","closure","function","TRUE","FALSE","(object) ","cluster","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","ctest","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","ctest","base","1.6.2"
"ansari.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"ansari.test.default","closure","function","TRUE","FALSE","(x, y, alternative = c(""two.sided"", ""less"", ""greater""),     exact = NULL, conf.int = FALSE, conf.level = 0.95, ...) ","ctest","base","1.6.2"
"ansari.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"bartlett.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"bartlett.test.default","closure","function","TRUE","FALSE","(x, g, ...) ","ctest","base","1.6.2"
"bartlett.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"binom.test","closure","function","TRUE","FALSE","(x, n, p = 0.5, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95) ","ctest","base","1.6.2"
"chisq.test","closure","function","TRUE","FALSE","(x, y = NULL, correct = TRUE, p = rep(1/length(x), length(x)),     simulate.p.value = FALSE, B = 2000) ","ctest","base","1.6.2"
"cor.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"cor.test.default","closure","function","TRUE","FALSE","(x, y, alternative = c(""two.sided"", ""less"", ""greater""),     method = c(""pearson"", ""kendall"", ""spearman""), exact = NULL,     conf.level = 0.95, ...) ","ctest","base","1.6.2"
"cor.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"fisher.test","closure","function","TRUE","FALSE","(x, y = NULL, workspace = 2e+05, hybrid = FALSE, or = 1,     alternative = ""two.sided"", conf.level = 0.95) ","ctest","base","1.6.2"
"fligner.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"fligner.test.default","closure","function","TRUE","FALSE","(x, g, ...) ","ctest","base","1.6.2"
"fligner.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"friedman.test","closure","function","TRUE","FALSE","(y, ...) ","ctest","base","1.6.2"
"friedman.test.default","closure","function","TRUE","FALSE","(y, groups, blocks, ...) ","ctest","base","1.6.2"
"friedman.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"kruskal.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"kruskal.test.default","closure","function","TRUE","FALSE","(x, g, ...) ","ctest","base","1.6.2"
"kruskal.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"ks.test","closure","function","TRUE","FALSE","(x, y, ..., alternative = c(""two.sided"", ""less"", ""greater""),     exact = NULL) ","ctest","base","1.6.2"
"mantelhaen.test","closure","function","TRUE","FALSE","(x, y = NULL, z = NULL, alternative = c(""two.sided"",     ""less"", ""greater""), correct = TRUE, exact = FALSE, conf.level = 0.95) ","ctest","base","1.6.2"
"mcnemar.test","closure","function","TRUE","FALSE","(x, y = NULL, correct = TRUE) ","ctest","base","1.6.2"
"mood.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"mood.test.default","closure","function","TRUE","FALSE","(x, y, alternative = c(""two.sided"", ""less"", ""greater""),     ...) ","ctest","base","1.6.2"
"mood.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"oneway.test","closure","function","TRUE","FALSE","(formula, data, subset, na.action, var.equal = FALSE) ","ctest","base","1.6.2"
"pairwise.prop.test","closure","function","TRUE","FALSE","(x, n, p.adjust.method = p.adjust.methods, ...) ","ctest","base","1.6.2"
"pairwise.t.test","closure","function","TRUE","FALSE","(x, g, p.adjust.method = p.adjust.methods, pool.sd = TRUE,     ...) ","ctest","base","1.6.2"
"pairwise.table","closure","function","TRUE","FALSE","(compare.levels, level.names, p.adjust.method) ","ctest","base","1.6.2"
"pairwise.wilcox.test","closure","function","TRUE","FALSE","(x, g, p.adjust.method = p.adjust.methods, ...) ","ctest","base","1.6.2"
"power.prop.test","closure","function","TRUE","FALSE","(n = NULL, p1 = NULL, p2 = NULL, sig.level = 0.05, power = NULL,     alternative = c(""two.sided"", ""one.sided"")) ","ctest","base","1.6.2"
"power.t.test","closure","function","TRUE","FALSE","(n = NULL, delta = NULL, sd = 1, sig.level = 0.05, power = NULL,     type = c(""two.sample"", ""one.sample"", ""paired""), alternative = c(""two.sided"",         ""one.sided"")) ","ctest","base","1.6.2"
"print.pairwise.htest","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"print.power.htest","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"prop.test","closure","function","TRUE","FALSE","(x, n, p = NULL, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95, correct = TRUE) ","ctest","base","1.6.2"
"prop.trend.test","closure","function","TRUE","FALSE","(x, n, score = 1:length(x)) ","ctest","base","1.6.2"
"quade.test","closure","function","TRUE","FALSE","(y, ...) ","ctest","base","1.6.2"
"quade.test.default","closure","function","TRUE","FALSE","(y, groups, blocks, ...) ","ctest","base","1.6.2"
"quade.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"shapiro.test","closure","function","TRUE","FALSE","(x) ","ctest","base","1.6.2"
"t.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"t.test.default","closure","function","TRUE","FALSE","(x, y = NULL, alternative = c(""two.sided"", ""less"", ""greater""),     mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95,     ...) ","ctest","base","1.6.2"
"t.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"var.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"var.test.default","closure","function","TRUE","FALSE","(x, y, ratio = 1, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95, ...) ","ctest","base","1.6.2"
"var.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
"wilcox.test","closure","function","TRUE","FALSE","(x, ...) ","ctest","base","1.6.2"
"wilcox.test.default","closure","function","TRUE","FALSE","(x, y = NULL, alternative = c(""two.sided"", ""less"", ""greater""),     mu = 0, paired = FALSE, exact = NULL, correct = TRUE, conf.int = FALSE,     conf.level = 0.95, ...) ","ctest","base","1.6.2"
"wilcox.test.formula","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","ctest","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","eda","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","eda","base","1.6.2"
"coef.tukeyline","closure","function","TRUE","FALSE","(object, ...) ","eda","base","1.6.2"
"fitted.tukeyline","closure","function","TRUE","FALSE","(object, ...) ","eda","base","1.6.2"
"line","closure","function","TRUE","FALSE","(x, y = NULL) ","eda","base","1.6.2"
"medpolish","closure","function","TRUE","FALSE","(x, eps = 0.01, maxiter = 10, trace.iter = TRUE) ","eda","base","1.6.2"
"plot.medpolish","closure","function","TRUE","FALSE","(x, main = ""Tukey Additivity Plot"", ...) ","eda","base","1.6.2"
"print.medpolish","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","eda","base","1.6.2"
"print.tukeyline","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","eda","base","1.6.2"
"print.tukeysmooth","closure","function","TRUE","FALSE","(x, ...) ","eda","base","1.6.2"
"residuals.tukeyline","closure","function","TRUE","FALSE","(object, type = c(""working"", ""response"", ""deviance"",     ""pearson"", ""partial""), ...) ","eda","base","1.6.2"
"smooth","closure","function","TRUE","FALSE","(x, kind = c(""3RS3R"", ""3RSS"", ""3RSR"", ""3R"", ""3"", ""S""),     twiceit = FALSE, endrule = ""Tukey"", do.ends = FALSE) ","eda","base","1.6.2"
"summary.tukeysmooth","closure","function","TRUE","FALSE","(object, ...) ","eda","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","foreign","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","foreign","recommended","1.6.2"
"SModeNames","character","character","TRUE","FALSE","NA","foreign","recommended","1.6.2"
"data.restore","closure","function","TRUE","FALSE","(file, print = FALSE, verbose = FALSE, env = .GlobalEnv) ","foreign","recommended","1.6.2"
"lookup.xport","closure","function","TRUE","FALSE","(file) ","foreign","recommended","1.6.2"
"read.S","closure","function","TRUE","FALSE","(file) ","foreign","recommended","1.6.2"
"read.dta","closure","function","TRUE","FALSE","(file, convert.dates = TRUE, tz = ""GMT"", convert.factors = TRUE) ","foreign","recommended","1.6.2"
"read.epiinfo","closure","function","TRUE","FALSE","(file, read.deleted = FALSE, guess.broken.dates = FALSE,     thisyear = NULL, lower.case.names = FALSE) ","foreign","recommended","1.6.2"
"read.mtp","closure","function","TRUE","FALSE","(file) ","foreign","recommended","1.6.2"
"read.spss","closure","function","TRUE","FALSE","(file, use.value.labels = TRUE, to.data.frame = FALSE,     max.value.labels = Inf) ","foreign","recommended","1.6.2"
"read.ssd","closure","function","TRUE","FALSE","(libname, sectionnames, tmpXport = tempfile(), tmpProgLoc = tempfile(),     sascmd = ""sas"") ","foreign","recommended","1.6.2"
"read.xport","closure","function","TRUE","FALSE","(file) ","foreign","recommended","1.6.2"
"write.dta","closure","function","TRUE","FALSE","(dataframe, file, version = 6, convert.dates = TRUE,     tz = ""GMT"", convert.factors = c(""labels"", ""string"", ""numeric"",         ""codes"")) ","foreign","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","grid","recommended","1.6.2"
".GRID.STATE","list","list","TRUE","FALSE","NA","grid","recommended","1.6.2"
".Last.lib","closure","function","TRUE","FALSE","(libpath) ","grid","recommended","1.6.2"
".grid.gpar.names","character","character","TRUE","FALSE","NA","grid","recommended","1.6.2"
".grid.loaded","logical","logical","TRUE","FALSE","NA","grid","recommended","1.6.2"
".grid.unit.list","character","character","TRUE","FALSE","NA","grid","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","grid","recommended","1.6.2"
"Ops.unit","closure","function","TRUE","FALSE","(x, y) ","grid","recommended","1.6.2"
"Summary.unit","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","grid","recommended","1.6.2"
"[.unit","closure","function","TRUE","FALSE","(x, index, top = TRUE, ...) ","grid","recommended","1.6.2"
"[.unit.arithmetic","closure","function","TRUE","FALSE","(x, index, top = TRUE, ...) ","grid","recommended","1.6.2"
"[.unit.list","closure","function","TRUE","FALSE","(x, index, top = TRUE, ...) ","grid","recommended","1.6.2"
"absolute","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"absolute.size","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"absolute.units","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"absolute.units.arithmetic","closure","function","TRUE","FALSE","(ua) ","grid","recommended","1.6.2"
"absolute.units.list","closure","function","TRUE","FALSE","(ul) ","grid","recommended","1.6.2"
"as.character.unit","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"as.character.unit.arithmetic","closure","function","TRUE","FALSE","(ua) ","grid","recommended","1.6.2"
"as.character.unit.list","closure","function","TRUE","FALSE","(ul) ","grid","recommended","1.6.2"
"col.spec","closure","function","TRUE","FALSE","(side, col, col.before, col.after, ncol) ","grid","recommended","1.6.2"
"common.draw.axis","closure","function","TRUE","FALSE","(axis) ","grid","recommended","1.6.2"
"convertNative","closure","function","TRUE","FALSE","(unit, dimension = ""x"", type = ""location"") ","grid","recommended","1.6.2"
"copy","closure","function","TRUE","FALSE","(grob) ","grid","recommended","1.6.2"
"current.viewport","closure","function","TRUE","FALSE","(vp = NULL) ","grid","recommended","1.6.2"
"dataViewport","closure","function","TRUE","FALSE","(x = NULL, y = NULL, xscale = NULL, yscale = NULL, extension = 0.05,     ...) ","grid","recommended","1.6.2"
"draw.all","closure","function","TRUE","FALSE","() ","grid","recommended","1.6.2"
"draw.details","closure","function","TRUE","FALSE","(x, x.wrapped, recording) ","grid","recommended","1.6.2"
"draw.details.circle","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.collection","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.default","closure","function","TRUE","FALSE","(x, x.wrapped, recording) ","grid","recommended","1.6.2"
"draw.details.frame","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.glist","closure","function","TRUE","FALSE","(x, x.wrapped, recording) ","grid","recommended","1.6.2"
"draw.details.line.to","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.lines","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.move.to","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.points","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.polygon","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.rect","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.segments","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.text","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.viewport","closure","function","TRUE","FALSE","(x, x.wrapped, recording) ","grid","recommended","1.6.2"
"draw.details.xaxis","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.details.yaxis","closure","function","TRUE","FALSE","(x, x.wrapped, recording = TRUE) ","grid","recommended","1.6.2"
"draw.frame.child","closure","function","TRUE","FALSE","(grob) ","grid","recommended","1.6.2"
"editDetails","closure","function","TRUE","FALSE","(x, new.values) ","grid","recommended","1.6.2"
"editDetails.default","closure","function","TRUE","FALSE","(x, new.values) ","grid","recommended","1.6.2"
"editDetails.xaxis","closure","function","TRUE","FALSE","(x, new.values) ","grid","recommended","1.6.2"
"editDetails.yaxis","closure","function","TRUE","FALSE","(x, new.values) ","grid","recommended","1.6.2"
"get.gpar","closure","function","TRUE","FALSE","(gpar.name) ","grid","recommended","1.6.2"
"get.value","closure","function","TRUE","FALSE","(x, child.specs = NULL) ","grid","recommended","1.6.2"
"get.value.default","closure","function","TRUE","FALSE","(x, child.specs = NULL) ","grid","recommended","1.6.2"
"get.value.grob","closure","function","TRUE","FALSE","(x, child.specs = NULL) ","grid","recommended","1.6.2"
"gpar","closure","function","TRUE","FALSE","(...) ","grid","recommended","1.6.2"
"grid.Call","closure","function","TRUE","FALSE","(fnname, ...) ","grid","recommended","1.6.2"
"grid.Call.graphics","closure","function","TRUE","FALSE","(fnname, ...) ","grid","recommended","1.6.2"
"grid.circle","closure","function","TRUE","FALSE","(x = 0.5, y = 0.5, r = 0.5, default.units = ""npc"", gp = gpar(),     draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.collection","closure","function","TRUE","FALSE","(..., gp = gpar(), draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.copy","closure","function","TRUE","FALSE","(grob) ","grid","recommended","1.6.2"
"grid.display.list","closure","function","TRUE","FALSE","(on = TRUE) ","grid","recommended","1.6.2"
"grid.draw","closure","function","TRUE","FALSE","(x, recording = TRUE) ","grid","recommended","1.6.2"
"grid.edit","closure","function","TRUE","FALSE","(grob, ..., redraw = TRUE) ","grid","recommended","1.6.2"
"grid.frame","closure","function","TRUE","FALSE","(layout = NULL, vp = NULL, gp = gpar(), draw = FALSE) ","grid","recommended","1.6.2"
"grid.get","closure","function","TRUE","FALSE","(grob, ...) ","grid","recommended","1.6.2"
"grid.grill","closure","function","TRUE","FALSE","(h = unit(seq(0.25, 0.75, 0.25), ""npc""), v = unit(seq(0.25,     0.75, 0.25), ""npc""), default.units = ""npc"", gp = gpar(col = ""grey""),     vp = NULL) ","grid","recommended","1.6.2"
"grid.grob","closure","function","TRUE","FALSE","(list.struct, cl = NULL, draw = TRUE) ","grid","recommended","1.6.2"
"grid.layout","closure","function","TRUE","FALSE","(nrow = 1, ncol = 1, widths = unit(rep(1, ncol), ""null""),     heights = unit(rep(1, nrow), ""null""), default.units = ""null"",     respect = FALSE) ","grid","recommended","1.6.2"
"grid.legend","closure","function","TRUE","FALSE","(pch, labels, frame = TRUE, hgap = unit(0.5, ""lines""),     vgap = unit(0.5, ""lines""), default.units = ""lines"", gp = gpar(),     draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.line.to","closure","function","TRUE","FALSE","(x = 1, y = 1, default.units = ""npc"", draw = TRUE, gp = gpar(),     vp = NULL) ","grid","recommended","1.6.2"
"grid.lines","closure","function","TRUE","FALSE","(x = unit(c(0, 1), ""npc"", units.per.obs), y = unit(c(0,     1), ""npc"", units.per.obs), default.units = ""npc"", units.per.obs = FALSE,     gp = gpar(), draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.move.to","closure","function","TRUE","FALSE","(x = 0, y = 0, default.units = ""npc"", draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.multipanel","closure","function","TRUE","FALSE","(x = runif(90), y = runif(90), z = runif(90), nrow = 2,     ncol = 5, nplots = 9, newpage = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.newpage","closure","function","TRUE","FALSE","(recording = TRUE) ","grid","recommended","1.6.2"
"grid.pack","closure","function","TRUE","FALSE","(frame, grob, grob.name = """", draw = TRUE, side = NULL,     row = NULL, row.before = NULL, row.after = NULL, col = NULL,     col.before = NULL, col.after = NULL, width = NULL, height = NULL,     force.width = FALSE, force.height = FALSE, border = NULL) ","grid","recommended","1.6.2"
"grid.panel","closure","function","TRUE","FALSE","(x = runif(10), y = runif(10), zrange = c(0, 1), zbin = runif(2),     xscale = range(x) + c(-1, 1) * 0.05 * diff(range(x)), yscale = range(y) +         c(-1, 1) * 0.05 * diff(range(y)), axis.left = TRUE, axis.left.label = TRUE,     axis.right = FALSE, axis.right.label = TRUE, axis.bottom = TRUE,     axis.bottom.label = TRUE, axis.top = FALSE, axis.top.label = TRUE,     vp = NULL) ","grid","recommended","1.6.2"
"grid.place","closure","function","TRUE","FALSE","(frame, grob, grob.name = """", draw = TRUE, row = 1,     col = 1) ","grid","recommended","1.6.2"
"grid.plot.and.legend","closure","function","TRUE","FALSE","() ","grid","recommended","1.6.2"
"grid.points","closure","function","TRUE","FALSE","(x = runif(10), y = runif(10), pch = 1, size = unit(1,     ""char""), default.units = ""native"", gp = gpar(), draw = TRUE,     vp = NULL) ","grid","recommended","1.6.2"
"grid.polygon","closure","function","TRUE","FALSE","(x = c(0, 0.5, 1, 0.5), y = c(0.5, 1, 0.5, 0), default.units = ""npc"",     gp = gpar(), draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.pretty","closure","function","TRUE","FALSE","(range) ","grid","recommended","1.6.2"
"grid.prop.list","closure","function","TRUE","FALSE","(...) ","grid","recommended","1.6.2"
"grid.rect","closure","function","TRUE","FALSE","(x = unit(0.5, ""npc""), y = unit(0.5, ""npc""), width = unit(1,     ""npc""), height = unit(1, ""npc""), just = ""centre"", default.units = ""npc"",     gp = gpar(), draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.segments","closure","function","TRUE","FALSE","(x0 = unit(0, ""npc""), y0 = unit(0, ""npc""), x1 = unit(1,     ""npc""), y1 = unit(1, ""npc""), default.units = ""npc"", units.per.obs = FALSE,     gp = gpar(), draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.set","closure","function","TRUE","FALSE","(grob, ...) ","grid","recommended","1.6.2"
"grid.show.layout","closure","function","TRUE","FALSE","(l, newpage = TRUE, cell.border = ""blue"", cell.fill = ""light blue"",     cell.label = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.show.viewport","closure","function","TRUE","FALSE","(v, parent.layout = NULL, newpage = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.strip","closure","function","TRUE","FALSE","(label = ""whatever"", range.full = c(0, 1), range.thumb = c(0.3,     0.6), fill = ""#FFBF00"", thumb = ""#FF8000"", vp = NULL) ","grid","recommended","1.6.2"
"grid.text","closure","function","TRUE","FALSE","(label, x = unit(0.5, ""npc""), y = unit(0.5, ""npc""),     just = ""centre"", rot = 0, check.overlap = FALSE, default.units = ""npc"",     gp = gpar(), draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.top.level.vp","closure","function","TRUE","FALSE","() ","grid","recommended","1.6.2"
"grid.xaxis","closure","function","TRUE","FALSE","(at = NULL, label = TRUE, main = TRUE, gp = gpar(),     draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"grid.yaxis","closure","function","TRUE","FALSE","(at = NULL, label = TRUE, main = TRUE, gp = gpar(),     draw = TRUE, vp = NULL) ","grid","recommended","1.6.2"
"height","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.details","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.details.default","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.details.frame","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.details.rect","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.details.text","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.details.viewport","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.post","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.post.details","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.post.details.default","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.pre","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.pre.details","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"height.pre.details.default","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"inc.display.list","closure","function","TRUE","FALSE","() ","grid","recommended","1.6.2"
"is.even","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"is.gpar","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"is.grob","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"is.layout","closure","function","TRUE","FALSE","(l) ","grid","recommended","1.6.2"
"is.odd","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"is.unit","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"is.unit.arithmetic","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"is.unit.list","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"is.viewport","closure","function","TRUE","FALSE","(vp) ","grid","recommended","1.6.2"
"layout.heights","closure","function","TRUE","FALSE","(lay) ","grid","recommended","1.6.2"
"layout.ncol","closure","function","TRUE","FALSE","(lay) ","grid","recommended","1.6.2"
"layout.nrow","closure","function","TRUE","FALSE","(lay) ","grid","recommended","1.6.2"
"layout.respect","closure","function","TRUE","FALSE","(lay) ","grid","recommended","1.6.2"
"layout.torture","closure","function","TRUE","FALSE","() ","grid","recommended","1.6.2"
"layout.widths","closure","function","TRUE","FALSE","(lay) ","grid","recommended","1.6.2"
"make.xaxis.labels","closure","function","TRUE","FALSE","(at, main) ","grid","recommended","1.6.2"
"make.xaxis.major","closure","function","TRUE","FALSE","(at, main) ","grid","recommended","1.6.2"
"make.xaxis.ticks","closure","function","TRUE","FALSE","(at, main) ","grid","recommended","1.6.2"
"make.yaxis.labels","closure","function","TRUE","FALSE","(at, main) ","grid","recommended","1.6.2"
"make.yaxis.major","closure","function","TRUE","FALSE","(at, main) ","grid","recommended","1.6.2"
"make.yaxis.ticks","closure","function","TRUE","FALSE","(at, main) ","grid","recommended","1.6.2"
"mod.dims","closure","function","TRUE","FALSE","(dim, dims, index, new.index, nindex, force) ","grid","recommended","1.6.2"
"new.col","closure","function","TRUE","FALSE","(side, col, col.before, col.after, ncol) ","grid","recommended","1.6.2"
"new.row","closure","function","TRUE","FALSE","(side, row, row.before, row.after, nrow) ","grid","recommended","1.6.2"
"num.col.specs","closure","function","TRUE","FALSE","(side, col, col.before, col.after) ","grid","recommended","1.6.2"
"num.row.specs","closure","function","TRUE","FALSE","(side, row, row.before, row.after) ","grid","recommended","1.6.2"
"origin.bottom","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"origin.left","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"origin.right","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"origin.top","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"plotViewport","closure","function","TRUE","FALSE","(margins, ...) ","grid","recommended","1.6.2"
"pop.saved.gpars","closure","function","TRUE","FALSE","() ","grid","recommended","1.6.2"
"pop.viewport","closure","function","TRUE","FALSE","(n = 1, recording = TRUE) ","grid","recommended","1.6.2"
"pop.vp","closure","function","TRUE","FALSE","(last.one, recording) ","grid","recommended","1.6.2"
"print.grob","closure","function","TRUE","FALSE","(x, ...) ","grid","recommended","1.6.2"
"print.unit","closure","function","TRUE","FALSE","(x, ...) ","grid","recommended","1.6.2"
"print.viewport","closure","function","TRUE","FALSE","(x, ...) ","grid","recommended","1.6.2"
"push.saved.gpars","closure","function","TRUE","FALSE","(gpars) ","grid","recommended","1.6.2"
"push.viewport","closure","function","TRUE","FALSE","(..., recording = TRUE) ","grid","recommended","1.6.2"
"push.vp","closure","function","TRUE","FALSE","(vps, index, len, recording) ","grid","recommended","1.6.2"
"record","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"record.default","closure","function","TRUE","FALSE","(n) ","grid","recommended","1.6.2"
"record.grob","closure","function","TRUE","FALSE","(grob) ","grid","recommended","1.6.2"
"record.viewport","closure","function","TRUE","FALSE","(vp) ","grid","recommended","1.6.2"
"recycle.data","closure","function","TRUE","FALSE","(data, data.per, max.n) ","grid","recommended","1.6.2"
"row.spec","closure","function","TRUE","FALSE","(side, row, row.before, row.after, nrow) ","grid","recommended","1.6.2"
"saved.pars","closure","function","TRUE","FALSE","(pars) ","grid","recommended","1.6.2"
"set.gpar","closure","function","TRUE","FALSE","(gp) ","grid","recommended","1.6.2"
"set.value.grob","closure","function","TRUE","FALSE","(grob, child.specs, list.struct) ","grid","recommended","1.6.2"
"swap.origin.horizontal","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"swap.origin.vertical","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"unit","closure","function","TRUE","FALSE","(x, units, data = NULL) ","grid","recommended","1.6.2"
"unit.arithmetic","closure","function","TRUE","FALSE","(func.name, arg1, arg2 = NULL) ","grid","recommended","1.6.2"
"unit.arithmetic.length","closure","function","TRUE","FALSE","(ua) ","grid","recommended","1.6.2"
"unit.arithmetic.rep","closure","function","TRUE","FALSE","(x, times) ","grid","recommended","1.6.2"
"unit.c","closure","function","TRUE","FALSE","(...) ","grid","recommended","1.6.2"
"unit.length","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"unit.list","closure","function","TRUE","FALSE","(unit) ","grid","recommended","1.6.2"
"unit.list.from.list","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"unit.list.length","closure","function","TRUE","FALSE","(ul) ","grid","recommended","1.6.2"
"unit.list.rep","closure","function","TRUE","FALSE","(x, times) ","grid","recommended","1.6.2"
"unit.pmax","closure","function","TRUE","FALSE","(...) ","grid","recommended","1.6.2"
"unit.pmin","closure","function","TRUE","FALSE","(...) ","grid","recommended","1.6.2"
"unit.rep","closure","function","TRUE","FALSE","(x, times, length.out) ","grid","recommended","1.6.2"
"unset.gpar","closure","function","TRUE","FALSE","(gp) ","grid","recommended","1.6.2"
"updateCol","closure","function","TRUE","FALSE","(grob, added.col) ","grid","recommended","1.6.2"
"updateRow","closure","function","TRUE","FALSE","(grob, added.row) ","grid","recommended","1.6.2"
"valid.data","closure","function","TRUE","FALSE","(units, data) ","grid","recommended","1.6.2"
"valid.just","closure","function","TRUE","FALSE","(just) ","grid","recommended","1.6.2"
"valid.layout","closure","function","TRUE","FALSE","(nrow, ncol, widths, heights, respect) ","grid","recommended","1.6.2"
"valid.origin","closure","function","TRUE","FALSE","(origin) ","grid","recommended","1.6.2"
"valid.pch","closure","function","TRUE","FALSE","(pch) ","grid","recommended","1.6.2"
"valid.unit","closure","function","TRUE","FALSE","(x, units, data) ","grid","recommended","1.6.2"
"valid.units","closure","function","TRUE","FALSE","(units) ","grid","recommended","1.6.2"
"valid.viewport","closure","function","TRUE","FALSE","(x, y, width, height, just, gp, clip, xscale, yscale,     angle, layout, layout.pos.row, layout.pos.col) ","grid","recommended","1.6.2"
"validGP","closure","function","TRUE","FALSE","(gpars) ","grid","recommended","1.6.2"
"viewport","closure","function","TRUE","FALSE","(x = unit(0.5, ""npc""), y = unit(0.5, ""npc""), width = unit(1,     ""npc""), height = unit(1, ""npc""), default.units = ""npc"", just = ""centre"",     gp = gpar(), clip = FALSE, xscale = c(0, 1), yscale = c(0,         1), angle = 0, layout = NULL, layout.pos.row = NULL,     layout.pos.col = NULL) ","grid","recommended","1.6.2"
"viewport.layout","closure","function","TRUE","FALSE","(vp) ","grid","recommended","1.6.2"
"width","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.details","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.details.default","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.details.frame","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.details.rect","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.details.text","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.details.viewport","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.post","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.post.details","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.post.details.default","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.pre","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.pre.details","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
"width.pre.details.default","closure","function","TRUE","FALSE","(x) ","grid","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","lattice","recommended","1.6.2"
".lattice.print.more","logical","logical","TRUE","FALSE","NA","lattice","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","lattice","recommended","1.6.2"
"Rows","closure","function","TRUE","FALSE","(x, which) ","lattice","recommended","1.6.2"
"[.shingle","closure","function","TRUE","FALSE","(x, subset, drop = FALSE) ","lattice","recommended","1.6.2"
"as.data.frame.shingle","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","lattice","recommended","1.6.2"
"as.factorOrShingle","closure","function","TRUE","FALSE","(x, subset = TRUE, drop = FALSE) ","lattice","recommended","1.6.2"
"as.shingle","closure","function","TRUE","FALSE","(x) ","lattice","recommended","1.6.2"
"banking","closure","function","TRUE","FALSE","(dx, dy = 1) ","lattice","recommended","1.6.2"
"barchart","closure","function","TRUE","FALSE","(formula, data = parent.frame(), panel = ""panel.barchart"",     prepanel = NULL, strip = TRUE, box.ratio = 2, groups = NULL,     horizontal = NULL, ..., subset = TRUE) ","lattice","recommended","1.6.2"
"bwplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = ""panel.bwplot"", prepanel = NULL, scales = list(),     strip = TRUE, groups = NULL, xlab, xlim, ylab, ylim, box.ratio = 1,     horizontal = NULL, ..., subscripts = !is.null(groups), subset = TRUE) ","lattice","recommended","1.6.2"
"calculateAxisComponents","closure","function","TRUE","FALSE","(x, at = FALSE, labels = FALSE, have.log = FALSE, logbase = NULL,     logpaste = """", abbreviate = NULL, minlength = 4, format,     ...) ","lattice","recommended","1.6.2"
"canonical.theme","closure","function","TRUE","FALSE","(name = ""null device"", color = TRUE) ","lattice","recommended","1.6.2"
"cloud","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = c(1, 1), layout = NULL,     panel = ""panel.cloud"", prepanel = NULL, scales = NULL, strip = TRUE,     groups = NULL, xlab, xlim = if (is.factor(x)) levels(x) else range(x),     ylab, ylim = if (is.factor(y)) levels(y) else range(y), zlab,     zlim = if (is.factor(z)) levels(z) else range(z), distance = 0.2,     perspective = TRUE, R.mat = diag(4), screen = list(z = 40,         x = -60), zoom = 0.8, at, pretty = FALSE, drape = FALSE,     ..., colorkey = any(drape), col.regions, cuts = 1, subscripts = TRUE,     subset = TRUE) ","lattice","recommended","1.6.2"
"col.whitebg","closure","function","TRUE","FALSE","() ","lattice","recommended","1.6.2"
"compute.layout","closure","function","TRUE","FALSE","(layout, cond.max.level, skip = FALSE) ","lattice","recommended","1.6.2"
"construct.3d.scales","closure","function","TRUE","FALSE","(draw = TRUE, tck = 1, lty = 1, lwd = 1, distance = c(1,     1, 1), tick.number = 5, cex = 1, rot = FALSE, at = FALSE,     labels = FALSE, col = FALSE, log = FALSE, font = FALSE, arrows = TRUE,     relation = ""same"", x = NULL, y = NULL, z = NULL, ...) ","lattice","recommended","1.6.2"
"construct.scales","closure","function","TRUE","FALSE","(draw = TRUE, tck = 1, tick.number = 5, cex = 1, rot = FALSE,     at = FALSE, labels = FALSE, col = FALSE, log = FALSE, font = FALSE,     alternating = TRUE, relation = ""same"", abbreviate = FALSE,     minlength = 4, x = NULL, y = NULL, ...) ","lattice","recommended","1.6.2"
"contourplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = ""panel.levelplot"", prepanel = NULL, scales = list(),     strip = TRUE, groups = NULL, xlab, xlim, ylab, ylim, cuts = 7,     contour = TRUE, pretty = TRUE, region = FALSE, ..., subscripts = TRUE,     subset = TRUE) ","lattice","recommended","1.6.2"
"cupdate","closure","function","TRUE","FALSE","(index, maxim) ","lattice","recommended","1.6.2"
"densityplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = if (is.null(groups)) ""panel.densityplot"" else ""panel.superpose"",     prepanel = NULL, scales = list(), strip = TRUE, groups = NULL,     xlab, xlim, ylab, ylim, bw = NULL, adjust = NULL, kernel = NULL,     window = NULL, width = NULL, give.Rkern = FALSE, n = 50,     from = NULL, to = NULL, cut = NULL, na.rm = NULL, ..., panel.groups = ""panel.densityplot"",     subscripts = !is.null(groups), subset = TRUE) ","lattice","recommended","1.6.2"
"do.breaks","closure","function","TRUE","FALSE","(endpoints, nint) ","lattice","recommended","1.6.2"
"dotplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), panel = ""panel.dotplot"",     prepanel = NULL, strip = TRUE, groups = NULL, horizontal = NULL,     ..., subset = TRUE) ","lattice","recommended","1.6.2"
"draw.colorkey","closure","function","TRUE","FALSE","(key, draw = FALSE, vp = NULL) ","lattice","recommended","1.6.2"
"draw.key","closure","function","TRUE","FALSE","(key, draw = FALSE, vp = NULL) ","lattice","recommended","1.6.2"
"equal.count","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","1.6.2"
"extend.limits","closure","function","TRUE","FALSE","(lim, length = 1, prop = 0.07) ","lattice","recommended","1.6.2"
"histogram","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = ""panel.histogram"", prepanel = NULL, scales = list(),     strip = TRUE, groups = NULL, xlab, xlim, ylab, ylim, type = c(""percent"",         ""count"", ""density""), nint = if (is.factor(x)) length(levels(x)) else round(log2(length(x)) +         1), endpoints = extend.limits(range(x[!is.na(x)]), prop = 0.04),     breaks = if (is.factor(x)) seq(0.5, length = length(levels(x)) +         1) else do.breaks(endpoints, nint), equal.widths = TRUE,     ..., subscripts = !is.null(groups), subset = TRUE) ","lattice","recommended","1.6.2"
"is.characterOrExpression","closure","function","TRUE","FALSE","(x) ","lattice","recommended","1.6.2"
"is.shingle","closure","function","TRUE","FALSE","(x) ","lattice","recommended","1.6.2"
"larrows","closure","function","TRUE","FALSE","(x0, y0, x1, y1, angle = 30, code = 2, length = NULL,     proportion = 0.05, ...) ","lattice","recommended","1.6.2"
"lattice.theme","list","list","TRUE","FALSE","NA","lattice","recommended","1.6.2"
"latticeParseFormula","closure","function","TRUE","FALSE","(model, data, dimension = 2) ","lattice","recommended","1.6.2"
"levelplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = ""panel.levelplot"", prepanel = NULL, scales = list(),     strip = TRUE, groups = NULL, xlab, xlim, ylab, ylim, at,     col.regions = trellis.par.get(""regions"")$col, colorkey = region,     contour = FALSE, cuts = 15, labels = TRUE, pretty = FALSE,     region = TRUE, ..., subscripts = TRUE, subset = TRUE) ","lattice","recommended","1.6.2"
"limits.and.aspect","closure","function","TRUE","FALSE","(prepanel.default.function, prepanel = NULL, have.xlim = FALSE,     xlim = NULL, have.ylim = FALSE, ylim = NULL, x.relation,     y.relation, panel.args.common = list(), panel.args = list(),     aspect, nplots, ...) ","lattice","recommended","1.6.2"
"llines","closure","function","TRUE","FALSE","(x, y = NULL, type = ""l"", col = plot.line$col, lty = plot.line$lty,     lwd = plot.line$lwd, ...) ","lattice","recommended","1.6.2"
"lplot.xy","closure","function","TRUE","FALSE","(xy, type, pch = 1, lty = 1, col = 1, cex = 1, lwd = 1,     font = 1, ...) ","lattice","recommended","1.6.2"
"lpoints","closure","function","TRUE","FALSE","(x, y = NULL, type = ""p"", col = plot.symbol$col, pch = plot.symbol$pch,     cex = plot.symbol$cex, ...) ","lattice","recommended","1.6.2"
"lpretty","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","1.6.2"
"lsegments","closure","function","TRUE","FALSE","(x0, y0, x1, y1, col = add.line$col, lty = add.line$lty,     lwd = add.line$lwd, ...) ","lattice","recommended","1.6.2"
"lset","closure","function","TRUE","FALSE","(theme = col.whitebg(), warn = TRUE) ","lattice","recommended","1.6.2"
"ltext","closure","function","TRUE","FALSE","(x, y = NULL, labels = seq(along = x), col = add.text$col,     cex = add.text$cex, srt = 0, font = 1, adj = 0.5, ...) ","lattice","recommended","1.6.2"
"ltransform3dMatrix","closure","function","TRUE","FALSE","(screen, R.mat = diag(4)) ","lattice","recommended","1.6.2"
"ltransform3dto3d","closure","function","TRUE","FALSE","(x, R.mat, za = 1, zb = 0, zmin, zmax, dist) ","lattice","recommended","1.6.2"
"make.list.from.intervals","closure","function","TRUE","FALSE","(x) ","lattice","recommended","1.6.2"
"oneway","closure","function","TRUE","FALSE","(formula, data, location = mean, spread = function(x) sqrt(var(x))) ","lattice","recommended","1.6.2"
"palette.shade","closure","function","TRUE","FALSE","(cosangle, height, saturation = 0.3, ...) ","lattice","recommended","1.6.2"
"panel.3dscatter","closure","function","TRUE","FALSE","(x, y, z, rot.mat = diag(4), za, zb, zback, zfront,     distance, groups = NULL, subpanel = if (is.null(groups)) ""panel.xyplot"" else ""panel.superpose"",     ...) ","lattice","recommended","1.6.2"
"panel.3dscatter.new","closure","function","TRUE","FALSE","(x, y, z, rot.mat = diag(4), za, zb, zback, zfront,     distance, zlim, zero, groups = NULL, subscripts = TRUE, type = ""p"",     col, col.point = if (is.null(groups)) plot.symbol$col else superpose.symbol$col,     col.line = if (is.null(groups)) plot.line$col else superpose.line$col,     lty = if (is.null(groups)) plot.line$lty else superpose.line$lty,     lwd = if (is.null(groups)) plot.line$lwd else superpose.line$lwd,     cex = if (is.null(groups)) plot.symbol$cex else superpose.symbol$cex,     pch = if (is.null(groups)) plot.symbol$pch else superpose.symbol$pch,     ...) ","lattice","recommended","1.6.2"
"panel.3dwire","closure","function","TRUE","FALSE","(x, y, z, rot.mat = diag(4), za, zb, minz = 0, maxz = 1,     col.at, col.regions, shade = FALSE, shade.colors = palette.shade,     light.source = c(1, 0, 0), col = ""black"", col.groups = superpose.line$col,     ...) ","lattice","recommended","1.6.2"
"panel.abline","closure","function","TRUE","FALSE","(a, b = NULL, h = numeric(0), v = numeric(0), col = add.line$col,     lty = add.line$lty, lwd = add.line$lwd, ...) ","lattice","recommended","1.6.2"
"panel.barchart","closure","function","TRUE","FALSE","(x, y, box.ratio = 1, horizontal = TRUE, col = bar.fill$col,     ...) ","lattice","recommended","1.6.2"
"panel.bwplot","closure","function","TRUE","FALSE","(x, y, box.ratio = 1, horizontal = TRUE, pch = box.dot$pch,     col = box.dot$col, cex = box.dot$cex, fill = box.rectangle$fill,     levels.fos = NULL, ...) ","lattice","recommended","1.6.2"
"panel.cloud","closure","function","TRUE","FALSE","(x, y, z, subscripts, groups = NULL, distance, xlim,     ylim, zlim, panel.3d.cloud = ""panel.3dscatter"", panel.3d.wireframe = ""panel.3dwire"",     rot.mat, aspect, par.box = NULL, xlab, ylab, zlab, scales.3d,     proportion = 0.6, wireframe = FALSE, scpos, ..., col.at,     col.regions) ","lattice","recommended","1.6.2"
"panel.densityplot","closure","function","TRUE","FALSE","(x, darg = list(n = 30), plot.points = TRUE, ref = FALSE,     cex = 0.5, col = plot.line$col, col.line, ...) ","lattice","recommended","1.6.2"
"panel.dotplot","closure","function","TRUE","FALSE","(x, y, horizontal = TRUE, pch = dot.symbol$pch, col = dot.symbol$col,     lty = dot.line$lty, lwd = dot.line$lwd, col.line = dot.line$col,     levels.fos = NULL, ...) ","lattice","recommended","1.6.2"
"panel.fill","closure","function","TRUE","FALSE","(col = trellis.par.get(""background"")$col, ...) ","lattice","recommended","1.6.2"
"panel.grid","closure","function","TRUE","FALSE","(h = 3, v = 3, col = reference.line$col, lty = reference.line$lty,     lwd = reference.line$lwd, ...) ","lattice","recommended","1.6.2"
"panel.histogram","closure","function","TRUE","FALSE","(x, breaks, equal.widths = TRUE, type = ""density"", col = bar.fill$col,     ...) ","lattice","recommended","1.6.2"
"panel.levelplot","closure","function","TRUE","FALSE","(x, y, z, wx, wy, zcol, col.regions, subscripts, at = mean(z),     labels = NULL, contour = TRUE, region = TRUE, col = add.line$col,     lty = add.line$lty, lwd = add.line$lwd, ...) ","lattice","recommended","1.6.2"
"panel.linejoin","closure","function","TRUE","FALSE","(x, y, fun = mean, horizontal = TRUE, lwd = reference.line$lwd,     lty = reference.line$lty, col = reference.line$col, col.line,     ...) ","lattice","recommended","1.6.2"
"panel.lmline","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","1.6.2"
"panel.loess","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, lwd = add.line$lwd, lty = add.line$lty,     col = add.line$col, ...) ","lattice","recommended","1.6.2"
"panel.mathdensity","closure","function","TRUE","FALSE","(dmath = dnorm, args = list(mean = 0, sd = 1), n = 50,     col = reference.line$col, lwd = reference.line$lwd, ...) ","lattice","recommended","1.6.2"
"panel.pairs","closure","function","TRUE","FALSE","(z, panel = ""panel.splom"", groups = NULL, panel.subscripts,     subscripts, pscales = 5, ...) ","lattice","recommended","1.6.2"
"panel.parallel","closure","function","TRUE","FALSE","(z, subscripts, col = superpose.line$col, lwd = superpose.line$lwd,     lty = superpose.line$lty, ...) ","lattice","recommended","1.6.2"
"panel.qq","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"panel.qqmath","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"panel.qqmathline","closure","function","TRUE","FALSE","(y, distribution, ...) ","lattice","recommended","1.6.2"
"panel.splom","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"panel.stripplot","closure","function","TRUE","FALSE","(x, y, jitter.data = FALSE, factor = 0.5, horizontal = TRUE,     pch = plot.symbol$pch, col = plot.symbol$col, ...) ","lattice","recommended","1.6.2"
"panel.superpose","closure","function","TRUE","FALSE","(x, y = NULL, subscripts, groups, panel.groups = ""panel.xyplot"",     col, col.line = superpose.line$col, col.symbol = superpose.symbol$col,     pch = superpose.symbol$pch, cex = superpose.symbol$cex, lty = superpose.line$lty,     lwd = superpose.line$lwd, ...) ","lattice","recommended","1.6.2"
"panel.superpose.2","closure","function","TRUE","FALSE","(x, y, subscripts, groups, col, col.line = superpose.line$col,     col.symbol = superpose.symbol$col, pch = superpose.symbol$pch,     cex = superpose.symbol$cex, lty = superpose.line$lty, lwd = superpose.line$lwd,     type = ""p"", ...) ","lattice","recommended","1.6.2"
"panel.tmd","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"panel.wireframe","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"panel.xyplot","closure","function","TRUE","FALSE","(x, y, type = ""p"", pch = plot.symbol$pch, col, col.line = plot.line$col,     col.symbol = plot.symbol$col, lty = plot.line$lty, cex = plot.symbol$cex,     lwd = plot.line$lwd, ...) ","lattice","recommended","1.6.2"
"parallel","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", between = list(x = 0.5,     y = 0.5), layout = NULL, panel = ""panel.parallel"", prepanel = NULL,     scales = list(), strip = TRUE, groups = NULL, xlab = NULL,     xlim, ylab = NULL, ylim, varnames, ..., subscripts = !is.null(groups),     subset = TRUE) ","lattice","recommended","1.6.2"
"plot.shingle","closure","function","TRUE","FALSE","(x, col = bar.fill$col, aspect = ""fill"", ...) ","lattice","recommended","1.6.2"
"prepanel.default.bwplot","closure","function","TRUE","FALSE","(x, y, box.ratio, horizontal = TRUE, levels.fos = length(unique(y)),     ...) ","lattice","recommended","1.6.2"
"prepanel.default.cloud","closure","function","TRUE","FALSE","(distance, xlim, ylim, zlim, zoom = 1, rot.mat = rot.mat,     aspect = aspect, ...) ","lattice","recommended","1.6.2"
"prepanel.default.densityplot","closure","function","TRUE","FALSE","(x, darg, groups = NULL, subscripts = TRUE, ...) ","lattice","recommended","1.6.2"
"prepanel.default.histogram","closure","function","TRUE","FALSE","(x, breaks = NULL, equal.widths = TRUE, type = ""density"",     ...) ","lattice","recommended","1.6.2"
"prepanel.default.levelplot","closure","function","TRUE","FALSE","(x, y, wx, wy, subscripts, ...) ","lattice","recommended","1.6.2"
"prepanel.default.parallel","closure","function","TRUE","FALSE","(x, y, type, ...) ","lattice","recommended","1.6.2"
"prepanel.default.qq","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","1.6.2"
"prepanel.default.qqmath","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"prepanel.default.splom","closure","function","TRUE","FALSE","(x, y, type, ...) ","lattice","recommended","1.6.2"
"prepanel.default.tmd","closure","function","TRUE","FALSE","(...) ","lattice","recommended","1.6.2"
"prepanel.default.xyplot","closure","function","TRUE","FALSE","(x, y, type, ...) ","lattice","recommended","1.6.2"
"prepanel.lmline","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","1.6.2"
"prepanel.loess","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, lwd = add.line$lwd, lty = add.line$lty,     col = add.line$col, ...) ","lattice","recommended","1.6.2"
"prepanel.qqmathline","closure","function","TRUE","FALSE","(y, distribution, f.value = ppoints, ...) ","lattice","recommended","1.6.2"
"print.shingle","closure","function","TRUE","FALSE","(x, showValues = TRUE, ...) ","lattice","recommended","1.6.2"
"print.shingleLevel","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","1.6.2"
"print.trellis","closure","function","TRUE","FALSE","(x, position, split, more = FALSE, newpage = TRUE, ...) ","lattice","recommended","1.6.2"
"qq","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = ""panel.qq"", prepanel = NULL, scales = list(), strip = TRUE,     groups = NULL, xlab, xlim, ylab, ylim, f.value = ppoints,     ..., subscripts = !is.null(groups), subset = TRUE) ","lattice","recommended","1.6.2"
"qqmath","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = ""panel.qqmath"", prepanel = NULL, scales = list(),     strip = TRUE, groups = NULL, xlab, xlim, ylab, ylim, f.value = ppoints,     distribution = qnorm, ..., subscripts = !is.null(groups),     subset = TRUE) ","lattice","recommended","1.6.2"
"rearrangeUnit","closure","function","TRUE","FALSE","(x, pos, u) ","lattice","recommended","1.6.2"
"rfs","closure","function","TRUE","FALSE","(model, layout = c(2, 1), xlab = ""f-value"", ylab = NULL,     distribution = qunif, panel = function(...) ","lattice","recommended","1.6.2"
"shingle","closure","function","TRUE","FALSE","(x, intervals = sort(unique(x))) ","lattice","recommended","1.6.2"
"show.settings","closure","function","TRUE","FALSE","(x = NULL) ","lattice","recommended","1.6.2"
"splom","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = 1, between = list(x = 0.5,     y = 0.5), layout = NULL, panel = if (is.null(groups)) ""panel.splom"" else ""panel.superpose"",     prepanel = NULL, scales = list(), strip = TRUE, groups = NULL,     xlab = ""Scatter Plot Matrix"", xlim, ylab = NULL, ylim, superpanel = ""panel.pairs"",     pscales = 5, varnames, ..., subscripts = !is.null(groups),     subset = TRUE) ","lattice","recommended","1.6.2"
"strip.default","closure","function","TRUE","FALSE","(which.given, which.panel, var.name, factor.levels,     shingle.intervals, strip.names = c(FALSE, TRUE), style = 1,     bg = trellis.par.get(""strip.background"")$col[which.given],     fg = trellis.par.get(""strip.shingle"")$col[which.given], par.strip.text = trellis.par.get(""add.text"")) ","lattice","recommended","1.6.2"
"stripplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), panel = if (is.null(groups)) ""panel.stripplot"" else ""panel.superpose"",     panel.groups = ""panel.stripplot"", prepanel = NULL, strip = TRUE,     jitter = FALSE, factor = 0.5, box.ratio = if (jitter) 1 else 0,     groups = NULL, horizontal = NULL, ..., subset = TRUE) ","lattice","recommended","1.6.2"
"summary.shingle","closure","function","TRUE","FALSE","(object, ...) ","lattice","recommended","1.6.2"
"tmd","closure","function","TRUE","FALSE","(object, aspect = ""fill"", as.table = object$as.table,     between = list(x = object$x.between, y = object$y.between),     key = object$key, layout = object$layout, main = object$main,     page = object$page, panel = ""panel.tmd"", par.strip.text = object$par.strip.text,     prepanel = NULL, scales = list(), strip = object$strip, sub = object$sub,     xlab = ""mean"", xlim = NULL, ylab = ""difference"", ylim = NULL,     ..., subscripts = !is.null(groups), subset = TRUE) ","lattice","recommended","1.6.2"
"trellis.device","closure","function","TRUE","FALSE","(device = getOption(""device""), color = !(dev.name ==     ""postscript""), theme = NULL, bg = NULL, new = TRUE, retain = FALSE,     ...) ","lattice","recommended","1.6.2"
"trellis.par.get","closure","function","TRUE","FALSE","(name = NULL) ","lattice","recommended","1.6.2"
"trellis.par.set","closure","function","TRUE","FALSE","(name, value, warn = TRUE) ","lattice","recommended","1.6.2"
"trellis.skeleton","closure","function","TRUE","FALSE","(as.table = FALSE, aspect = ""fill"", between = list(x = 0,     y = 0), key = NULL, page = NULL, main = NULL, sub = NULL,     par.strip.text = list(), skip = FALSE, strip = strip.default,     xlab = NULL, ylab = NULL, panel = panel, ...) ","lattice","recommended","1.6.2"
"update.trellis","closure","function","TRUE","FALSE","(object, aspect, as.table, between, key, layout, main,     page, panel, par.strip.text, scales, skip, strip, sub, xlab,     xlim, ylab, ylim, ...) ","lattice","recommended","1.6.2"
"wireframe","closure","function","TRUE","FALSE","(formula, data = parent.frame(), panel = ""panel.wireframe"",     prepanel = NULL, strip = TRUE, groups = NULL, cuts = 70,     pretty = FALSE, drape = FALSE, ..., col.regions = trellis.par.get(""regions"")$col,     colorkey = any(drape), subset = TRUE) ","lattice","recommended","1.6.2"
"xyplot","closure","function","TRUE","FALSE","(formula, data = parent.frame(), aspect = ""fill"", layout = NULL,     panel = if (is.null(groups)) ""panel.xyplot"" else ""panel.superpose"",     prepanel = NULL, scales = list(), strip = TRUE, groups = NULL,     xlab, xlim, ylab, ylim, ..., subscripts = !is.null(groups),     subset = TRUE) ","lattice","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","lqs","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","lqs","base","1.6.2"
"cov.mcd","closure","function","TRUE","FALSE","(...) ","lqs","base","1.6.2"
"cov.mve","closure","function","TRUE","FALSE","(...) ","lqs","base","1.6.2"
"cov.rob","closure","function","TRUE","FALSE","(x, cor = FALSE, quantile.used = floor((n + p + 1)/2),     method = c(""mve"", ""mcd"", ""classical""), nsamp = ""best"", seed) ","lqs","base","1.6.2"
"lmsreg","closure","function","TRUE","FALSE","(...) ","lqs","base","1.6.2"
"lqs","closure","function","TRUE","FALSE","(x, ...) ","lqs","base","1.6.2"
"lqs.default","closure","function","TRUE","FALSE","(x, y, intercept = TRUE, method = c(""lts"", ""lqs"", ""lms"",     ""S""), quantile, control = lqs.control(...), k0 = 1.548, seed,     ...) ","lqs","base","1.6.2"
"lqs.formula","closure","function","TRUE","FALSE","(formula, data, ..., method = c(""lts"", ""lqs"", ""lms"",     ""S"", ""model.frame""), subset, na.action = na.fail, model = TRUE,     x.ret = FALSE, y.ret = FALSE, contrasts = NULL) ","lqs","base","1.6.2"
"ltsreg","closure","function","TRUE","FALSE","(...) ","lqs","base","1.6.2"
"predict.lqs","closure","function","TRUE","FALSE","(object, newdata, ...) ","lqs","base","1.6.2"
"print.lqs","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","lqs","base","1.6.2"
"..mergeClassDefSlots","closure","function","TRUE","FALSE","(ClassDef, ...) ","methods","base","1.6.2"
".BasicClasses","character","character","TRUE","FALSE","NA","methods","base","1.6.2"
".BasicFunsList","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".BasicFunsMethods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".EmptyPrimitiveSkeletons","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".ErrorReplace","closure","function","TRUE","FALSE","(object, Class, value) ","methods","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(libname, pkgname, where) ","methods","base","1.6.2"
".GenericInPrimitiveMethods","closure","function","TRUE","FALSE","(mlist, f) ","methods","base","1.6.2"
".InitBasicClassMethods","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".InitBasicClasses","closure","function","TRUE","FALSE","(envir) ","methods","base","1.6.2"
".InitClassDefinition","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".InitExtensions","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".InitMethodDefinitions","closure","function","TRUE","FALSE","(envir) ","methods","base","1.6.2"
".InitMethodsListClass","closure","function","TRUE","FALSE","(envir) ","methods","base","1.6.2"
".InitShowMethods","closure","function","TRUE","FALSE","(envir) ","methods","base","1.6.2"
".InitSubsetMethods","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".InitTraceFunctions","closure","function","TRUE","FALSE","(envir) ","methods","base","1.6.2"
".MakeSignature","closure","function","TRUE","FALSE","(object, def, signature) ","methods","base","1.6.2"
".NonstandardGenericTest","closure","function","TRUE","FALSE","(body, fname, stdBody) ","methods","base","1.6.2"
".OldClassesList","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".ShortPrimitiveSkeletons","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".TraceWithMethods","closure","function","TRUE","FALSE","(what, tracer = NULL, exit = NULL, at = numeric(), print = TRUE,     signature = NULL) ","methods","base","1.6.2"
".ValidateValueClass","closure","function","TRUE","FALSE","(fdef, name, valueClass) ","methods","base","1.6.2"
".__C__(","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__<-","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__ANY","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__EmptyMethodsList","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__LinearMethodsList","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__MethodDefinition","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__MethodDefinitionWithTrace","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__MethodWithNext","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__MethodWithNextWithTrace","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__MethodsList","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__NULL","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__ObjectsWithPackage","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__OptionalFunction","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__POSIXct","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__POSIXt","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__PossibleMethod","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__SClassExtension","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__VIRTUAL","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__anova","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__anova.glm","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__anova.glm.null","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__array","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__call","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__character","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__classPrototypeDef","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__classRepresentation","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__complex","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__data.frame","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__density","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__double","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__dump.frames","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__environment","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__expression","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__externalptr","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__factor","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__for","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__formula","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__function","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__functionWithTrace","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__genericFunction","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__genericFunctionWithTrace","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__glm","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__glm.null","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__groupGenericFunction","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__groupGenericFunctionWithTrace","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__hsearch","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__if","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__integer","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__integrate","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__language","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__libraryIQR","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__list","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__lm","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__logLik","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__logical","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__matrix","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__missing","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__mlm","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__mtable","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__mts","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__name","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__nonstandardGeneric","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__nonstandardGenericFunction","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__nonstandardGroupGenericFunction","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__numeric","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__oldClass","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__ordered","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__packageIQR","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__packageInfo","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__recordedplot","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__repeat","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__rle","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__signature","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__single","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__socket","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__structure","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__summary.table","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__table","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__traceable","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__ts","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__vector","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__while","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__C__{","list","classRepresentation","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__(:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__<-:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__MethodDefinition:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__MethodDefinitionWithTrace:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__MethodWithNext:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__MethodWithNextWithTrace:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__NULL:","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__ObjectsWithPackage:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__POSIXct:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__POSIXt:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__anova.glm.null:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__anova.glm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__anova:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__array:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__call:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__character:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__complex:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__data.frame:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__density:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__double:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__dump.frames:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__expression:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__factor:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__for:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__formula:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__function:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__functionWithTrace:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__genericFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__genericFunctionWithTrace:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__glm.null:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__glm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__groupGenericFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__groupGenericFunctionWithTrace:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__hsearch:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__if:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__integer:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__integrate:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__libraryIQR:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__list:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__lm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__logLik:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__logical:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__matrix:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__mlm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__mtable:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__mts:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__name:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__nonstandardGenericFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__nonstandardGroupGenericFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__numeric:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__ordered:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__packageIQR:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__packageInfo:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__recordedplot:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__repeat:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__rle:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__signature:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__single:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__socket:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__structure:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__summary.table:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__table:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__ts:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__while:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__EXT__{:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Arith:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Compare:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Complex:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Math2:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Math:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Ops:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__Summary:base","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__coerce:methods","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__coerce<-:methods","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__findNextMethod:methods","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__initialize:methods","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__loadMethod:methods","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__M__show:methods","list","MethodsList","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__MethodDefinition:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__MethodWithNext:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__OptionalFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__POSIXct:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__PossibleMethod:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__anova.glm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__array:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__character:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__data.frame:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__factor:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__function:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__genericFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__glm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__groupGenericFunction:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__language:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__lm:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__matrix:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__nonstandardGeneric:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__numeric:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__oldClass:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__structure:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__traceable:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".__SUB__vector:methods","list","list","TRUE","FALSE","NA","methods","base","1.6.2"
".addMethodFrom","closure","function","TRUE","FALSE","(def, arg, Class, fromClass) ","methods","base","1.6.2"
".asGroupArgument","closure","function","TRUE","FALSE","(group) ","methods","base","1.6.2"
".basicCoerceMethod","closure","function","TRUE","FALSE","(from, to, strict = TRUE) ","methods","base","1.6.2"
".class1","closure","function","TRUE","FALSE","(x) ","methods","base","1.6.2"
".completeExtBreadth","closure","function","TRUE","FALSE","(ClassDef, slotName, soFar = getClassName(ClassDef),     level = 1) ","methods","base","1.6.2"
".conflicts.OK","logical","logical","TRUE","FALSE","NA","methods","base","1.6.2"
".dataPartReplace","closure","function","TRUE","FALSE","(object, Class, value) ","methods","base","1.6.2"
".dataPartReplace2","closure","function","TRUE","FALSE","(object, Class, value) ","methods","base","1.6.2"
".doTracePrint","closure","function","TRUE","FALSE","(msg = """") ","methods","base","1.6.2"
".findMetaData","closure","function","TRUE","FALSE","(what, where = search()) ","methods","base","1.6.2"
".findNextMethod","closure","function","TRUE","FALSE","(method, f = ""<unknown>"", mlist, optional = FALSE, excluded,     envir) ","methods","base","1.6.2"
".getOrMakeMethodsList","closure","function","TRUE","FALSE","(f, where, genericFun) ","methods","base","1.6.2"
".initClassSupport","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".insertCachedMethods","closure","function","TRUE","FALSE","(mlist, argName, Class, fromClass, def) ","methods","base","1.6.2"
".insertExpr","closure","function","TRUE","FALSE","(expr, el) ","methods","base","1.6.2"
".makeAsMethod","closure","function","TRUE","FALSE","(expr, simple, Class) ","methods","base","1.6.2"
".makeBasicFunsList","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".makeCallString","closure","function","TRUE","FALSE","(def, name = substitute(def), args = formalArgs(def)) ","methods","base","1.6.2"
".makeTracedFunction","closure","function","TRUE","FALSE","(def, tracer, exit, at, print) ","methods","base","1.6.2"
".makeValidityMethod","closure","function","TRUE","FALSE","(Class, validity) ","methods","base","1.6.2"
".mergeAttrs","closure","function","TRUE","FALSE","(value, object, explicit = NULL) ","methods","base","1.6.2"
".mergeClassDefSlots","closure","function","TRUE","FALSE","(ClassDef, ...) ","methods","base","1.6.2"
".mergeExtends","closure","function","TRUE","FALSE","(what) ","methods","base","1.6.2"
".methodSignatureMatrix","closure","function","TRUE","FALSE","(object, sigSlots = c(""target"", ""defined"")) ","methods","base","1.6.2"
".newExternalptr","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
".objectSlotNames","closure","function","TRUE","FALSE","(object) ","methods","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","methods","base","1.6.2"
".prototype","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
".recursiveCallTest","closure","function","TRUE","FALSE","(x, fname) ","methods","base","1.6.2"
".removeSubclassLinks","closure","function","TRUE","FALSE","(classDef) ","methods","base","1.6.2"
".saveImage","logical","logical","TRUE","FALSE","NA","methods","base","1.6.2"
".setCoerceGeneric","closure","function","TRUE","FALSE","(where) ","methods","base","1.6.2"
".simpleCoerceExpr","closure","function","TRUE","FALSE","(fromClass, toClass, fromSlots = slotNames(fromClass)) ","methods","base","1.6.2"
".simpleExtCoerce","closure","function","TRUE","FALSE","(from, strict = TRUE) ","methods","base","1.6.2"
".simpleExtReplace","closure","function","TRUE","FALSE","(object, Class, value) ","methods","base","1.6.2"
".simpleExtTest","closure","function","TRUE","FALSE","(object) ","methods","base","1.6.2"
".tempClassDef","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
".traceClassName","closure","function","TRUE","FALSE","(className) ","methods","base","1.6.2"
".transitiveExtends","closure","function","TRUE","FALSE","(from, by, byExt, moreExts, fromSlots) ","methods","base","1.6.2"
".untracedFunction","closure","function","TRUE","FALSE","(f) ","methods","base","1.6.2"
".validDataPartClass","closure","function","TRUE","FALSE","(cl) ","methods","base","1.6.2"
".validExtends","closure","function","TRUE","FALSE","(class1, class2, classDef1, classDef2, slotTests) ","methods","base","1.6.2"
".valueClassTest","closure","function","TRUE","FALSE","(object, classes, fname) ","methods","base","1.6.2"
"@<-","closure","function","TRUE","FALSE","(object, name, value) ","methods","base","1.6.2"
"Arith","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","1.6.2"
"Compare","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","1.6.2"
"Complex","closure","groupGenericFunction","TRUE","TRUE","(z) ","methods","base","1.6.2"
"Math","closure","groupGenericFunction","TRUE","TRUE","(x) ","methods","base","1.6.2"
"Math2","closure","groupGenericFunction","TRUE","TRUE","(x, digits) ","methods","base","1.6.2"
"MethodAddCoerce","closure","function","TRUE","FALSE","(method, argName, thisClass, methodClass) ","methods","base","1.6.2"
"MethodsList","closure","function","TRUE","FALSE","(.ArgName, ...) ","methods","base","1.6.2"
"MethodsListSelect","closure","function","TRUE","FALSE","(f, env, mlist = getMethodsForDispatch(f, fdef), fEnv = if (is(fdef,     ""genericFunction"")) environment(fdef) else NULL, finalDefault = finalDefaultMethod(mlist),     evalArgs = TRUE, useInherited = TRUE, fdef = getGeneric(f)) ","methods","base","1.6.2"
"Ops","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","1.6.2"
"Quote","special","function","TRUE","NA","","methods","base","1.6.2"
"SessionClassMetaData","character","character","TRUE","FALSE","NA","methods","base","1.6.2"
"SignatureMethod","closure","function","TRUE","FALSE","(names, signature, definition) ","methods","base","1.6.2"
"Summary","closure","groupGenericFunction","TRUE","TRUE","(x, ..., na.rm = FALSE) ","methods","base","1.6.2"
"__ClassMetaData","environment","environment","TRUE","FALSE","NA","methods","base","1.6.2"
"__MethodMetaData","environment","environment","TRUE","FALSE","NA","methods","base","1.6.2"
"allGenerics","closure","function","TRUE","FALSE","(where = seq(along = search()), searchForm = FALSE) ","methods","base","1.6.2"
"allNames","closure","function","TRUE","FALSE","(x) ","methods","base","1.6.2"
"as","closure","function","TRUE","FALSE","(object, Class, strict = TRUE) ","methods","base","1.6.2"
"as<-","closure","function","TRUE","FALSE","(object, Class, value) ","methods","base","1.6.2"
"asMethodDefinition","closure","function","TRUE","FALSE","(def, signature = list()) ","methods","base","1.6.2"
"assignClassDef","closure","function","TRUE","FALSE","(Class, def, where = .GlobalEnv) ","methods","base","1.6.2"
"assignMethodsMetaData","closure","function","TRUE","FALSE","(f, value, fdef, where, deflt = finalDefaultMethod(fdef@default)) ","methods","base","1.6.2"
"assignToClassMetaData","closure","function","TRUE","FALSE","(name, value) ","methods","base","1.6.2"
"assignToMethodMetaData","closure","function","TRUE","FALSE","(name, value) ","methods","base","1.6.2"
"balanceMethodsList","closure","function","TRUE","FALSE","(mlist, args, check = TRUE) ","methods","base","1.6.2"
"browseAll","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
"cacheGenericsMetaData","closure","function","TRUE","FALSE","(generics, attach = TRUE, where, package) ","methods","base","1.6.2"
"cacheMetaData","closure","function","TRUE","FALSE","(where, attach = TRUE) ","methods","base","1.6.2"
"cacheMethod","closure","function","TRUE","FALSE","(f, sig, def, args = names(sig), fdef = getGeneric(f)) ","methods","base","1.6.2"
"callGeneric","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"callNextMethod","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"checkSlotAssignment","closure","function","TRUE","FALSE","(obj, name, value) ","methods","base","1.6.2"
"class","builtin","function","TRUE","NA","","methods","base","1.6.2"
"class<-","closure","function","TRUE","FALSE","(x, value) ","methods","base","1.6.2"
"classMetaName","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"coerce","closure","genericFunction","TRUE","TRUE","(from, to, strict = TRUE) ","methods","base","1.6.2"
"coerce<-","closure","genericFunction","TRUE","TRUE","(from, to, value) ","methods","base","1.6.2"
"completeClassDefinition","closure","function","TRUE","FALSE","(Class, ClassDef = getClassDef(Class)) ","methods","base","1.6.2"
"completeExtends","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"completeSubclasses","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"conformMethod","closure","function","TRUE","FALSE","(signature, mnames, fnames, f = ""<unspecified>"") ","methods","base","1.6.2"
"defaultDumpName","closure","function","TRUE","FALSE","(generic, signature) ","methods","base","1.6.2"
"defaultPrototype","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
"doPrimitiveMethod","closure","function","TRUE","FALSE","(name, def, call = sys.call(-1), ev = sys.frame(sys.parent(2))) ","methods","base","1.6.2"
"dumpMethod","closure","function","TRUE","FALSE","(f, signature = character(), file = defaultDumpName(f,     signature), where = -1, def = getMethod(f, signature, where = where,     optional = TRUE)) ","methods","base","1.6.2"
"dumpMethods","closure","function","TRUE","FALSE","(f, file = """", signature = character(), methods, where = -1) ","methods","base","1.6.2"
"el","closure","function","TRUE","FALSE","(object, where) ","methods","base","1.6.2"
"el<-","special","function","TRUE","NA","","methods","base","1.6.2"
"elNamed","closure","function","TRUE","FALSE","(x, name, mustFind = FALSE) ","methods","base","1.6.2"
"elNamed<-","closure","function","TRUE","FALSE","(x, name, value) ","methods","base","1.6.2"
"empty.dump","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
"emptyMethodsList","closure","function","TRUE","FALSE","(mlist, thisClass, sublist = list()) ","methods","base","1.6.2"
"existsFunction","closure","function","TRUE","FALSE","(f, generic = TRUE, where) ","methods","base","1.6.2"
"existsMethod","closure","function","TRUE","FALSE","(f, signature = character(), where = -1) ","methods","base","1.6.2"
"extends","closure","function","TRUE","FALSE","(class1, class2, maybe = TRUE) ","methods","base","1.6.2"
"extendsMetaName","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"finalDefaultMethod","closure","function","TRUE","FALSE","(mlist, fname = ""NULL"") ","methods","base","1.6.2"
"findClass","closure","function","TRUE","FALSE","(Class) ","methods","base","1.6.2"
"findFunction","closure","function","TRUE","FALSE","(f, generic = TRUE) ","methods","base","1.6.2"
"findMethod","closure","function","TRUE","FALSE","(f, signature, where = search()) ","methods","base","1.6.2"
"findNextMethod","closure","genericFunction","TRUE","TRUE","(method, f = ""<unknown>"", mlist, optional = FALSE, envir) ","methods","base","1.6.2"
"findUnique","closure","function","TRUE","FALSE","(what, doFind = find, message) ","methods","base","1.6.2"
"formalArgs","closure","function","TRUE","FALSE","(def) ","methods","base","1.6.2"
"functionBody","closure","function","TRUE","FALSE","(fun = sys.function(sys.parent())) ","methods","base","1.6.2"
"functionBody<-","closure","function","TRUE","FALSE","(f, value, envir = environment(f)) ","methods","base","1.6.2"
"functionPackageName","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"generic.skeleton","closure","function","TRUE","FALSE","(name, fdef, fdefault) ","methods","base","1.6.2"
"getAccess","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getAllMethods","closure","function","TRUE","FALSE","(f, fdef = getGeneric(f, TRUE), libs = search()) ","methods","base","1.6.2"
"getAllSuperClasses","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getClass","closure","function","TRUE","FALSE","(Class, .Force = FALSE) ","methods","base","1.6.2"
"getClassDef","closure","function","TRUE","FALSE","(Class, where = -1) ","methods","base","1.6.2"
"getClassName","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getClassPackage","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getClasses","closure","function","TRUE","FALSE","(where = get(SessionClassMetaData)) ","methods","base","1.6.2"
"getDataPart","closure","function","TRUE","FALSE","(object) ","methods","base","1.6.2"
"getExtends","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getFromClassMetaData","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"getFromMethodMetaData","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"getFunction","closure","function","TRUE","FALSE","(name, generic = TRUE, mustFind = TRUE, where = -1) ","methods","base","1.6.2"
"getGeneric","closure","function","TRUE","FALSE","(f, mustFind = FALSE) ","methods","base","1.6.2"
"getGenerics","closure","function","TRUE","FALSE","(where = seq(along = search()), searchForm = FALSE) ","methods","base","1.6.2"
"getGroup","closure","function","TRUE","FALSE","(fdef, recursive = FALSE) ","methods","base","1.6.2"
"getMethod","closure","function","TRUE","FALSE","(f, signature = character(), where = -1, optional = FALSE) ","methods","base","1.6.2"
"getMethods","closure","function","TRUE","FALSE","(f, where = -1) ","methods","base","1.6.2"
"getMethodsForDispatch","closure","function","TRUE","FALSE","(f, fdef = getGeneric(f)) ","methods","base","1.6.2"
"getMethodsMetaData","closure","function","TRUE","FALSE","(f, where = -1) ","methods","base","1.6.2"
"getPackageName","closure","function","TRUE","FALSE","(where = 1) ","methods","base","1.6.2"
"getProperties","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getPrototype","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getSlots","closure","function","TRUE","FALSE","(x, complete = TRUE) ","methods","base","1.6.2"
"getSubclasses","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getValidity","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"getVirtual","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"hasArg","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"hasMethod","closure","function","TRUE","FALSE","(f, signature = character()) ","methods","base","1.6.2"
"inheritedSubMethodLists","closure","function","TRUE","FALSE","(object, thisClass, mlist, ev) ","methods","base","1.6.2"
"initMethodDispatch","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
"initialize","closure","nonstandardGenericFunction","TRUE","TRUE","(.Object, ...) ","methods","base","1.6.2"
"insertMethod","closure","function","TRUE","FALSE","(mlist, signature, args, def, cacheOnly = FALSE) ","methods","base","1.6.2"
"insertMethodInEmptyList","closure","function","TRUE","FALSE","(mlist, def) ","methods","base","1.6.2"
"is","closure","function","TRUE","FALSE","(object, class2) ","methods","base","1.6.2"
"is.primitive","closure","function","TRUE","FALSE","(fdef) ","methods","base","1.6.2"
"isClass","closure","function","TRUE","FALSE","(Class, formal = TRUE) ","methods","base","1.6.2"
"isClassDef","closure","function","TRUE","FALSE","(object) ","methods","base","1.6.2"
"isGeneric","closure","function","TRUE","FALSE","(f, where = -1, fdef = NULL, getName = FALSE) ","methods","base","1.6.2"
"isGrammarSymbol","closure","function","TRUE","FALSE","(symbol) ","methods","base","1.6.2"
"isGroup","closure","function","TRUE","FALSE","(f, where = -1, fdef = getGeneric(f)) ","methods","base","1.6.2"
"isVirtualClass","closure","function","TRUE","FALSE","(Class) ","methods","base","1.6.2"
"languageEl","closure","function","TRUE","FALSE","(object, which) ","methods","base","1.6.2"
"languageEl<-","closure","function","TRUE","FALSE","(object, which, value) ","methods","base","1.6.2"
"linearizeMlist","closure","function","TRUE","FALSE","(mlist, inherited = TRUE) ","methods","base","1.6.2"
"listFromMlist","closure","function","TRUE","FALSE","(mlist, prefix = list()) ","methods","base","1.6.2"
"loadMethod","closure","genericFunction","TRUE","TRUE","(method, fname, envir) ","methods","base","1.6.2"
"makeClassRepresentation","closure","function","TRUE","FALSE","(name, slots = list(), superClasses = character(), prototype = NULL,     package, validity = NULL, access = list(), version = .newExternalptr(),     sealed = FALSE, virtual = NA) ","methods","base","1.6.2"
"makeExtends","closure","function","TRUE","FALSE","(Class, to, coerce = NULL, test = NULL, replace = NULL,     by = character(), package = getPackageName(findClass(to)),     slots = getSlots(classDef1), classDef1 = getClass(Class,         TRUE), classDef2 = getClass(to, TRUE)) ","methods","base","1.6.2"
"makeGeneric","closure","function","TRUE","FALSE","(f, fdef, fdefault = getFunction(f, generic = FALSE,     mustFind = FALSE), group = list(), valueClass = character(),     package, signature = NULL, genericFunction = NULL) ","methods","base","1.6.2"
"makeMethodsList","closure","function","TRUE","FALSE","(object, level = 1) ","methods","base","1.6.2"
"makePrototypeFromClassDef","closure","function","TRUE","FALSE","(properties, prototype, extends) ","methods","base","1.6.2"
"makeStandardGeneric","closure","function","TRUE","FALSE","(f, fdef) ","methods","base","1.6.2"
"matchSignature","closure","function","TRUE","FALSE","(signature, fun) ","methods","base","1.6.2"
"mergeMethods","closure","function","TRUE","FALSE","(m1, m2, genericLabel = character()) ","methods","base","1.6.2"
"message","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"metaNameUndo","closure","function","TRUE","FALSE","(strings, prefix = ""M"", searchForm = FALSE) ","methods","base","1.6.2"
"methodsPackageMetaName","closure","function","TRUE","FALSE","(prefix, name) ","methods","base","1.6.2"
"missingArg","closure","function","TRUE","FALSE","(symbol, envir = parent.frame(), eval = FALSE) ","methods","base","1.6.2"
"mlistMetaName","closure","function","TRUE","FALSE","(name = """") ","methods","base","1.6.2"
"new","closure","function","TRUE","FALSE","(Class, ...) ","methods","base","1.6.2"
"newBasic","closure","function","TRUE","FALSE","(Class, ...) ","methods","base","1.6.2"
"newClassRepresentation","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"newEmptyObject","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
"plot","closure","function","TRUE","FALSE","(x, y, ...) ","methods","base","1.6.2"
"possibleExtends","closure","function","TRUE","FALSE","(class1, class2) ","methods","base","1.6.2"
"print.MethodsList","closure","function","TRUE","FALSE","(x, ...) ","methods","base","1.6.2"
"print.classRepresentation","closure","function","TRUE","FALSE","(x, ...) ","methods","base","1.6.2"
"print.default","closure","function","TRUE","FALSE","(x, ...) ","methods","base","1.6.2"
"printNoClass","closure","function","TRUE","FALSE","(x, digits = NULL, quote = TRUE, na.print = NULL, print.gap = NULL,     right = FALSE, ...) ","methods","base","1.6.2"
"promptClass","closure","function","TRUE","FALSE","(clName, filename = paste(topicName(type, clName), "".Rd"",     sep = """"), type = ""class"", keywords = ""classes"", where = find(classMetaName(clName))) ","methods","base","1.6.2"
"promptMethods","closure","function","TRUE","FALSE","(f, filename = TRUE, methods) ","methods","base","1.6.2"
"prototype","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"reconcilePropertiesAndPrototype","closure","function","TRUE","FALSE","(name, properties, prototype, superClasses) ","methods","base","1.6.2"
"rematchDefinition","closure","function","TRUE","FALSE","(definition, generic, mnames, fnames) ","methods","base","1.6.2"
"removeClass","closure","function","TRUE","FALSE","(Class, where = -1, removeSubclassLinks = TRUE) ","methods","base","1.6.2"
"removeFromClassMetaData","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"removeFromMethodMetaData","closure","function","TRUE","FALSE","(name) ","methods","base","1.6.2"
"removeGeneric","closure","function","TRUE","FALSE","(f, where = -1) ","methods","base","1.6.2"
"removeMethod","closure","function","TRUE","FALSE","(f, signature = character(), where) ","methods","base","1.6.2"
"removeMethods","closure","function","TRUE","FALSE","(f, where = find(mlistMetaName(f))) ","methods","base","1.6.2"
"removeMethodsObject","closure","function","TRUE","FALSE","(f, where = findUnique(mlistMetaName(f), , paste(""methods object for function"",     f))) ","methods","base","1.6.2"
"removeSubclassMetaData","closure","function","TRUE","FALSE","(ClassDef1, ClassDef2) ","methods","base","1.6.2"
"representation","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"requireMethods","closure","function","TRUE","FALSE","(functions, signature, message = paste(""No method defined for signature"",     paste(signature, collapse = "", ""))) ","methods","base","1.6.2"
"resetClass","closure","function","TRUE","FALSE","(Class, resetSubclasses = TRUE) ","methods","base","1.6.2"
"resetGeneric","closure","function","TRUE","FALSE","(f, fdef) ","methods","base","1.6.2"
"selectMethod","closure","function","TRUE","FALSE","(f, signature, optional = FALSE, useInherited = TRUE,     mlist = getMethods(fdef), fdef = getGeneric(f)) ","methods","base","1.6.2"
"sessionData","closure","function","TRUE","FALSE","() ","methods","base","1.6.2"
"setAllMethodsSlot","closure","function","TRUE","FALSE","(mlist) ","methods","base","1.6.2"
"setAs","closure","function","TRUE","FALSE","(from, to, def, replace = NULL, where = 1) ","methods","base","1.6.2"
"setClass","closure","function","TRUE","FALSE","(Class, representation = list(), prototype = NULL, contains = character(),     validity = NULL, access = list(), where = 1, version = .newExternalptr(),     sealed = FALSE, package = getPackageName(where)) ","methods","base","1.6.2"
"setDataPart","closure","function","TRUE","FALSE","(object, value) ","methods","base","1.6.2"
"setExtendsMetaData","closure","function","TRUE","FALSE","(ClassDef1, ClassDef2, value, where) ","methods","base","1.6.2"
"setGeneric","closure","function","TRUE","FALSE","(name, def = NULL, group = list(), valueClass = character(),     where = 1, package = NULL, signature = NULL, useAsDefault = existsFunction(name,         generic = FALSE), genericFunction = NULL) ","methods","base","1.6.2"
"setGroupGeneric","closure","function","TRUE","FALSE","(name, def = NULL, group = list(), valueClass = character(),     knownMembers = list(), package = getPackageName(where), where = 1) ","methods","base","1.6.2"
"setIs","closure","function","TRUE","FALSE","(class1, class2, test = NULL, coerce = NULL, replace = NULL,     by = character(), where = 1, complete = TRUE) ","methods","base","1.6.2"
"setMethod","closure","function","TRUE","FALSE","(f, signature = character(), definition, where = 1,     valueClass = NULL) ","methods","base","1.6.2"
"setOldClass","closure","function","TRUE","FALSE","(Classes, where = 1) ","methods","base","1.6.2"
"setPackageName","closure","function","TRUE","FALSE","(pkg, env) ","methods","base","1.6.2"
"setPrimitiveMethods","closure","function","TRUE","FALSE","(f, fdef, code, generic, mlist = get("".Methods"", envir = environment(generic))) ","methods","base","1.6.2"
"setReplaceMethod","closure","function","TRUE","FALSE","(f, ...) ","methods","base","1.6.2"
"setSubclassMetaData","closure","function","TRUE","FALSE","(ClassDef1, ClassDef2, where) ","methods","base","1.6.2"
"setValidity","closure","function","TRUE","FALSE","(Class, method, where = 1) ","methods","base","1.6.2"
"show","closure","genericFunction","TRUE","TRUE","(object) ","methods","base","1.6.2"
"showClass","closure","function","TRUE","FALSE","(Class, complete = TRUE, propertiesAreCalled = ""Slots"") ","methods","base","1.6.2"
"showDefault","closure","function","TRUE","FALSE","(object, oldMethods = TRUE) ","methods","base","1.6.2"
"showExtends","closure","function","TRUE","FALSE","(ext, printTo = stdout()) ","methods","base","1.6.2"
"showMethods","closure","function","TRUE","FALSE","(f = character(), where = -1, classes = NULL, includeDefs = FALSE,     inherited = TRUE, printTo = stdout()) ","methods","base","1.6.2"
"showMlist","closure","function","TRUE","FALSE","(mlist, includeDefs = TRUE, inherited = TRUE, classes = NULL,     useArgNames = TRUE, printTo = stdout()) ","methods","base","1.6.2"
"sigToEnv","closure","function","TRUE","FALSE","(signature) ","methods","base","1.6.2"
"signature","closure","function","TRUE","FALSE","(...) ","methods","base","1.6.2"
"slot","closure","function","TRUE","FALSE","(object, name) ","methods","base","1.6.2"
"slot<-","closure","function","TRUE","FALSE","(object, name, check = TRUE, value) ","methods","base","1.6.2"
"slotNames","closure","function","TRUE","FALSE","(x) ","methods","base","1.6.2"
"subclassesMetaName","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","1.6.2"
"substituteDirect","closure","function","TRUE","FALSE","(object, frame = sys.frame(-1), cleanFunction = TRUE) ","methods","base","1.6.2"
"substituteFunctionArgs","closure","function","TRUE","FALSE","(def, newArgs, args = formalArgs(def), silent = FALSE) ","methods","base","1.6.2"
"superClassDepth","closure","function","TRUE","FALSE","(ClassDef, soFar = getClassName(ClassDef)) ","methods","base","1.6.2"
"testVirtual","closure","function","TRUE","FALSE","(properties, extends, prototype) ","methods","base","1.6.2"
"traceOff","closure","function","TRUE","FALSE","(what) ","methods","base","1.6.2"
"traceOn","closure","function","TRUE","FALSE","(what, tracer = browseAll, exit = NULL) ","methods","base","1.6.2"
"tryNew","closure","function","TRUE","FALSE","(Class) ","methods","base","1.6.2"
"trySilent","closure","function","TRUE","FALSE","(expr) ","methods","base","1.6.2"
"unRematchDefinition","closure","function","TRUE","FALSE","(definition) ","methods","base","1.6.2"
"validObject","closure","function","TRUE","FALSE","(object, test = FALSE) ","methods","base","1.6.2"
"validSlotNames","closure","function","TRUE","FALSE","(names) ","methods","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","mgcv","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","mgcv","recommended","1.6.2"
"GAMsetup","closure","function","TRUE","FALSE","(G) ","mgcv","recommended","1.6.2"
"QT","closure","function","TRUE","FALSE","(A) ","mgcv","recommended","1.6.2"
"gam","closure","function","TRUE","FALSE","(formula, family = gaussian(), data = list(), weights = NULL,     control = gam.control(), scale = 0, knots = NULL, sp = NULL) ","mgcv","recommended","1.6.2"
"gam.check","closure","function","TRUE","FALSE","(b) ","mgcv","recommended","1.6.2"
"gam.control","closure","function","TRUE","FALSE","(epsilon = 1e-04, maxit = 20, globit = 20, mgcv.tol = 1e-06,     mgcv.half = 15, trace = FALSE) ","mgcv","recommended","1.6.2"
"gam.fit","closure","function","TRUE","FALSE","(G, start = NULL, etastart = NULL, mustart = NULL, family = gaussian(),     control = gam.control(), nb.iter = NULL) ","mgcv","recommended","1.6.2"
"gam.nbut","closure","function","TRUE","FALSE","(G, link = log, control = gam.control(), scale = 0) ","mgcv","recommended","1.6.2"
"gam.parser","closure","function","TRUE","FALSE","(gf, parent.level = 1) ","mgcv","recommended","1.6.2"
"gam.setup","closure","function","TRUE","FALSE","(formula, data = list(), gam.call = NULL, predict = TRUE,     parent.level = 1, nsdf = -1, knots = NULL, sp = NULL) ","mgcv","recommended","1.6.2"
"gam.side.conditions","closure","function","TRUE","FALSE","(G) ","mgcv","recommended","1.6.2"
"get.family","closure","function","TRUE","FALSE","(family) ","mgcv","recommended","1.6.2"
"mgcv","closure","function","TRUE","FALSE","(M) ","mgcv","recommended","1.6.2"
"mono.con","closure","function","TRUE","FALSE","(x, up = TRUE, lower = NA, upper = NA) ","mgcv","recommended","1.6.2"
"neg.binom","closure","function","TRUE","FALSE","(theta = NA, link = ""log"") ","mgcv","recommended","1.6.2"
"null.space.basis.labels","closure","function","TRUE","FALSE","(names, m, by = ""NA"") ","mgcv","recommended","1.6.2"
"null.space.basis.powers","closure","function","TRUE","FALSE","(m, d) ","mgcv","recommended","1.6.2"
"null.space.dimension","closure","function","TRUE","FALSE","(d, m) ","mgcv","recommended","1.6.2"
"pcls","closure","function","TRUE","FALSE","(M) ","mgcv","recommended","1.6.2"
"persp.gam","closure","function","TRUE","FALSE","(x, view = NULL, slice = list(), sizes = c(20, 20),     mask = FALSE, se = 2, theta = 0, phi = 15, r = sqrt(3), d = 1,     scale = TRUE, expand = 1, col = NULL, border = NULL, ltheta = -135,     lphi = 45, shade = 0.75, box = TRUE, axes = TRUE, nticks = 5,     ticktype = ""detailed"", ...) ","mgcv","recommended","1.6.2"
"plot.gam","closure","function","TRUE","FALSE","(x, rug = TRUE, se = TRUE, pages = 0, select = NULL,     scale = -1, n = 100, n2 = 40, pers = FALSE, theta = 30, phi = 30,     jit = FALSE, ...) ","mgcv","recommended","1.6.2"
"predict.gam","closure","function","TRUE","FALSE","(object, newdata, type = ""link"", se.fit = FALSE, ...) ","mgcv","recommended","1.6.2"
"print.gam","closure","function","TRUE","FALSE","(x, ...) ","mgcv","recommended","1.6.2"
"print.summary.gam","closure","function","TRUE","FALSE","(x, ...) ","mgcv","recommended","1.6.2"
"residuals.gam","closure","function","TRUE","FALSE","(object, type = c(""deviance"", ""pearson"", ""scaled.pearson"",     ""working"", ""response""), ...) ","mgcv","recommended","1.6.2"
"s","closure","function","TRUE","FALSE","(..., k = -1, fx = FALSE, bs = ""tp"", m = 0, by = NA) ","mgcv","recommended","1.6.2"
"summary.gam","closure","function","TRUE","FALSE","(object, ...) ","mgcv","recommended","1.6.2"
"theta.maxl","closure","function","TRUE","FALSE","(y, mu, n = length(y), limit = 10, eps = .Machine$double.eps^0.25,     trace = FALSE) ","mgcv","recommended","1.6.2"
"uniquecombs","closure","function","TRUE","FALSE","(x) ","mgcv","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","modreg","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","modreg","base","1.6.2"
"anova.loess","closure","function","TRUE","FALSE","(object, ...) ","modreg","base","1.6.2"
"ksmooth","closure","function","TRUE","FALSE","(x, y, kernel = c(""box"", ""normal""), bandwidth = 0.5,     range.x = range(x), n.points = max(100, length(x)), x.points) ","modreg","base","1.6.2"
"loess","closure","function","TRUE","FALSE","(formula, data = NULL, weights, subset, na.action, model = FALSE,     span = 0.75, enp.target, degree = 2, parametric = FALSE,     drop.square = FALSE, normalize = TRUE, family = c(""gaussian"",         ""symmetric""), method = c(""loess"", ""model.frame""), control = loess.control(...),     ...) ","modreg","base","1.6.2"
"loess.control","closure","function","TRUE","FALSE","(surface = c(""interpolate"", ""direct""), statistics = c(""approximate"",     ""exact""), trace.hat = c(""exact"", ""approximate""), cell = 0.2,     iterations = 4, ...) ","modreg","base","1.6.2"
"loess.smooth","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, ...) ","modreg","base","1.6.2"
"plot.ppr","closure","function","TRUE","FALSE","(x, ask, type = ""o"", ...) ","modreg","base","1.6.2"
"pointwise","closure","function","TRUE","FALSE","(results, coverage) ","modreg","base","1.6.2"
"ppr","closure","function","TRUE","FALSE","(x, ...) ","modreg","base","1.6.2"
"ppr.default","closure","function","TRUE","FALSE","(x, y, weights = rep(1, n), ww = rep(1, q), nterms,     max.terms = nterms, optlevel = 2, sm.method = c(""supsmu"",         ""spline"", ""gcvspline""), bass = 0, span = 0, df = 5, gcvpen = 1,     ...) ","modreg","base","1.6.2"
"ppr.formula","closure","function","TRUE","FALSE","(formula, data = sys.parent(), weights, subset, na.action,     contrasts = NULL, ...) ","modreg","base","1.6.2"
"predLoess","closure","function","TRUE","FALSE","(y, x, newx, s, weights, robust, span, degree, normalize,     parametric, drop.square, surface, cell, family, kd, divisor,     se = FALSE) ","modreg","base","1.6.2"
"predict.loess","closure","function","TRUE","FALSE","(object, newdata = NULL, se = FALSE, ...) ","modreg","base","1.6.2"
"predict.ppr","closure","function","TRUE","FALSE","(object, newdata, ...) ","modreg","base","1.6.2"
"predict.smooth.spline","closure","function","TRUE","FALSE","(object, x, deriv = 0, ...) ","modreg","base","1.6.2"
"predict.smooth.spline.fit","closure","function","TRUE","FALSE","(object, x, deriv = 0, ...) ","modreg","base","1.6.2"
"print.loess","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","modreg","base","1.6.2"
"print.ppr","closure","function","TRUE","FALSE","(x, ...) ","modreg","base","1.6.2"
"print.smooth.spline","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","modreg","base","1.6.2"
"print.summary.loess","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","modreg","base","1.6.2"
"print.summary.ppr","closure","function","TRUE","FALSE","(x, ...) ","modreg","base","1.6.2"
"scatter.smooth","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), xlab = deparse(substitute(x)), ylab = deparse(substitute(y)),     ylim = range(y, prediction$y), evaluation = 50, ...) ","modreg","base","1.6.2"
"simpleLoess","closure","function","TRUE","FALSE","(y, x, weights, span = 0.75, degree = 2, parametric = FALSE,     drop.square = FALSE, normalize = TRUE, statistics = ""approximate"",     surface = ""interpolate"", cell = 0.2, iterations = 1, trace.hat = ""exact"") ","modreg","base","1.6.2"
"smooth.spline","closure","function","TRUE","FALSE","(x, y = NULL, w = NULL, df, spar = NULL, cv = FALSE,     all.knots = FALSE, nknots = NULL, df.offset = 0, penalty = 1,     control.spar = list()) ","modreg","base","1.6.2"
"summary.loess","closure","function","TRUE","FALSE","(object, ...) ","modreg","base","1.6.2"
"summary.ppr","closure","function","TRUE","FALSE","(object, ...) ","modreg","base","1.6.2"
"supsmu","closure","function","TRUE","FALSE","(x, y, wt = rep(1, n), span = ""cv"", periodic = FALSE,     bass = 0) ","modreg","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","mva","base","1.6.2"
".memberDend","closure","function","TRUE","FALSE","(x) ","mva","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","mva","base","1.6.2"
"[[.dendrogram","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","mva","base","1.6.2"
"as.dendrogram","closure","function","TRUE","FALSE","(object, ...) ","mva","base","1.6.2"
"as.dendrogram.hclust","closure","function","TRUE","FALSE","(object, ...) ","mva","base","1.6.2"
"as.dist","closure","function","TRUE","FALSE","(m, diag = FALSE, upper = FALSE) ","mva","base","1.6.2"
"as.hclust","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"as.hclust.default","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"as.hclust.twins","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"as.matrix.dist","closure","function","TRUE","FALSE","(x) ","mva","base","1.6.2"
"biplot","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"biplot.default","closure","function","TRUE","FALSE","(x, y, var.axes = TRUE, col, cex = rep(par(""cex""), 2),     xlabs = NULL, ylabs = NULL, expand = 1, xlim = NULL, ylim = NULL,     arrow.len = 0.1, ...) ","mva","base","1.6.2"
"biplot.princomp","closure","function","TRUE","FALSE","(x, choices = 1:2, scale = 1, pc.biplot = FALSE, ...) ","mva","base","1.6.2"
"cancor","closure","function","TRUE","FALSE","(x, y, xcenter = TRUE, ycenter = TRUE) ","mva","base","1.6.2"
"cmdscale","closure","function","TRUE","FALSE","(d, k = 2, eig = FALSE, add = FALSE, x.ret = FALSE) ","mva","base","1.6.2"
"cophenetic","closure","function","TRUE","FALSE","(x) ","mva","base","1.6.2"
"cut.dendrogram","closure","function","TRUE","FALSE","(x, h, ...) ","mva","base","1.6.2"
"cutree","closure","function","TRUE","FALSE","(tree, k = NULL, h = NULL) ","mva","base","1.6.2"
"dist","closure","function","TRUE","FALSE","(x, method = ""euclidean"", diag = FALSE, upper = FALSE) ","mva","base","1.6.2"
"factanal","closure","function","TRUE","FALSE","(x, factors, data = NULL, covmat = NULL, n.obs = NA,     subset, na.action, start = NULL, scores = c(""none"", ""regression"",         ""Bartlett""), rotation = ""varimax"", control = NULL, ...) ","mva","base","1.6.2"
"factanal.fit.mle","closure","function","TRUE","FALSE","(cmat, factors, start = NULL, lower = 0.005, control = NULL,     ...) ","mva","base","1.6.2"
"format.dist","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"hclust","closure","function","TRUE","FALSE","(d, method = ""complete"", members = NULL) ","mva","base","1.6.2"
"identify.hclust","closure","function","TRUE","FALSE","(x, FUN = NULL, N = 20, MAXCLUSTER = 20, DEV.FUN = NULL,     ...) ","mva","base","1.6.2"
"isLeaf","closure","function","TRUE","FALSE","(object) ","mva","base","1.6.2"
"kmeans","closure","function","TRUE","FALSE","(x, centers, iter.max = 10) ","mva","base","1.6.2"
"loadings","closure","function","TRUE","FALSE","(x) ","mva","base","1.6.2"
"names.dist","closure","function","TRUE","FALSE","(x) ","mva","base","1.6.2"
"names<-.dist","closure","function","TRUE","FALSE","(x, value) ","mva","base","1.6.2"
"plclust","closure","function","TRUE","FALSE","(tree, hang = 0.1, unit = FALSE, level = FALSE, hmin = 0,     square = TRUE, labels = NULL, plot. = TRUE, axes = TRUE,     frame.plot = FALSE, ann = TRUE, main = """", sub = NULL, xlab = NULL,     ylab = ""Height"") ","mva","base","1.6.2"
"plot.dendrogram","closure","function","TRUE","FALSE","(x, type = c(""rectangle"", ""triangle""), center = FALSE,     edge.root = !is.null(attr(x, ""edgetext"")), nodePar = NULL,     edgePar = list(), xlab = """", ylab = """", horiz = FALSE, ...) ","mva","base","1.6.2"
"plot.hclust","closure","function","TRUE","FALSE","(x, labels = NULL, hang = 0.1, axes = TRUE, frame.plot = FALSE,     ann = TRUE, main = ""Cluster Dendrogram"", sub = NULL, xlab = NULL,     ylab = ""Height"", ...) ","mva","base","1.6.2"
"plot.prcomp","closure","function","TRUE","FALSE","(x, main = deparse(substitute(x)), ...) ","mva","base","1.6.2"
"plot.princomp","closure","function","TRUE","FALSE","(x, main = deparse(substitute(x)), ...) ","mva","base","1.6.2"
"plotNode","closure","function","TRUE","FALSE","(x1, x2, subtree, type, center, nodePar, edgePar, horiz = FALSE) ","mva","base","1.6.2"
"plotNodeLimit","closure","function","TRUE","FALSE","(x1, x2, subtree, center) ","mva","base","1.6.2"
"prcomp","closure","function","TRUE","FALSE","(x, retx = TRUE, center = TRUE, scale. = FALSE, tol = NULL) ","mva","base","1.6.2"
"predict.princomp","closure","function","TRUE","FALSE","(object, newdata, ...) ","mva","base","1.6.2"
"princomp","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"princomp.default","closure","function","TRUE","FALSE","(x, cor = FALSE, scores = TRUE, covmat = NULL, subset = rep(TRUE,     nrow(as.matrix(x))), ...) ","mva","base","1.6.2"
"princomp.formula","closure","function","TRUE","FALSE","(x, data = NULL, subset, na.action, ...) ","mva","base","1.6.2"
"print.dendrogram","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","mva","base","1.6.2"
"print.dist","closure","function","TRUE","FALSE","(x, diag = NULL, upper = NULL, ...) ","mva","base","1.6.2"
"print.factanal","closure","function","TRUE","FALSE","(x, digits = 3, ...) ","mva","base","1.6.2"
"print.hclust","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"print.loadings","closure","function","TRUE","FALSE","(x, digits = 3, cutoff = 0.1, sort = FALSE, ...) ","mva","base","1.6.2"
"print.prcomp","closure","function","TRUE","FALSE","(x, print.x = FALSE, ...) ","mva","base","1.6.2"
"print.princomp","closure","function","TRUE","FALSE","(x, ...) ","mva","base","1.6.2"
"print.summary.prcomp","closure","function","TRUE","FALSE","(x, digits = min(3, getOption(""digits"") - 3), ...) ","mva","base","1.6.2"
"print.summary.princomp","closure","function","TRUE","FALSE","(x, digits = 3, loadings = x$print.loadings, cutoff = x$cutoff,     ...) ","mva","base","1.6.2"
"promax","closure","function","TRUE","FALSE","(x, m = 4) ","mva","base","1.6.2"
"rect.hclust","closure","function","TRUE","FALSE","(tree, k = NULL, which = NULL, x = NULL, h = NULL, border = 2,     cluster = NULL) ","mva","base","1.6.2"
"screeplot","closure","function","TRUE","FALSE","(x, npcs = min(10, length(x$sdev)), type = c(""barplot"",     ""lines""), main = deparse(substitute(x)), ...) ","mva","base","1.6.2"
"str.dendrogram","closure","function","TRUE","FALSE","(object, max.level = 0, vec.len = 4, digits.d = 3, nchar.max = 128,     give.attr = TRUE, give.length = TRUE, wid = getOption(""width""),     nest.lev = 0, indent.str = """", ...) ","mva","base","1.6.2"
"summary.prcomp","closure","function","TRUE","FALSE","(object, ...) ","mva","base","1.6.2"
"summary.princomp","closure","function","TRUE","FALSE","(object, loadings = FALSE, cutoff = 0.1, ...) ","mva","base","1.6.2"
"varimax","closure","function","TRUE","FALSE","(x, normalize = TRUE, eps = 1e-05) ","mva","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","nlme","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","nlme","recommended","1.6.2"
"ACF","closure","function","TRUE","FALSE","(object, maxLag, ...) ","nlme","recommended","1.6.2"
"ACF.gls","closure","function","TRUE","FALSE","(object, maxLag, resType = c(""pearson"", ""response"",     ""normalized""), form = ~1, na.action = na.fail, ...) ","nlme","recommended","1.6.2"
"ACF.lme","closure","function","TRUE","FALSE","(object, maxLag, resType = c(""pearson"", ""response"",     ""normalized""), ...) ","nlme","recommended","1.6.2"
"AIC.gls","closure","function","TRUE","FALSE","(object, ..., k = 2) ","nlme","recommended","1.6.2"
"AIC.lmList","closure","function","TRUE","FALSE","(object, ..., k = 2) ","nlme","recommended","1.6.2"
"AIC.lme","closure","function","TRUE","FALSE","(object, ..., k = 2) ","nlme","recommended","1.6.2"
"BIC","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"BIC.gls","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"BIC.lm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"BIC.lmList","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"BIC.lme","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"BIC.logLik","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"BIC.nls","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.corSpatial","closure","function","TRUE","FALSE","(object, groups, ...) ","nlme","recommended","1.6.2"
"Dim.corStruct","closure","function","TRUE","FALSE","(object, groups, ...) ","nlme","recommended","1.6.2"
"Dim.default","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.pdCompSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.pdDiag","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.pdIdent","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.pdMat","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.pdNatural","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Dim.pdSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Initialize","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corAR1","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corARMA","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corCAR1","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corCompSymm","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corIdent","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corLin","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corNatural","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corSpatial","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corSpher","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corStruct","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.corSymm","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.glsStruct","closure","function","TRUE","FALSE","(object, data, control = list(singular.ok = FALSE, qrTol = .Machine$single.eps),     ...) ","nlme","recommended","1.6.2"
"Initialize.gnlsStruct","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.lmeStruct","closure","function","TRUE","FALSE","(object, data, groups, conLin = attr(object, ""conLin""),     control = list(niterEM = 20, gradHess = TRUE), ...) ","nlme","recommended","1.6.2"
"Initialize.reStruct","closure","function","TRUE","FALSE","(object, data, conLin, control = list(niterEM = 20),     ...) ","nlme","recommended","1.6.2"
"Initialize.varComb","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.varConstPower","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.varExp","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.varFixed","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.varFunc","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.varIdent","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"Initialize.varPower","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"LDEsysMat","closure","function","TRUE","FALSE","(pars, incidence) ","nlme","recommended","1.6.2"
"MEEM","closure","function","TRUE","FALSE","(object, conLin, niter = 0) ","nlme","recommended","1.6.2"
"MEdecomp","closure","function","TRUE","FALSE","(conLin) ","nlme","recommended","1.6.2"
"MEdims","closure","function","TRUE","FALSE","(groups, ncols) ","nlme","recommended","1.6.2"
"MEestimate","closure","function","TRUE","FALSE","(object, groups, conLin = attr(object, ""conLin"")) ","nlme","recommended","1.6.2"
"Names","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Names.formula","closure","function","TRUE","FALSE","(object, data = list(), exclude = c(""pi"", "".""), ...) ","nlme","recommended","1.6.2"
"Names.listForm","closure","function","TRUE","FALSE","(object, data = list(), exclude = c(""pi"", "".""), ...) ","nlme","recommended","1.6.2"
"Names.pdBlocked","closure","function","TRUE","FALSE","(object, asList = FALSE, ...) ","nlme","recommended","1.6.2"
"Names.pdMat","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Names.reStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"Names<-","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","1.6.2"
"Names<-.pdBlocked","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","1.6.2"
"Names<-.pdMat","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","1.6.2"
"Names<-.reStruct","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","1.6.2"
"VarCorr","closure","function","TRUE","FALSE","(x, sigma = 1, rdig = 3) ","nlme","recommended","1.6.2"
"VarCorr.lme","closure","function","TRUE","FALSE","(x, sigma = 1, rdig = 3) ","nlme","recommended","1.6.2"
"VarCorr.pdBlocked","closure","function","TRUE","FALSE","(x, sigma = 1, rdig = 3) ","nlme","recommended","1.6.2"
"VarCorr.pdMat","closure","function","TRUE","FALSE","(x, sigma = 1, rdig = 3) ","nlme","recommended","1.6.2"
"Variogram","closure","function","TRUE","FALSE","(object, distance, ...) ","nlme","recommended","1.6.2"
"Variogram.corExp","closure","function","TRUE","FALSE","(object, distance = NULL, sig2 = 1, length.out = 50,     ...) ","nlme","recommended","1.6.2"
"Variogram.corGaus","closure","function","TRUE","FALSE","(object, distance = NULL, sig2 = 1, length.out = 50,     ...) ","nlme","recommended","1.6.2"
"Variogram.corLin","closure","function","TRUE","FALSE","(object, distance = NULL, sig2 = 1, length.out = 50,     ...) ","nlme","recommended","1.6.2"
"Variogram.corRatio","closure","function","TRUE","FALSE","(object, distance = NULL, sig2 = 1, length.out = 50,     ...) ","nlme","recommended","1.6.2"
"Variogram.corSpatial","closure","function","TRUE","FALSE","(object, distance = NULL, sig2 = 1, length.out = 50,     FUN, ...) ","nlme","recommended","1.6.2"
"Variogram.corSpher","closure","function","TRUE","FALSE","(object, distance = NULL, sig2 = 1, length.out = 50,     ...) ","nlme","recommended","1.6.2"
"Variogram.default","closure","function","TRUE","FALSE","(object, distance, ...) ","nlme","recommended","1.6.2"
"Variogram.gls","closure","function","TRUE","FALSE","(object, distance, form = ~1, resType = c(""pearson"",     ""response"", ""normalized""), data, na.action = na.fail, maxDist,     length.out = 50, collapse = c(""quantiles"", ""fixed"", ""none""),     nint = 20, breaks, robust = FALSE, metric = c(""euclidean"",         ""maximum"", ""manhattan""), ...) ","nlme","recommended","1.6.2"
"Variogram.lme","closure","function","TRUE","FALSE","(object, distance, form = ~1, resType = c(""pearson"",     ""response"", ""normalized""), data, na.action = na.fail, maxDist,     length.out = 50, collapse = c(""quantiles"", ""fixed"", ""none""),     nint = 20, breaks, robust = FALSE, metric = c(""euclidean"",         ""maximum"", ""manhattan""), ...) ","nlme","recommended","1.6.2"
"[.groupedData","closure","function","TRUE","FALSE","(x, i, j, drop = if (missing(i)) TRUE else length(cols) ==     1) ","nlme","recommended","1.6.2"
"[.pdBlocked","closure","function","TRUE","FALSE","(x, i, j, drop = TRUE) ","nlme","recommended","1.6.2"
"[.pdMat","closure","function","TRUE","FALSE","(x, i, j, drop = TRUE) ","nlme","recommended","1.6.2"
"[.reStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"[<-.pdMat","closure","function","TRUE","FALSE","(x, i, j, value) ","nlme","recommended","1.6.2"
"allCoef","closure","function","TRUE","FALSE","(..., extract = coef) ","nlme","recommended","1.6.2"
"allVarsRec","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"anova.gls","closure","function","TRUE","FALSE","(object, ..., test = TRUE, type = c(""sequential"", ""marginal""),     adjustSigma = TRUE, Terms, L, verbose = FALSE) ","nlme","recommended","1.6.2"
"anova.lme","closure","function","TRUE","FALSE","(object, ..., test = TRUE, type = c(""sequential"", ""marginal""),     adjustSigma = TRUE, Terms, L, verbose = FALSE) ","nlme","recommended","1.6.2"
"as.data.frame.groupedData","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","nlme","recommended","1.6.2"
"as.matrix.corStruct","closure","function","TRUE","FALSE","(x) ","nlme","recommended","1.6.2"
"as.matrix.pdMat","closure","function","TRUE","FALSE","(x) ","nlme","recommended","1.6.2"
"as.matrix.reStruct","closure","function","TRUE","FALSE","(x) ","nlme","recommended","1.6.2"
"asOneFormula","closure","function","TRUE","FALSE","(..., omit = c(""."", ""pi"")) ","nlme","recommended","1.6.2"
"asTable","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"asTable.groupedData","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"augPred","closure","function","TRUE","FALSE","(object, primary = NULL, minimum = min(primary), maximum = max(primary),     length.out = 51, ...) ","nlme","recommended","1.6.2"
"augPred.gls","closure","function","TRUE","FALSE","(object, primary = NULL, minimum = min(primary), maximum = max(primary),     length.out = 51, ...) ","nlme","recommended","1.6.2"
"augPred.lmList","closure","function","TRUE","FALSE","(object, primary = NULL, minimum = min(primary), maximum = max(primary),     length.out = 51, ...) ","nlme","recommended","1.6.2"
"augPred.lme","closure","function","TRUE","FALSE","(object, primary = NULL, minimum = min(primary), maximum = max(primary),     length.out = 51, level = Q, ...) ","nlme","recommended","1.6.2"
"balancedGrouped","closure","function","TRUE","FALSE","(form, data, labels = NULL, units = NULL) ","nlme","recommended","1.6.2"
"coef.corAR1","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corARMA","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corCAR1","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corCompSymm","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corIdent","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corLin","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corNatural","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corSpatial","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corSpher","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corStruct","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.corSymm","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.gls","closure","function","TRUE","FALSE","(object, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef.gnls","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"coef.lmList","closure","function","TRUE","FALSE","(object, augFrame = FALSE, data = NULL, which = NULL,     FUN = mean, omitGroupingFactor = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.lme","closure","function","TRUE","FALSE","(object, augFrame = FALSE, level = Q, data, which = 1:ncol(data),     FUN = mean, omitGroupingFactor = TRUE, subset = NULL, ...) ","nlme","recommended","1.6.2"
"coef.modelStruct","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdBlocked","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdCompSymm","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdDiag","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdIdent","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdMat","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdNatural","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.pdSymm","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.reStruct","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","nlme","recommended","1.6.2"
"coef.summary.nlsList","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"coef.varComb","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef.varConstPower","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef.varExp","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef.varFixed","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"coef.varFunc","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef.varIdent","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef.varPower","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, allCoef = FALSE, ...) ","nlme","recommended","1.6.2"
"coef<-","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corAR1","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corARMA","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corCAR1","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corCompSymm","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corIdent","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corNatural","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corSpatial","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corStruct","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.corSymm","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.modelStruct","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.pdBlocked","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.pdMat","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.reStruct","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.varComb","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.varConstPower","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.varExp","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.varFixed","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.varIdent","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coef<-.varPower","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"coefficients<-","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"collapse","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"collapse.groupedData","closure","function","TRUE","FALSE","(object, collapseLevel = Q, displayLevel = collapseLevel,     outer = NULL, inner = NULL, preserve = NULL, FUN = mean,     subset = NULL, ...) ","nlme","recommended","1.6.2"
"compareFits","closure","function","TRUE","FALSE","(object1, object2, which = 1:ncol(object1)) ","nlme","recommended","1.6.2"
"comparePred","closure","function","TRUE","FALSE","(object1, object2, primary = NULL, minimum = min(primary),     maximum = max(primary), length.out = 51, level = NULL, ...) ","nlme","recommended","1.6.2"
"comparePred.gls","closure","function","TRUE","FALSE","(object1, object2, primary = NULL, minimum = min(primary),     maximum = max(primary), length.out = 51, level = NULL, ...) ","nlme","recommended","1.6.2"
"comparePred.lmList","closure","function","TRUE","FALSE","(object1, object2, primary = NULL, minimum = min(primary),     maximum = max(primary), length.out = 51, level = NULL, ...) ","nlme","recommended","1.6.2"
"comparePred.lme","closure","function","TRUE","FALSE","(object1, object2, primary = NULL, minimum = min(primary),     maximum = max(primary), length.out = 51, level = NULL, ...) ","nlme","recommended","1.6.2"
"contr.SAS","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","nlme","recommended","1.6.2"
"corAR1","closure","function","TRUE","FALSE","(value = 0, form = ~1, fixed = FALSE) ","nlme","recommended","1.6.2"
"corARMA","closure","function","TRUE","FALSE","(value = double(p + q), form = ~1, p = 0, q = 0, fixed = FALSE) ","nlme","recommended","1.6.2"
"corCAR1","closure","function","TRUE","FALSE","(value = 0.2, form = ~1, fixed = FALSE) ","nlme","recommended","1.6.2"
"corCompSymm","closure","function","TRUE","FALSE","(value = 0, form = ~1, fixed = FALSE) ","nlme","recommended","1.6.2"
"corExp","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","1.6.2"
"corFactor","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.compSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corAR1","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corARMA","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corCAR1","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corNatural","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corSpatial","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corFactor.corSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corGaus","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","1.6.2"
"corIdent","closure","function","TRUE","FALSE","(form = NULL) ","nlme","recommended","1.6.2"
"corLin","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","1.6.2"
"corMatrix","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corMatrix.corAR1","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corARMA","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corCAR1","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corCompSymm","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corIdent","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr, ...) ","nlme","recommended","1.6.2"
"corMatrix.corNatural","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corSpatial","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corStruct","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.corSymm","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), corr = TRUE,     ...) ","nlme","recommended","1.6.2"
"corMatrix.pdBlocked","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corMatrix.pdCompSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corMatrix.pdDiag","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corMatrix.pdIdent","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corMatrix.pdMat","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corMatrix.reStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"corNatural","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, fixed = FALSE) ","nlme","recommended","1.6.2"
"corRatio","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","1.6.2"
"corSpatial","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, type = c(""spherical"",     ""exponential"", ""gaussian"", ""linear"", ""rational""), metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","1.6.2"
"corSpher","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","1.6.2"
"corSymm","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, fixed = FALSE) ","nlme","recommended","1.6.2"
"covariate<-","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"covariate<-.varFunc","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"createConLin","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random = pdSymm(eval(as.call(fixed[-2]))),     ...) ","nlme","recommended","1.6.2"
"fdHess","closure","function","TRUE","FALSE","(pars, fun, ..., .relStep = (.Machine$double.eps)^(1/3),     minAbsPar = 0) ","nlme","recommended","1.6.2"
"fitted.gls","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"fitted.glsStruct","closure","function","TRUE","FALSE","(object, glsFit = attr(object, ""glsFit""), ...) ","nlme","recommended","1.6.2"
"fitted.gnls","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"fitted.gnlsStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"fitted.lmList","closure","function","TRUE","FALSE","(object, subset = NULL, asList = FALSE, ...) ","nlme","recommended","1.6.2"
"fitted.lme","closure","function","TRUE","FALSE","(object, level = Q, asList = FALSE, ...) ","nlme","recommended","1.6.2"
"fitted.lmeStruct","closure","function","TRUE","FALSE","(object, level = Q, conLin = attr(object, ""conLin""),     lmeFit = attr(object, ""lmeFit""), ...) ","nlme","recommended","1.6.2"
"fitted.nlmeStruct","closure","function","TRUE","FALSE","(object, level = Q, conLin = attr(object, ""conLin""),     ...) ","nlme","recommended","1.6.2"
"fixed.effects","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"fixef","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"fixef.lmList","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"fixef.lme","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"formula.corStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.gls","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.gnls","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.groupedData","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.lmList","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.lme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.modelStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.nlme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.nlsList","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.pdBlocked","closure","function","TRUE","FALSE","(x, asList = TRUE, ...) ","nlme","recommended","1.6.2"
"formula.pdMat","closure","function","TRUE","FALSE","(x, asList, ...) ","nlme","recommended","1.6.2"
"formula.reStruct","closure","function","TRUE","FALSE","(x, asList = FALSE, ...) ","nlme","recommended","1.6.2"
"formula.varComb","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"formula.varFunc","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"gapply","closure","function","TRUE","FALSE","(object, which, FUN, form = formula(object), level,     groups = getGroups(object, form, level), ...) ","nlme","recommended","1.6.2"
"getCovariate","closure","function","TRUE","FALSE","(object, form = formula(object), data) ","nlme","recommended","1.6.2"
"getCovariate.corSpatial","closure","function","TRUE","FALSE","(object, form = formula(object), data) ","nlme","recommended","1.6.2"
"getCovariate.corStruct","closure","function","TRUE","FALSE","(object, form = formula(object), data) ","nlme","recommended","1.6.2"
"getCovariate.data.frame","closure","function","TRUE","FALSE","(object, form = formula(object), data) ","nlme","recommended","1.6.2"
"getCovariate.varFunc","closure","function","TRUE","FALSE","(object, form, data) ","nlme","recommended","1.6.2"
"getCovariateFormula","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData.gls","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData.gnls","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData.lmList","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData.lme","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData.nlme","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getData.nls","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getFixDF","closure","function","TRUE","FALSE","(X, grps, ngrps, assign = attr(X, ""assign""), terms) ","nlme","recommended","1.6.2"
"getGroups","closure","function","TRUE","FALSE","(object, form = formula(object), level, data, sep = ""/"") ","nlme","recommended","1.6.2"
"getGroups.corStruct","closure","function","TRUE","FALSE","(object, form = formula(object), level, data, sep) ","nlme","recommended","1.6.2"
"getGroups.data.frame","closure","function","TRUE","FALSE","(object, form = formula(object), level, data, sep = ""/"") ","nlme","recommended","1.6.2"
"getGroups.gls","closure","function","TRUE","FALSE","(object, form, level, data, sep) ","nlme","recommended","1.6.2"
"getGroups.lmList","closure","function","TRUE","FALSE","(object, form, level, data, sep) ","nlme","recommended","1.6.2"
"getGroups.lme","closure","function","TRUE","FALSE","(object, form, level = Q, data, sep) ","nlme","recommended","1.6.2"
"getGroups.varFunc","closure","function","TRUE","FALSE","(object, form, level, data, sep) ","nlme","recommended","1.6.2"
"getGroupsFormula","closure","function","TRUE","FALSE","(object, asList = FALSE, sep = ""/"") ","nlme","recommended","1.6.2"
"getGroupsFormula.default","closure","function","TRUE","FALSE","(object, asList = FALSE, sep = ""/"") ","nlme","recommended","1.6.2"
"getGroupsFormula.gls","closure","function","TRUE","FALSE","(object, asList = FALSE, sep) ","nlme","recommended","1.6.2"
"getGroupsFormula.lmList","closure","function","TRUE","FALSE","(object, asList = FALSE, sep) ","nlme","recommended","1.6.2"
"getGroupsFormula.lme","closure","function","TRUE","FALSE","(object, asList = FALSE, sep) ","nlme","recommended","1.6.2"
"getGroupsFormula.reStruct","closure","function","TRUE","FALSE","(object, asList = FALSE, sep) ","nlme","recommended","1.6.2"
"getParsGnls","closure","function","TRUE","FALSE","(plist, pmap, beta, N) ","nlme","recommended","1.6.2"
"getParsNlme","closure","function","TRUE","FALSE","(plist, fmap, rmapRel, bmap, groups, beta, bvec, b,     level, N) ","nlme","recommended","1.6.2"
"getResponse","closure","function","TRUE","FALSE","(object, form = formula(object)) ","nlme","recommended","1.6.2"
"getResponse.data.frame","closure","function","TRUE","FALSE","(object, form = formula(object)) ","nlme","recommended","1.6.2"
"getResponse.gls","closure","function","TRUE","FALSE","(object, form) ","nlme","recommended","1.6.2"
"getResponse.lmList","closure","function","TRUE","FALSE","(object, form) ","nlme","recommended","1.6.2"
"getResponse.lme","closure","function","TRUE","FALSE","(object, form) ","nlme","recommended","1.6.2"
"getResponseFormula","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"getVarCov","closure","function","TRUE","FALSE","(obj, ...) ","nlme","recommended","1.6.2"
"getVarCov.gls","closure","function","TRUE","FALSE","(obj, individual = 1, ...) ","nlme","recommended","1.6.2"
"getVarCov.lme","closure","function","TRUE","FALSE","(obj, individuals, type = c(""random.effects"", ""conditional"",     ""marginal""), ...) ","nlme","recommended","1.6.2"
"gls","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list(), verbose = FALSE) ","nlme","recommended","1.6.2"
"glsApVar","closure","function","TRUE","FALSE","(glsSt, sigma, conLin = attr(glsSt, ""conLin""), .relStep = (.Machine$double.eps)^(1/3),     minAbsPar = 0, natural = TRUE) ","nlme","recommended","1.6.2"
"glsControl","closure","function","TRUE","FALSE","(maxIter = 50, msMaxIter = 50, tolerance = 1e-06, msTol = 1e-07,     msScale = lmeScale, msVerbose = FALSE, singular.ok = FALSE,     qrTol = .Machine$single.eps, returnObject = FALSE, apVar = TRUE,     .relStep = (.Machine$double.eps)^(1/3), nlmStepMax = 100,     minAbsParApVar = 0.05, natural = TRUE) ","nlme","recommended","1.6.2"
"glsEstimate","closure","function","TRUE","FALSE","(object, conLin = attr(object, ""conLin""), control = list(singular.ok = FALSE,     qrTol = .Machine$single.eps)) ","nlme","recommended","1.6.2"
"glsStruct","closure","function","TRUE","FALSE","(corStruct = NULL, varStruct = NULL) ","nlme","recommended","1.6.2"
"gnls","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), params, start,     correlation = NULL, weights = NULL, subset, na.action = na.fail,     naPattern, control = list(), verbose = FALSE) ","nlme","recommended","1.6.2"
"gnlsApVar","closure","function","TRUE","FALSE","(gnlsSt, lsigma, conLin = attr(gnlsSt, ""conLin""), .relStep = (.Machine$double.eps)^(1/3),     minAbsPar = 0, natural = TRUE) ","nlme","recommended","1.6.2"
"gnlsControl","closure","function","TRUE","FALSE","(maxIter = 50, nlsMaxIter = 7, msMaxIter = 50, minScale = 0.001,     tolerance = 1e-06, nlsTol = 0.001, msTol = 1e-07, msScale = lmeScale,     returnObject = FALSE, msVerbose = FALSE, apVar = TRUE, .relStep = (.Machine$double.eps)^(1/3),     nlmStepMax = 100, minAbsParApVar = 0.05) ","nlme","recommended","1.6.2"
"gnlsStruct","closure","function","TRUE","FALSE","(corStruct = NULL, varStruct = NULL) ","nlme","recommended","1.6.2"
"groupedData","closure","function","TRUE","FALSE","(formula, data = sys.parent(1), order.groups = TRUE,     FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL,     labels = NULL, units = NULL) ","nlme","recommended","1.6.2"
"gsummary","closure","function","TRUE","FALSE","(object, FUN = function(x) mean(x, na.rm = TRUE), omitGroupingFactor = FALSE,     form = formula(object), level, groups = getGroups(object,         form, level), invariantsOnly = FALSE, ...) ","nlme","recommended","1.6.2"
"intervals","closure","function","TRUE","FALSE","(object, level = 0.95, ...) ","nlme","recommended","1.6.2"
"intervals.gls","closure","function","TRUE","FALSE","(object, level = 0.95, which = c(""all"", ""var-cov"", ""coef""),     ...) ","nlme","recommended","1.6.2"
"intervals.lmList","closure","function","TRUE","FALSE","(object, level = 0.95, pool = attr(object, ""pool""),     ...) ","nlme","recommended","1.6.2"
"intervals.lme","closure","function","TRUE","FALSE","(object, level = 0.95, which = c(""all"", ""var-cov"", ""fixed""),     ...) ","nlme","recommended","1.6.2"
"isBalanced","closure","function","TRUE","FALSE","(object, countOnly = FALSE, level) ","nlme","recommended","1.6.2"
"isBalanced.groupedData","closure","function","TRUE","FALSE","(object, countOnly = FALSE, level) ","nlme","recommended","1.6.2"
"isInitialized","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"isInitialized.pdBlocked","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"isInitialized.pdMat","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"isInitialized.reStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"lmList","closure","function","TRUE","FALSE","(object, data, level, subset, na.action = na.fail, pool = TRUE) ","nlme","recommended","1.6.2"
"lmList.formula","closure","function","TRUE","FALSE","(object, data, level, subset, na.action = na.fail, pool = TRUE) ","nlme","recommended","1.6.2"
"lmList.groupedData","closure","function","TRUE","FALSE","(object, data, level, subset, na.action = na.fail, pool = TRUE) ","nlme","recommended","1.6.2"
"lme","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random, correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list()) ","nlme","recommended","1.6.2"
"lme.formula","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random = pdSymm(eval(as.call(fixed[-2]))),     correlation = NULL, weights = NULL, subset, method = c(""REML"",         ""ML""), na.action = na.fail, control = list()) ","nlme","recommended","1.6.2"
"lme.groupedData","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random, correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list()) ","nlme","recommended","1.6.2"
"lme.lmList","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random, correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list()) ","nlme","recommended","1.6.2"
"lmeApVar","closure","function","TRUE","FALSE","(lmeSt, sigma, conLin = attr(lmeSt, ""conLin""), .relStep = (.Machine$double.eps)^(1/3),     minAbsPar = 0, natural = TRUE) ","nlme","recommended","1.6.2"
"lmeControl","closure","function","TRUE","FALSE","(maxIter = 50, msMaxIter = 50, tolerance = 1e-06, niterEM = 25,     msTol = 1e-07, msScale = lmeScale, msVerbose = FALSE, returnObject = FALSE,     gradHess = TRUE, apVar = TRUE, .relStep = (.Machine$double.eps)^(1/3),     minAbsParApVar = 0.05, nlmStepMax = 100, natural = TRUE) ","nlme","recommended","1.6.2"
"lmeScale","closure","function","TRUE","FALSE","(start) ","nlme","recommended","1.6.2"
"lmeStruct","closure","function","TRUE","FALSE","(reStruct, corStruct = NULL, varStruct = NULL) ","nlme","recommended","1.6.2"
"logDet","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.corIdent","closure","function","TRUE","FALSE","(object, covariate, ...) ","nlme","recommended","1.6.2"
"logDet.corStruct","closure","function","TRUE","FALSE","(object, covariate = getCovariate(object), ...) ","nlme","recommended","1.6.2"
"logDet.pdBlocked","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.pdCompSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.pdDiag","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.pdIdent","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.pdMat","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.pdNatural","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.pdSymm","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logDet.reStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logLik.corStruct","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"logLik.gls","closure","function","TRUE","FALSE","(object, REML, ...) ","nlme","recommended","1.6.2"
"logLik.glsStruct","closure","function","TRUE","FALSE","(object, Pars, conLin = attr(object, ""conLin""), ...) ","nlme","recommended","1.6.2"
"logLik.gnls","closure","function","TRUE","FALSE","(object, REML = FALSE, ...) ","nlme","recommended","1.6.2"
"logLik.gnlsStruct","closure","function","TRUE","FALSE","(object, Pars, conLin = attr(object, ""conLin""), ...) ","nlme","recommended","1.6.2"
"logLik.lmList","closure","function","TRUE","FALSE","(object, REML = FALSE, pool = attr(object, ""pool""),     ...) ","nlme","recommended","1.6.2"
"logLik.lme","closure","function","TRUE","FALSE","(object, REML, ...) ","nlme","recommended","1.6.2"
"logLik.lmeStruct","closure","function","TRUE","FALSE","(object, Pars, conLin = attr(object, ""conLin""), ...) ","nlme","recommended","1.6.2"
"logLik.lmeStructInt","closure","function","TRUE","FALSE","(object, Pars, conLin = attr(object, ""conLin""), ...) ","nlme","recommended","1.6.2"
"logLik.reStruct","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"logLik.varComb","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"logLik.varFunc","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"matrix<-","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"matrix<-.pdBlocked","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"matrix<-.pdMat","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"matrix<-.reStruct","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","1.6.2"
"model.matrix.reStruct","closure","function","TRUE","FALSE","(object, data, contrast = NULL, ...) ","nlme","recommended","1.6.2"
"needUpdate","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"needUpdate.corStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"needUpdate.default","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"needUpdate.modelStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"needUpdate.reStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"needUpdate.varComb","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"needUpdate.varIdent","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"nfGroupedData","closure","function","TRUE","FALSE","(formula, data = sys.parent(1), order.groups = TRUE,     FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL,     labels = NULL, units = NULL) ","nlme","recommended","1.6.2"
"nlme","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), fixed, random = fixed,     groups, start, correlation = NULL, weights = NULL, subset,     method = c(""ML"", ""REML""), na.action = na.fail, naPattern,     control = list(), verbose = FALSE) ","nlme","recommended","1.6.2"
"nlme.formula","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), fixed, random,     groups, start, correlation = NULL, weights = NULL, subset,     method = c(""ML"", ""REML""), na.action = na.fail, naPattern,     control = list(), verbose = FALSE) ","nlme","recommended","1.6.2"
"nlme.nlsList","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), fixed, random = fixed,     groups, start, correlation = NULL, weights = NULL, subset,     method = c(""ML"", ""REML""), na.action = na.fail, naPattern,     control = list(), verbose = FALSE) ","nlme","recommended","1.6.2"
"nlmeControl","closure","function","TRUE","FALSE","(maxIter = 50, pnlsMaxIter = 7, msMaxIter = 50, minScale = 0.001,     tolerance = 1e-05, niterEM = 25, pnlsTol = 0.001, msTol = 1e-06,     msScale = lmeScale, returnObject = FALSE, msVerbose = FALSE,     gradHess = TRUE, apVar = TRUE, .relStep = (.Machine$double.eps)^(1/3),     nlmStepMax = 100, minAbsParApVar = 0.05, natural = TRUE) ","nlme","recommended","1.6.2"
"nlmeStruct","closure","function","TRUE","FALSE","(reStruct, corStruct = NULL, varStruct = NULL) ","nlme","recommended","1.6.2"
"nlsList","closure","function","TRUE","FALSE","(model, data, start, control, level, subset, na.action = na.fail,     pool = TRUE) ","nlme","recommended","1.6.2"
"nlsList.formula","closure","function","TRUE","FALSE","(model, data, start = NULL, control, level, subset,     na.action = na.fail, pool = TRUE) ","nlme","recommended","1.6.2"
"nlsList.selfStart","closure","function","TRUE","FALSE","(model, data, start, control, level, subset, na.action = na.fail,     pool = TRUE) ","nlme","recommended","1.6.2"
"nmGroupedData","closure","function","TRUE","FALSE","(formula, data = sys.parent(1), order.groups = TRUE,     FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL,     labels = NULL, units = NULL) ","nlme","recommended","1.6.2"
"nonlinModel","closure","function","TRUE","FALSE","(modelExpression, env, paramNames = get("".parameters"",     envir = env)) ","nlme","recommended","1.6.2"
"pairs.compareFits","closure","function","TRUE","FALSE","(x, subset, key = TRUE, ...) ","nlme","recommended","1.6.2"
"pairs.lmList","closure","function","TRUE","FALSE","(x, form = ~coef(.), label, id = NULL, idLabels = NULL,     grid = FALSE, ...) ","nlme","recommended","1.6.2"
"pairs.lme","closure","function","TRUE","FALSE","(x, form = ~coef(.), label, id = NULL, idLabels = NULL,     grid = FALSE, ...) ","nlme","recommended","1.6.2"
"pdBlocked","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent()),     pdClass = ""pdSymm"") ","nlme","recommended","1.6.2"
"pdCompSymm","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","1.6.2"
"pdConstruct","closure","function","TRUE","FALSE","(object, value, form, nam, data, ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdBlocked","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object,     TRUE), nam = Names(object, TRUE), data = sys.frame(sys.parent()),     pdClass = ""pdSymm"", ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdCompSymm","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.frame(sys.parent()), ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdDiag","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.frame(sys.parent()), ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdIdent","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.frame(sys.parent()), ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdLogChol","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.parent(), ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdMat","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.frame(sys.parent()), ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdNatural","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.frame(sys.parent()), ...) ","nlme","recommended","1.6.2"
"pdConstruct.pdSymm","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = Names(object), data = sys.frame(sys.parent()), ...) ","nlme","recommended","1.6.2"
"pdDiag","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","1.6.2"
"pdFactor","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdBlocked","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdCompSymm","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdDiag","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdIdent","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdLogChol","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdMat","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdNatural","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.pdSymm","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdFactor.reStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pdIdent","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","1.6.2"
"pdLogChol","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.parent()) ","nlme","recommended","1.6.2"
"pdMat","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent()),     pdClass = ""pdSymm"") ","nlme","recommended","1.6.2"
"pdMatrix","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdBlocked","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdCompSymm","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdDiag","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdIdent","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdMat","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdNatural","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.pdSymm","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdMatrix.reStruct","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","1.6.2"
"pdNatural","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","1.6.2"
"pdSymm","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = parent.frame()) ","nlme","recommended","1.6.2"
"phenoModel","closure","function","TRUE","FALSE","(Subject, time, dose, lCl, lV) ","nlme","recommended","1.6.2"
"plot.ACF","closure","function","TRUE","FALSE","(x, alpha = 0, xlab = ""Lag"", ylab = ""Autocorrelation"",     grid = FALSE, ...) ","nlme","recommended","1.6.2"
"plot.Variogram","closure","function","TRUE","FALSE","(x, smooth, showModel, sigma = NULL, span = 0.6, xlab = ""Distance"",     ylab = ""Semivariogram"", type = ""p"", ylim, grid = FALSE, ...) ","nlme","recommended","1.6.2"
"plot.augPred","closure","function","TRUE","FALSE","(x, key = TRUE, grid = FALSE, ...) ","nlme","recommended","1.6.2"
"plot.compareFits","closure","function","TRUE","FALSE","(x, subset, key = TRUE, mark = NULL, ...) ","nlme","recommended","1.6.2"
"plot.gls","closure","function","TRUE","FALSE","(x, form = resid(., type = ""pearson"") ~ fitted(.), abline,     id = NULL, idLabels = NULL, idResType = c(""pearson"", ""normalized""),     grid, ...) ","nlme","recommended","1.6.2"
"plot.intervals.lmList","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"plot.lmList","closure","function","TRUE","FALSE","(x, form = resid(., type = ""pool"") ~ fitted(.), abline,     id = NULL, idLabels = NULL, grid, ...) ","nlme","recommended","1.6.2"
"plot.lme","closure","function","TRUE","FALSE","(x, form = resid(., type = ""pearson"") ~ fitted(.), abline,     id = NULL, idLabels = NULL, idResType = c(""pearson"", ""normalized""),     grid, ...) ","nlme","recommended","1.6.2"
"plot.nffGroupedData","closure","function","TRUE","FALSE","(x, outer = NULL, inner = NULL, innerGroups = NULL,     xlab = paste(attr(x, ""labels"")$y, attr(x, ""units"")$y), ylab = groupLabel,     strip = function(...) strip.default(..., style = 1), panel = function(x,         y) ","nlme","recommended","1.6.2"
"plot.nfnGroupedData","closure","function","TRUE","FALSE","(x, outer = NULL, inner = NULL, innerGroups = NULL,     xlab = paste(attr(x, ""labels"")$x, attr(x, ""units"")$x), ylab = paste(attr(x,         ""labels"")$y, attr(x, ""units"")$y), strip = function(...) strip.default(...,         style = 1), aspect = ""xy"", panel = function(x, y, ...) ","nlme","recommended","1.6.2"
"plot.nls","closure","function","TRUE","FALSE","(x, form = resid(., type = ""pearson"") ~ fitted(.), abline,     id = NULL, idLabels = NULL, idResType = c(""pearson"", ""normalized""),     grid, ...) ","nlme","recommended","1.6.2"
"plot.nmGroupedData","closure","function","TRUE","FALSE","(x, collapseLevel = Q, displayLevel = collapseLevel,     outer = NULL, inner = NULL, preserve = NULL, FUN = mean,     subset = NULL, key = TRUE, grid = TRUE, ...) ","nlme","recommended","1.6.2"
"plot.pdMat","closure","function","TRUE","FALSE","(x, nseg = 50, levels = 1, center = rep(0, length(stdDev)),     additional, ...) ","nlme","recommended","1.6.2"
"plot.ranef.lmList","closure","function","TRUE","FALSE","(x, form = NULL, grid = TRUE, control, ...) ","nlme","recommended","1.6.2"
"plot.ranef.lme","closure","function","TRUE","FALSE","(x, form = NULL, omitFixed = TRUE, level = Q, grid = TRUE,     control, ...) ","nlme","recommended","1.6.2"
"plot.simulate.lme","closure","function","TRUE","FALSE","(x, form = y ~ x | df * method, df = attr(x, ""df""),     weights, xlab = ""Empirical p-value"", ylab = ""Nominal p-value"",     xlim = c(0.037, 0.963), ylim = c(0.037, 0.963), aspect = 1,     strip = function(...) strip.default(..., style = 1), ...) ","nlme","recommended","1.6.2"
"pooledSD","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"predict.gls","closure","function","TRUE","FALSE","(object, newdata, na.action = na.fail, ...) ","nlme","recommended","1.6.2"
"predict.gnls","closure","function","TRUE","FALSE","(object, newdata, na.action = na.fail, naPattern = NULL,     ...) ","nlme","recommended","1.6.2"
"predict.lmList","closure","function","TRUE","FALSE","(object, newdata, subset = NULL, pool = attr(object,     ""pool""), asList = FALSE, se.fit = FALSE, ...) ","nlme","recommended","1.6.2"
"predict.lme","closure","function","TRUE","FALSE","(object, newdata, level = Q, asList = FALSE, na.action = na.fail,     ...) ","nlme","recommended","1.6.2"
"predict.nlme","closure","function","TRUE","FALSE","(object, newdata, level = Q, asList = FALSE, na.action = na.fail,     naPattern = NULL, ...) ","nlme","recommended","1.6.2"
"print.VarCorr.lme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.VarCov","closure","function","TRUE","FALSE","(x, corr = FALSE, stdevs = TRUE, digits = 5, ...) ","nlme","recommended","1.6.2"
"print.anova.lme","closure","function","TRUE","FALSE","(x, verbose = attr(x, ""verbose""), ...) ","nlme","recommended","1.6.2"
"print.compareFits","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.corNatural","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.corStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.corSymm","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.correlation","closure","function","TRUE","FALSE","(x, title = "" Correlation:"", rdig = 3, ...) ","nlme","recommended","1.6.2"
"print.gls","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.groupedData","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.intervals.gls","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.intervals.lmList","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.intervals.lme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.lmList","closure","function","TRUE","FALSE","(x, pool = attr(x, ""pool""), ...) ","nlme","recommended","1.6.2"
"print.lme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.modelStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.pdMat","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.ranef.lme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.reStruct","closure","function","TRUE","FALSE","(x, sigma = 1, reEstimates, verbose = FALSE, ...) ","nlme","recommended","1.6.2"
"print.simulate.lme","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.corNatural","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.corStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.corSymm","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.gls","closure","function","TRUE","FALSE","(x, verbose = FALSE, digits = .Options$digits, ...) ","nlme","recommended","1.6.2"
"print.summary.lmList","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.lme","closure","function","TRUE","FALSE","(x, verbose = FALSE, ...) ","nlme","recommended","1.6.2"
"print.summary.modelStruct","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.pdMat","closure","function","TRUE","FALSE","(x, sigma = 1, rdig = 3, Level = NULL, resid = FALSE,     ...) ","nlme","recommended","1.6.2"
"print.summary.varComb","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.summary.varFixed","closure","function","TRUE","FALSE","(x, header = TRUE, ...) ","nlme","recommended","1.6.2"
"print.summary.varFunc","closure","function","TRUE","FALSE","(x, header = TRUE, ...) ","nlme","recommended","1.6.2"
"print.varComb","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"print.varFunc","closure","function","TRUE","FALSE","(x, ...) ","nlme","recommended","1.6.2"
"pruneLevels","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pruneLevels.factor","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"pruneLevels.ordered","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"qqnorm.gls","closure","function","TRUE","FALSE","(y, form = ~resid(., type = ""p""), abline = NULL, id = NULL,     idLabels = NULL, grid = FALSE, ...) ","nlme","recommended","1.6.2"
"qqnorm.lm","closure","function","TRUE","FALSE","(y, form = ~resid(., type = ""p""), abline = NULL, id = NULL,     idLabels = NULL, grid = FALSE, ...) ","nlme","recommended","1.6.2"
"qqnorm.lmList","closure","function","TRUE","FALSE","(y, form = ~resid(., type = ""pooled""), abline = NULL,     id = NULL, idLabels = NULL, grid = FALSE, resType = ""pool"",     ...) ","nlme","recommended","1.6.2"
"qqnorm.lme","closure","function","TRUE","FALSE","(y, form = ~resid(., type = ""p""), abline = NULL, id = NULL,     idLabels = NULL, grid = FALSE, ...) ","nlme","recommended","1.6.2"
"qqnorm.nls","closure","function","TRUE","FALSE","(y, form = ~resid(., type = ""p""), abline = NULL, id = NULL,     idLabels = NULL, grid = FALSE, ...) ","nlme","recommended","1.6.2"
"quinModel","closure","function","TRUE","FALSE","(Subject, time, conc, dose, interval, lV, lKa, lCl) ","nlme","recommended","1.6.2"
"random.effects","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"ranef","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"ranef.lmList","closure","function","TRUE","FALSE","(object, augFrame = FALSE, data = NULL, which = NULL,     FUN = mean, standard = FALSE, omitGroupingFactor = TRUE,     ...) ","nlme","recommended","1.6.2"
"ranef.lme","closure","function","TRUE","FALSE","(object, augFrame = FALSE, level = 1:Q, data, which = 1:ncol(data),     FUN = mean, standard = FALSE, omitGroupingFactor = TRUE,     subset = NULL, ...) ","nlme","recommended","1.6.2"
"reStruct","closure","function","TRUE","FALSE","(object, pdClass = ""pdLogChol"", REML = FALSE, data = sys.frame(sys.parent())) ","nlme","recommended","1.6.2"
"recalc","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corAR1","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corARMA","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corCAR1","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corCompSymm","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corIdent","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corNatural","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corSpatial","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corStruct","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.corSymm","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.modelStruct","closure","function","TRUE","FALSE","(object, conLin = attr(object, ""conLin""), ...) ","nlme","recommended","1.6.2"
"recalc.reStruct","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.varFunc","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"recalc.varIdent","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","1.6.2"
"residuals.gls","closure","function","TRUE","FALSE","(object, type = c(""response"", ""pearson"", ""normalized""),     ...) ","nlme","recommended","1.6.2"
"residuals.glsStruct","closure","function","TRUE","FALSE","(object, glsFit = attr(object, ""glsFit""), ...) ","nlme","recommended","1.6.2"
"residuals.gnls","closure","function","TRUE","FALSE","(object, type = c(""response"", ""pearson"", ""normalized""),     ...) ","nlme","recommended","1.6.2"
"residuals.gnlsStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"residuals.lmList","closure","function","TRUE","FALSE","(object, type = c(""response"", ""pearson"", ""pooled.pearson""),     subset = NULL, asList = FALSE, ...) ","nlme","recommended","1.6.2"
"residuals.lme","closure","function","TRUE","FALSE","(object, level = Q, type = c(""response"", ""pearson"",     ""normalized""), asList = FALSE, ...) ","nlme","recommended","1.6.2"
"residuals.lmeStruct","closure","function","TRUE","FALSE","(object, level = Q, conLin = attr(object, ""conLin""),     lmeFit = attr(object, ""lmeFit""), ...) ","nlme","recommended","1.6.2"
"residuals.nlmeStruct","closure","function","TRUE","FALSE","(object, level = Q, conLin = attr(object, ""conLin""),     ...) ","nlme","recommended","1.6.2"
"simulate.lme","closure","function","TRUE","FALSE","(m1, m2, Random.seed, method = c(""REML"", ""ML""), nsim = 1000,     niterEM = c(40, 200), useGen = FALSE) ","nlme","recommended","1.6.2"
"solve.pdBlocked","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.pdDiag","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.pdIdent","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.pdLogChol","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.pdMat","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.pdNatural","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.pdSymm","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"solve.reStruct","closure","function","TRUE","FALSE","(a, b, ...) ","nlme","recommended","1.6.2"
"splitFormula","closure","function","TRUE","FALSE","(form, sep = ""/"") ","nlme","recommended","1.6.2"
"summary.corAR1","closure","function","TRUE","FALSE","(object, structName = ""AR(1)"", ...) ","nlme","recommended","1.6.2"
"summary.corARMA","closure","function","TRUE","FALSE","(object, structName = paste(""ARMA("", attr(object, ""p""),     "","", attr(object, ""q""), "")"", sep = """"), ...) ","nlme","recommended","1.6.2"
"summary.corCAR1","closure","function","TRUE","FALSE","(object, structName = ""Continuous AR(1)"", ...) ","nlme","recommended","1.6.2"
"summary.corCompSymm","closure","function","TRUE","FALSE","(object, structName = ""Compound symmetry"", ...) ","nlme","recommended","1.6.2"
"summary.corExp","closure","function","TRUE","FALSE","(object, structName = ""Exponential spatial correlation"",     ...) ","nlme","recommended","1.6.2"
"summary.corGaus","closure","function","TRUE","FALSE","(object, structName = ""Gaussian spatial correlation"",     ...) ","nlme","recommended","1.6.2"
"summary.corIdent","closure","function","TRUE","FALSE","(object, structName = ""Independent"", ...) ","nlme","recommended","1.6.2"
"summary.corLin","closure","function","TRUE","FALSE","(object, structName = ""Linear spatial correlation"",     ...) ","nlme","recommended","1.6.2"
"summary.corNatural","closure","function","TRUE","FALSE","(object, structName = ""General correlation, with natural parametrization"",     ...) ","nlme","recommended","1.6.2"
"summary.corRatio","closure","function","TRUE","FALSE","(object, structName = ""Rational quadratic spatial correlation"",     ...) ","nlme","recommended","1.6.2"
"summary.corSpher","closure","function","TRUE","FALSE","(object, structName = ""Spherical spatial correlation"",     ...) ","nlme","recommended","1.6.2"
"summary.corStruct","closure","function","TRUE","FALSE","(object, structName = class(object)[1], ...) ","nlme","recommended","1.6.2"
"summary.corSymm","closure","function","TRUE","FALSE","(object, structName = ""General correlation"", ...) ","nlme","recommended","1.6.2"
"summary.gls","closure","function","TRUE","FALSE","(object, verbose = FALSE, ...) ","nlme","recommended","1.6.2"
"summary.lmList","closure","function","TRUE","FALSE","(object, pool = attr(object, ""pool""), ...) ","nlme","recommended","1.6.2"
"summary.lme","closure","function","TRUE","FALSE","(object, adjustSigma = TRUE, verbose = FALSE, ...) ","nlme","recommended","1.6.2"
"summary.modelStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"summary.nlsList","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"summary.pdBlocked","closure","function","TRUE","FALSE","(object, structName = ""Blocked"", ...) ","nlme","recommended","1.6.2"
"summary.pdCompSymm","closure","function","TRUE","FALSE","(object, structName = ""Compound Symmetry"", ...) ","nlme","recommended","1.6.2"
"summary.pdDiag","closure","function","TRUE","FALSE","(object, structName = ""Diagonal"", ...) ","nlme","recommended","1.6.2"
"summary.pdIdent","closure","function","TRUE","FALSE","(object, structName = ""Multiple of an Identity"", ...) ","nlme","recommended","1.6.2"
"summary.pdLogChol","closure","function","TRUE","FALSE","(object, structName = ""General positive-definite, Log-Cholesky parametrization"",     ...) ","nlme","recommended","1.6.2"
"summary.pdMat","closure","function","TRUE","FALSE","(object, structName = class(object)[1], noCorrelation = FALSE,     ...) ","nlme","recommended","1.6.2"
"summary.pdNatural","closure","function","TRUE","FALSE","(object, structName = ""General positive-definite, Natural parametrization"",     ...) ","nlme","recommended","1.6.2"
"summary.pdSymm","closure","function","TRUE","FALSE","(object, structName = ""General positive-definite"", ...) ","nlme","recommended","1.6.2"
"summary.reStruct","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","1.6.2"
"summary.varComb","closure","function","TRUE","FALSE","(object, structName = ""Combination of variance functions:"",     ...) ","nlme","recommended","1.6.2"
"summary.varConstPower","closure","function","TRUE","FALSE","(object, structName = ""Constant plus power of variance covariate"",     ...) ","nlme","recommended","1.6.2"
"summary.varExp","closure","function","TRUE","FALSE","(object, structName = ""Exponential of variance covariate"",     ...) ","nlme","recommended","1.6.2"
"summary.varFixed","closure","function","TRUE","FALSE","(object, structName, ...) ","nlme","recommended","1.6.2"
"summary.varFunc","closure","function","TRUE","FALSE","(object, structName = class(object)[1], ...) ","nlme","recommended","1.6.2"
"summary.varIdent","closure","function","TRUE","FALSE","(object, structName = if (is.null(formula(object))) ""Constant variance"" else ""Different standard deviations per stratum"",     ...) ","nlme","recommended","1.6.2"
"summary.varPower","closure","function","TRUE","FALSE","(object, structName = ""Power of variance covariate"",     ...) ","nlme","recommended","1.6.2"
"update.corStruct","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.gls","closure","function","TRUE","FALSE","(object, model, data, correlation, weights, subset,     method, na.action, control, verbose, ...) ","nlme","recommended","1.6.2"
"update.gnls","closure","function","TRUE","FALSE","(object, model, data = sys.frame(sys.parent()), params,     start, correlation = NULL, weights = NULL, subset, na.action = na.fail,     naPattern, control = list(), verbose = FALSE, ...) ","nlme","recommended","1.6.2"
"update.groupedData","closure","function","TRUE","FALSE","(object, formula, data, order.groups, FUN, outer, inner,     labels, units, ...) ","nlme","recommended","1.6.2"
"update.lmList","closure","function","TRUE","FALSE","(object, formula, data, level, subset, na.action, pool,     ...) ","nlme","recommended","1.6.2"
"update.lme","closure","function","TRUE","FALSE","(object, fixed, data, random, correlation, weights,     subset, method, na.action, control, ...) ","nlme","recommended","1.6.2"
"update.modelStruct","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.nlme","closure","function","TRUE","FALSE","(object, model, data, fixed, random, groups, start,     correlation, weights, subset, method, na.action, naPattern,     control, verbose, ...) ","nlme","recommended","1.6.2"
"update.nlsList","closure","function","TRUE","FALSE","(object, model, data, start, control, level, subset,     na.action, pool, ...) ","nlme","recommended","1.6.2"
"update.reStruct","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.varComb","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.varConstPower","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.varExp","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.varFunc","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"update.varPower","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","1.6.2"
"varComb","closure","function","TRUE","FALSE","(...) ","nlme","recommended","1.6.2"
"varConstPower","closure","function","TRUE","FALSE","(const = numeric(0), power = numeric(0), form = ~fitted(.),     fixed = NULL) ","nlme","recommended","1.6.2"
"varExp","closure","function","TRUE","FALSE","(value = numeric(0), form = ~fitted(.), fixed = NULL) ","nlme","recommended","1.6.2"
"varFixed","closure","function","TRUE","FALSE","(value = ~1) ","nlme","recommended","1.6.2"
"varFunc","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"varIdent","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, fixed = NULL) ","nlme","recommended","1.6.2"
"varPower","closure","function","TRUE","FALSE","(value = numeric(0), form = ~fitted(.), fixed = NULL) ","nlme","recommended","1.6.2"
"varWeights","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"varWeights.glsStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"varWeights.lmeStruct","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"varWeights.varComb","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
"varWeights.varFunc","closure","function","TRUE","FALSE","(object) ","nlme","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","nls","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","nls","base","1.6.2"
"NLSstAsymptotic","closure","function","TRUE","FALSE","(xy) ","nls","base","1.6.2"
"NLSstAsymptotic.sortedXyData","closure","function","TRUE","FALSE","(xy) ","nls","base","1.6.2"
"NLSstClosestX","closure","function","TRUE","FALSE","(xy, yval) ","nls","base","1.6.2"
"NLSstClosestX.sortedXyData","closure","function","TRUE","FALSE","(xy, yval) ","nls","base","1.6.2"
"NLSstLfAsymptote","closure","function","TRUE","FALSE","(xy) ","nls","base","1.6.2"
"NLSstLfAsymptote.sortedXyData","closure","function","TRUE","FALSE","(xy) ","nls","base","1.6.2"
"NLSstRtAsymptote","closure","function","TRUE","FALSE","(xy) ","nls","base","1.6.2"
"NLSstRtAsymptote.sortedXyData","closure","function","TRUE","FALSE","(xy) ","nls","base","1.6.2"
"SSasymp","closure","selfStart","TRUE","FALSE","(input, Asym, R0, lrc) ","nls","base","1.6.2"
"SSasympOff","closure","selfStart","TRUE","FALSE","(input, Asym, lrc, c0) ","nls","base","1.6.2"
"SSasympOrig","closure","selfStart","TRUE","FALSE","(input, Asym, lrc) ","nls","base","1.6.2"
"SSbiexp","closure","selfStart","TRUE","FALSE","(input, A1, lrc1, A2, lrc2) ","nls","base","1.6.2"
"SSfol","closure","selfStart","TRUE","FALSE","(Dose, input, lKe, lKa, lCl) ","nls","base","1.6.2"
"SSfpl","closure","selfStart","TRUE","FALSE","(input, A, B, xmid, scal) ","nls","base","1.6.2"
"SSgompertz","closure","selfStart","TRUE","FALSE","(x, Asym, b2, b3) ","nls","base","1.6.2"
"SSlogis","closure","selfStart","TRUE","FALSE","(input, Asym, xmid, scal) ","nls","base","1.6.2"
"SSmicmen","closure","selfStart","TRUE","FALSE","(input, Vm, K) ","nls","base","1.6.2"
"SSweibull","closure","selfStart","TRUE","FALSE","(x, Asym, Drop, lrc, pwr) ","nls","base","1.6.2"
"anova.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"anovalist.nls","closure","function","TRUE","FALSE","(object, ..., test = NULL) ","nls","base","1.6.2"
"asOneSidedFormula","closure","function","TRUE","FALSE","(object) ","nls","base","1.6.2"
"clearNames","closure","function","TRUE","FALSE","(object) ","nls","base","1.6.2"
"coef.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"deviance.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"df.residual.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"fitted.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"formula.nls","closure","function","TRUE","FALSE","(x, ...) ","nls","base","1.6.2"
"getInitial","closure","function","TRUE","FALSE","(object, data, ...) ","nls","base","1.6.2"
"getInitial.default","closure","function","TRUE","FALSE","(object, data, mCall, LHS = NULL, ...) ","nls","base","1.6.2"
"getInitial.formula","closure","function","TRUE","FALSE","(object, data, ...) ","nls","base","1.6.2"
"getInitial.selfStart","closure","function","TRUE","FALSE","(object, data, mCall, LHS = NULL, ...) ","nls","base","1.6.2"
"logLik.nls","closure","function","TRUE","FALSE","(object, REML = FALSE, ...) ","nls","base","1.6.2"
"nls","closure","function","TRUE","FALSE","(formula, data = parent.frame(), start, control, algorithm = ""default"",     trace = FALSE, subset, weights, na.action) ","nls","base","1.6.2"
"nls.control","closure","function","TRUE","FALSE","(maxiter = 50, tol = 1e-05, minFactor = 1/1024) ","nls","base","1.6.2"
"nlsModel","closure","function","TRUE","FALSE","(form, data, start) ","nls","base","1.6.2"
"nlsModel.plinear","closure","function","TRUE","FALSE","(form, data, start) ","nls","base","1.6.2"
"numericDeriv","closure","function","TRUE","FALSE","(expr, theta, rho = parent.frame()) ","nls","base","1.6.2"
"plot.profile.nls","closure","function","TRUE","FALSE","(x, levels, conf = c(99, 95, 90, 80, 50)/100, nseg = 50,     absVal = TRUE, ...) ","nls","base","1.6.2"
"predict.nls","closure","function","TRUE","FALSE","(object, newdata, se.fit = FALSE, scale = NULL, df = Inf,     interval = c(""none"", ""confidence"", ""prediction""), level = 0.95,     ...) ","nls","base","1.6.2"
"print.nls","closure","function","TRUE","FALSE","(x, ...) ","nls","base","1.6.2"
"print.summary.nls","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), symbolic.cor = p >     4, signif.stars = getOption(""show.signif.stars""), ...) ","nls","base","1.6.2"
"profile.nls","closure","function","TRUE","FALSE","(fitted, which = 1:npar, maxpts = 100, alphamax = 0.01,     delta.t = cutoff/5, ...) ","nls","base","1.6.2"
"profiler","closure","function","TRUE","FALSE","(fitted, ...) ","nls","base","1.6.2"
"profiler.nls","closure","function","TRUE","FALSE","(fitted, ...) ","nls","base","1.6.2"
"residuals.nls","closure","function","TRUE","FALSE","(object, type = c(""response"", ""pearson""), ...) ","nls","base","1.6.2"
"selfStart","closure","function","TRUE","FALSE","(model, initial, parameters, template) ","nls","base","1.6.2"
"selfStart.default","closure","function","TRUE","FALSE","(model, initial, parameters, template) ","nls","base","1.6.2"
"selfStart.formula","closure","function","TRUE","FALSE","(model, initial, parameters, template = NULL) ","nls","base","1.6.2"
"setNames","closure","function","TRUE","FALSE","(object, nm) ","nls","base","1.6.2"
"sortedXyData","closure","function","TRUE","FALSE","(x, y, data) ","nls","base","1.6.2"
"sortedXyData.default","closure","function","TRUE","FALSE","(x, y, data) ","nls","base","1.6.2"
"summary.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"vcov.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
"weights.nls","closure","function","TRUE","FALSE","(object, ...) ","nls","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","nnet","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","nnet","recommended","1.6.2"
"add.net","closure","function","TRUE","FALSE","(net, from, to) ","nnet","recommended","1.6.2"
"add1.multinom","closure","function","TRUE","FALSE","(object, scope, sorted = FALSE, trace = FALSE, ...) ","nnet","recommended","1.6.2"
"anova.multinom","closure","function","TRUE","FALSE","(object, ..., test = c(""Chisq"", ""none"")) ","nnet","recommended","1.6.2"
"class.ind","closure","function","TRUE","FALSE","(cl) ","nnet","recommended","1.6.2"
"coef.multinom","closure","function","TRUE","FALSE","(object, ...) ","nnet","recommended","1.6.2"
"coef.nnet","closure","function","TRUE","FALSE","(object, ...) ","nnet","recommended","1.6.2"
"drop1.multinom","closure","function","TRUE","FALSE","(object, scope, sorted = FALSE, trace = FALSE, ...) ","nnet","recommended","1.6.2"
"eval.nn","closure","function","TRUE","FALSE","(wts) ","nnet","recommended","1.6.2"
"extractAIC.multinom","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","nnet","recommended","1.6.2"
"model.frame.multinom","closure","function","TRUE","FALSE","(formula, data = NULL, na.action = NULL, ...) ","nnet","recommended","1.6.2"
"multinom","closure","function","TRUE","FALSE","(formula, data = parent.frame(), weights, subset, na.action,     contrasts = NULL, Hess = FALSE, summ = 0, censored = FALSE,     ...) ","nnet","recommended","1.6.2"
"nnet","closure","function","TRUE","FALSE","(object, ...) ","nnet","recommended","1.6.2"
"nnet.Hess","closure","function","TRUE","FALSE","(net, x, y, weights) ","nnet","recommended","1.6.2"
"nnet.default","closure","function","TRUE","FALSE","(x, y, weights, size, Wts, mask = rep(TRUE, length(wts)),     linout = FALSE, entropy = FALSE, softmax = FALSE, censored = FALSE,     skip = FALSE, rang = 0.7, decay = 0, maxit = 100, Hess = FALSE,     trace = TRUE, MaxNWts = 1000, abstol = 1e-04, reltol = 1e-08,     ...) ","nnet","recommended","1.6.2"
"nnet.formula","closure","function","TRUE","FALSE","(formula, data = NULL, weights, ..., subset, na.action = na.fail,     contrasts = NULL) ","nnet","recommended","1.6.2"
"norm.net","closure","function","TRUE","FALSE","(net) ","nnet","recommended","1.6.2"
"predict.multinom","closure","function","TRUE","FALSE","(object, newdata, type = c(""class"", ""probs""), ...) ","nnet","recommended","1.6.2"
"predict.nnet","closure","function","TRUE","FALSE","(object, newdata, type = c(""raw"", ""class""), ...) ","nnet","recommended","1.6.2"
"print.multinom","closure","function","TRUE","FALSE","(x, ...) ","nnet","recommended","1.6.2"
"print.nnet","closure","function","TRUE","FALSE","(x, ...) ","nnet","recommended","1.6.2"
"print.summary.multinom","closure","function","TRUE","FALSE","(x, digits = x$digits, ...) ","nnet","recommended","1.6.2"
"print.summary.nnet","closure","function","TRUE","FALSE","(x, ...) ","nnet","recommended","1.6.2"
"residuals.nnet","closure","function","TRUE","FALSE","(object, ...) ","nnet","recommended","1.6.2"
"summary.multinom","closure","function","TRUE","FALSE","(object, correlation = TRUE, digits = options()$digits,     Wald.ratios = FALSE, ...) ","nnet","recommended","1.6.2"
"summary.nnet","closure","function","TRUE","FALSE","(object, ...) ","nnet","recommended","1.6.2"
"vcov.multinom","closure","function","TRUE","FALSE","(object, ...) ","nnet","recommended","1.6.2"
"which.is.max","closure","function","TRUE","FALSE","(x) ","nnet","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","rpart","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","rpart","recommended","1.6.2"
"descendants","closure","function","TRUE","FALSE","(nodes, include = TRUE) ","rpart","recommended","1.6.2"
"formatg","closure","function","TRUE","FALSE","(x, digits = unlist(options(""digits"")), format = paste(""%."",     digits, ""g"", sep = """")) ","rpart","recommended","1.6.2"
"labels.rpart","closure","function","TRUE","FALSE","(object, digits = 4, minlength = 1, pretty, collapse = TRUE,     ...) ","rpart","recommended","1.6.2"
"meanvar","closure","function","TRUE","FALSE","(tree, ...) ","rpart","recommended","1.6.2"
"meanvar.rpart","closure","function","TRUE","FALSE","(tree, xlab = ""ave(y)"", ylab = ""ave(deviance)"", ...) ","rpart","recommended","1.6.2"
"model.frame.rpart","closure","function","TRUE","FALSE","(formula, ...) ","rpart","recommended","1.6.2"
"na.rpart","closure","function","TRUE","FALSE","(x) ","rpart","recommended","1.6.2"
"node.match","closure","function","TRUE","FALSE","(nodes, nodelist, leaves, print.it = TRUE) ","rpart","recommended","1.6.2"
"path.rpart","closure","function","TRUE","FALSE","(tree, nodes, pretty = 0, print.it = TRUE) ","rpart","recommended","1.6.2"
"plot.rpart","closure","function","TRUE","FALSE","(x, uniform = FALSE, branch = 1, compress = FALSE, nspace,     margin = 0, minbranch = 0.3, ...) ","rpart","recommended","1.6.2"
"plotcp","closure","function","TRUE","FALSE","(x, minline = TRUE, lty = 3, col = 1, upper = c(""size"",     ""splits"", ""none""), ylim, ...) ","rpart","recommended","1.6.2"
"post","closure","function","TRUE","FALSE","(tree, ...) ","rpart","recommended","1.6.2"
"post.rpart","closure","function","TRUE","FALSE","(tree, title., filename = paste(deparse(substitute(tree)),     "".ps"", sep = """"), digits = getOption(""digits"") - 3, pretty = TRUE,     use.n = TRUE, horizontal = TRUE, ...) ","rpart","recommended","1.6.2"
"pred.rpart","closure","function","TRUE","FALSE","(fit, x) ","rpart","recommended","1.6.2"
"predict.rpart","closure","function","TRUE","FALSE","(object, newdata = list(), type = c(""vector"", ""prob"",     ""class"", ""matrix""), ...) ","rpart","recommended","1.6.2"
"print.rpart","closure","function","TRUE","FALSE","(x, minlength = 0, spaces = 2, cp, digits = getOption(""digits""),     ...) ","rpart","recommended","1.6.2"
"printcp","closure","function","TRUE","FALSE","(x, digits = getOption(""digits"") - 2) ","rpart","recommended","1.6.2"
"prune","closure","function","TRUE","FALSE","(tree, ...) ","rpart","recommended","1.6.2"
"prune.rpart","closure","function","TRUE","FALSE","(tree, cp, ...) ","rpart","recommended","1.6.2"
"residuals.rpart","closure","function","TRUE","FALSE","(object, type = c(""usual"", ""pearson"", ""deviance""), ...) ","rpart","recommended","1.6.2"
"rpart","closure","function","TRUE","FALSE","(formula, data = NULL, weights, subset, na.action = na.rpart,     method, model = FALSE, x = FALSE, y = TRUE, parms, control,     cost, ...) ","rpart","recommended","1.6.2"
"rpart.anova","closure","function","TRUE","FALSE","(y, offset, parms, wt) ","rpart","recommended","1.6.2"
"rpart.branch","closure","function","TRUE","FALSE","(x, y, node, branch) ","rpart","recommended","1.6.2"
"rpart.class","closure","function","TRUE","FALSE","(y, offset, parms, wt) ","rpart","recommended","1.6.2"
"rpart.control","closure","function","TRUE","FALSE","(minsplit = 20, minbucket = round(minsplit/3), cp = 0.01,     maxcompete = 4, maxsurrogate = 5, usesurrogate = 2, xval = 10,     surrogatestyle = 0, maxdepth = 30, ...) ","rpart","recommended","1.6.2"
"rpart.exp","closure","function","TRUE","FALSE","(y, offset, parms, wt) ","rpart","recommended","1.6.2"
"rpart.matrix","closure","function","TRUE","FALSE","(frame) ","rpart","recommended","1.6.2"
"rpart.poisson","closure","function","TRUE","FALSE","(y, offset, parms, wt) ","rpart","recommended","1.6.2"
"rpartcallback","closure","function","TRUE","FALSE","(mlist, nobs, init) ","rpart","recommended","1.6.2"
"rpartco","closure","function","TRUE","FALSE","(tree, parms = paste("".rpart.parms"", dev.cur(), sep = ""."")) ","rpart","recommended","1.6.2"
"rpconvert","closure","function","TRUE","FALSE","(x) ","rpart","recommended","1.6.2"
"rsq.rpart","closure","function","TRUE","FALSE","(x) ","rpart","recommended","1.6.2"
"snip.rpart","closure","function","TRUE","FALSE","(x, toss) ","rpart","recommended","1.6.2"
"snip.rpart.mouse","closure","function","TRUE","FALSE","(tree, parms = paste("".rpart.parms"", dev.cur(), sep = ""."")) ","rpart","recommended","1.6.2"
"string.bounding.box","closure","function","TRUE","FALSE","(s) ","rpart","recommended","1.6.2"
"summary.rpart","closure","function","TRUE","FALSE","(object, cp = 0, digits = getOption(""digits""), file,     ...) ","rpart","recommended","1.6.2"
"text.rpart","closure","function","TRUE","FALSE","(x, splits = TRUE, label = ""yval"", FUN = text, all = FALSE,     pretty = NULL, digits = getOption(""digits"") - 3, use.n = FALSE,     fancy = FALSE, fwidth = 0.8, fheight = 0.8, ...) ","rpart","recommended","1.6.2"
"tree.depth","closure","function","TRUE","FALSE","(nodes) ","rpart","recommended","1.6.2"
"xpred.rpart","closure","function","TRUE","FALSE","(fit, xval = 10, cp) ","rpart","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","spatial","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","spatial","recommended","1.6.2"
".sp.lib.name","character","character","TRUE","FALSE","NA","spatial","recommended","1.6.2"
".spfmat","closure","function","TRUE","FALSE","(x, y, np) ","spatial","recommended","1.6.2"
".trval","closure","function","TRUE","FALSE","(obj, x, y) ","spatial","recommended","1.6.2"
"Kaver","closure","function","TRUE","FALSE","(fs, nsim, ...) ","spatial","recommended","1.6.2"
"Kenvl","closure","function","TRUE","FALSE","(fs, nsim, ...) ","spatial","recommended","1.6.2"
"Kfn","closure","function","TRUE","FALSE","(pp, fs, k = 100) ","spatial","recommended","1.6.2"
"Psim","closure","function","TRUE","FALSE","(n) ","spatial","recommended","1.6.2"
"SSI","closure","function","TRUE","FALSE","(n, r) ","spatial","recommended","1.6.2"
"Strauss","closure","function","TRUE","FALSE","(n, c = 0, r) ","spatial","recommended","1.6.2"
"anova.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","1.6.2"
"anovalist.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","1.6.2"
"correlogram","closure","function","TRUE","FALSE","(krig, nint, plotit = TRUE, ...) ","spatial","recommended","1.6.2"
"deviance.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","1.6.2"
"df.residual.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","1.6.2"
"expcov","closure","function","TRUE","FALSE","(r, d, alpha = 0, se = 1) ","spatial","recommended","1.6.2"
"extractAIC.trls","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","spatial","recommended","1.6.2"
"fitted.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","1.6.2"
"gaucov","closure","function","TRUE","FALSE","(r, d, alpha = 0, se = 1) ","spatial","recommended","1.6.2"
"plot.trls","closure","function","TRUE","FALSE","(x, border = ""red"", col = NA, pch = 4, cex = 0.6, add = FALSE,     div = 8, ...) ","spatial","recommended","1.6.2"
"ppgetregion","closure","function","TRUE","FALSE","() ","spatial","recommended","1.6.2"
"ppinit","closure","function","TRUE","FALSE","(file) ","spatial","recommended","1.6.2"
"pplik","closure","function","TRUE","FALSE","(pp, R, ng = 50, trace = FALSE) ","spatial","recommended","1.6.2"
"ppregion","closure","function","TRUE","FALSE","(xl = 0, xu = 1, yl = 0, yu = 1) ","spatial","recommended","1.6.2"
"predict.trls","closure","function","TRUE","FALSE","(object, x, y, ...) ","spatial","recommended","1.6.2"
"prmat","closure","function","TRUE","FALSE","(obj, xl, xu, yl, yu, n) ","spatial","recommended","1.6.2"
"residuals.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","1.6.2"
"semat","closure","function","TRUE","FALSE","(obj, xl, xu, yl, yu, n, se) ","spatial","recommended","1.6.2"
"sphercov","closure","function","TRUE","FALSE","(r, d, alpha = 0, se = 1, D = 2) ","spatial","recommended","1.6.2"
"summary.trls","closure","function","TRUE","FALSE","(object, digits = max(3, getOption(""digits"") - 3), ...) ","spatial","recommended","1.6.2"
"surf.gls","closure","function","TRUE","FALSE","(np, covmod, x, y, z, nx = 1000, ...) ","spatial","recommended","1.6.2"
"surf.ls","closure","function","TRUE","FALSE","(np, x, y, z) ","spatial","recommended","1.6.2"
"trls.influence","closure","function","TRUE","FALSE","(object) ","spatial","recommended","1.6.2"
"trmat","closure","function","TRUE","FALSE","(obj, xl, xu, yl, yu, n) ","spatial","recommended","1.6.2"
"variogram","closure","function","TRUE","FALSE","(krig, nint, plotit = TRUE, ...) ","spatial","recommended","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","splines","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","splines","base","1.6.2"
"as.data.frame.xyVector","closure","function","TRUE","FALSE","(x, row.names, optional) ","splines","base","1.6.2"
"as.polySpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","1.6.2"
"asVector","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"asVector.xyVector","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"backSpline","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"backSpline.nbSpline","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"backSpline.npolySpline","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"bs","closure","function","TRUE","FALSE","(x, df = NULL, knots = NULL, degree = 3, intercept = FALSE,     Boundary.knots = range(x)) ","splines","base","1.6.2"
"interpSpline","closure","function","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","base","1.6.2"
"interpSpline.default","closure","function","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","base","1.6.2"
"interpSpline.formula","closure","function","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","base","1.6.2"
"makepredictcall.bs","closure","function","TRUE","FALSE","(var, call) ","splines","base","1.6.2"
"makepredictcall.ns","closure","function","TRUE","FALSE","(var, call) ","splines","base","1.6.2"
"ns","closure","function","TRUE","FALSE","(x, df = NULL, knots = NULL, intercept = FALSE, Boundary.knots = range(x)) ","splines","base","1.6.2"
"periodicSpline","closure","function","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","base","1.6.2"
"periodicSpline.default","closure","function","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","base","1.6.2"
"periodicSpline.formula","closure","function","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","base","1.6.2"
"plot.spline","closure","function","TRUE","FALSE","(x, ...) ","splines","base","1.6.2"
"plot.xyVector","closure","function","TRUE","FALSE","(x, ...) ","splines","base","1.6.2"
"polySpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","1.6.2"
"polySpline.bSpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","1.6.2"
"polySpline.nbSpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","1.6.2"
"polySpline.pbSpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","1.6.2"
"polySpline.polySpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","1.6.2"
"predict.bSpline","closure","function","TRUE","FALSE","(object, x, nseg = 50, deriv = 0, ...) ","splines","base","1.6.2"
"predict.bs","closure","function","TRUE","FALSE","(object, newx, ...) ","splines","base","1.6.2"
"predict.nbSpline","closure","function","TRUE","FALSE","(object, x, nseg = 50, deriv = 0, ...) ","splines","base","1.6.2"
"predict.npolySpline","closure","function","TRUE","FALSE","(object, x, nseg = 50, deriv = 0, ...) ","splines","base","1.6.2"
"predict.ns","closure","function","TRUE","FALSE","(object, newx, ...) ","splines","base","1.6.2"
"predict.pbSpline","closure","function","TRUE","FALSE","(object, x, nseg = 50, deriv = 0, ...) ","splines","base","1.6.2"
"predict.polySpline","closure","function","TRUE","FALSE","(object, x, nseg = 50, deriv = 0, ...) ","splines","base","1.6.2"
"predict.ppolySpline","closure","function","TRUE","FALSE","(object, x, nseg = 50, deriv = 0, ...) ","splines","base","1.6.2"
"print.bSpline","closure","function","TRUE","FALSE","(x, ...) ","splines","base","1.6.2"
"print.polySpline","closure","function","TRUE","FALSE","(x, ...) ","splines","base","1.6.2"
"print.ppolySpline","closure","function","TRUE","FALSE","(x, ...) ","splines","base","1.6.2"
"spline.des","closure","function","TRUE","FALSE","(knots, x, ord = 4, derivs = integer(length(x))) ","splines","base","1.6.2"
"splineDesign","closure","function","TRUE","FALSE","(knots, x, ord = 4, derivs = integer(nx)) ","splines","base","1.6.2"
"splineKnots","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"splineKnots.spline","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"splineOrder","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"splineOrder.bSpline","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"splineOrder.polySpline","closure","function","TRUE","FALSE","(object) ","splines","base","1.6.2"
"xyVector","closure","function","TRUE","FALSE","(x, y) ","splines","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","stepfun","base","1.6.2"
"ecdf","closure","function","TRUE","FALSE","(x) ","stepfun","base","1.6.2"
"is.stepfun","closure","function","TRUE","FALSE","(x) ","stepfun","base","1.6.2"
"knots","closure","function","TRUE","FALSE","(Fn, ...) ","stepfun","base","1.6.2"
"knots.stepfun","closure","function","TRUE","FALSE","(Fn, ...) ","stepfun","base","1.6.2"
"plot.ecdf","closure","function","TRUE","FALSE","(..., verticals = FALSE, col.01line = ""gray70"") ","stepfun","base","1.6.2"
"plot.stepfun","closure","function","TRUE","FALSE","(x, xval, xlim, ylim = range(c(y, Fn.kn)), xlab = ""x"",     ylab = ""f(x)"", main = NULL, add = FALSE, verticals = TRUE,     do.points = TRUE, pch = par(""pch""), col.points = par(""col""),     cex.points = par(""cex""), col.hor = par(""col""), col.vert = par(""col""),     lty = par(""lty""), lwd = par(""lwd""), ...) ","stepfun","base","1.6.2"
"print.ecdf","closure","function","TRUE","FALSE","(x, digits = getOption(""digits"") - 2, ...) ","stepfun","base","1.6.2"
"print.stepfun","closure","function","TRUE","FALSE","(x, digits = getOption(""digits"") - 2, ...) ","stepfun","base","1.6.2"
"stepfun","closure","function","TRUE","FALSE","(x, y, f = 0, ties = ""ordered"") ","stepfun","base","1.6.2"
"summary.ecdf","closure","function","TRUE","FALSE","(object, ...) ","stepfun","base","1.6.2"
"summary.stepfun","closure","function","TRUE","FALSE","(object, ...) ","stepfun","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","survival","recommended","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","survival","recommended","1.6.2"
"Math.Surv","closure","function","TRUE","FALSE","(...) ","survival","recommended","1.6.2"
"Math.date","closure","function","TRUE","FALSE","(...) ","survival","recommended","1.6.2"
"Math.ratetable","closure","function","TRUE","FALSE","(x, ...) ","survival","recommended","1.6.2"
"Ops.Surv","closure","function","TRUE","FALSE","(...) ","survival","recommended","1.6.2"
"Ops.date","closure","function","TRUE","FALSE","(e1, e2) ","survival","recommended","1.6.2"
"Ops.ratetable","closure","function","TRUE","FALSE","(e1, e2) ","survival","recommended","1.6.2"
"Summary.Surv","closure","function","TRUE","FALSE","(...) ","survival","recommended","1.6.2"
"Summary.date","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","survival","recommended","1.6.2"
"Surv","closure","function","TRUE","FALSE","(time, time2, event, type = c(""right"", ""left"", ""interval"",     ""counting"", ""interval2""), origin = 0) ","survival","recommended","1.6.2"
"[.Surv","closure","function","TRUE","FALSE","(x, i, j, drop = FALSE) ","survival","recommended","1.6.2"
"[.cox.zph","closure","function","TRUE","FALSE","(x, ..., drop = FALSE) ","survival","recommended","1.6.2"
"[.coxph.penalty","closure","function","TRUE","FALSE","(x, ..., drop = FALSE) ","survival","recommended","1.6.2"
"[.date","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","survival","recommended","1.6.2"
"[.ratetable","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","survival","recommended","1.6.2"
"[.ratetable2","closure","function","TRUE","FALSE","(x, rows, cols, drop = FALSE) ","survival","recommended","1.6.2"
"[.survfit","closure","function","TRUE","FALSE","(fit, ..., drop = FALSE) ","survival","recommended","1.6.2"
"[.tcut","closure","function","TRUE","FALSE","(x, ..., drop = FALSE) ","survival","recommended","1.6.2"
"[.terms","closure","function","TRUE","FALSE","(termobj, i) ","survival","recommended","1.6.2"
"[[.date","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","survival","recommended","1.6.2"
"agexact.fit","closure","function","TRUE","FALSE","(x, y, strata, offset, init, control, weights, method,     rownames) ","survival","recommended","1.6.2"
"agreg.fit","closure","function","TRUE","FALSE","(x, y, strata, offset, init, control, weights, method,     rownames) ","survival","recommended","1.6.2"
"anova.coxph","closure","function","TRUE","FALSE","(object, ..., test = NULL) ","survival","recommended","1.6.2"
"anova.coxphlist","closure","function","TRUE","FALSE","(object, ..., test = NULL) ","survival","recommended","1.6.2"
"anova.survreg","closure","function","TRUE","FALSE","(object, ..., test = c(""Chisq"", ""none"")) ","survival","recommended","1.6.2"
"anova.survreglist","closure","function","TRUE","FALSE","(object, ..., test = c(""Chisq"", ""none"")) ","survival","recommended","1.6.2"
"as.character.Surv","closure","function","TRUE","FALSE","(xx) ","survival","recommended","1.6.2"
"as.character.date","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"as.data.frame.Surv","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","survival","recommended","1.6.2"
"as.data.frame.date","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","survival","recommended","1.6.2"
"as.data.frame.difftime","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","survival","recommended","1.6.2"
"as.date","closure","function","TRUE","FALSE","(x, order = ""mdy"", ...) ","survival","recommended","1.6.2"
"as.matrix.ratetable","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"as.vector.date","closure","function","TRUE","FALSE","(x, type = ""any"") ","survival","recommended","1.6.2"
"attrassign","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"attrassign.default","closure","function","TRUE","FALSE","(object, tt, ...) ","survival","recommended","1.6.2"
"attrassign.lm","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"basehaz","closure","function","TRUE","FALSE","(fit, centered = TRUE) ","survival","recommended","1.6.2"
"clogit","closure","function","TRUE","FALSE","(formula, data, method = c(""exact"", ""approximate""),     na.action = getOption(""na.action""), subset = NULL) ","survival","recommended","1.6.2"
"cluster","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"cox.zph","closure","function","TRUE","FALSE","(fit, transform = ""km"", global = TRUE) ","survival","recommended","1.6.2"
"coxpenal.df","closure","function","TRUE","FALSE","(hmat, hinv, fdiag, assign.list, ptype, nvar, pen1,     pen2, sparse) ","survival","recommended","1.6.2"
"coxpenal.fit","closure","function","TRUE","FALSE","(x, y, strata, offset, init, control, weights, method,     rownames, pcols, pattr, assign) ","survival","recommended","1.6.2"
"coxph","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, init, control, method = c(""efron"", ""breslow"",         ""exact""), singular.ok = TRUE, robust = FALSE, model = FALSE,     x = FALSE, y = TRUE, ...) ","survival","recommended","1.6.2"
"coxph.control","closure","function","TRUE","FALSE","(eps = 1e-04, toler.chol = .Machine$double.eps^0.75,     iter.max = 10, toler.inf = sqrt(eps), outer.max = 10) ","survival","recommended","1.6.2"
"coxph.detail","closure","function","TRUE","FALSE","(object) ","survival","recommended","1.6.2"
"coxph.fit","closure","function","TRUE","FALSE","(x, y, strata, offset, init, control, weights, method,     rownames) ","survival","recommended","1.6.2"
"coxph.getdata","closure","function","TRUE","FALSE","(fit, y = TRUE, x = TRUE, stratax = TRUE, offset = FALSE) ","survival","recommended","1.6.2"
"coxph.wtest","closure","function","TRUE","FALSE","(var, b, toler.chol = 1e-09) ","survival","recommended","1.6.2"
"date.ddmmmyy","closure","function","TRUE","FALSE","(sdate) ","survival","recommended","1.6.2"
"date.mdy","closure","function","TRUE","FALSE","(sdate, weekday = FALSE) ","survival","recommended","1.6.2"
"date.mmddyy","closure","function","TRUE","FALSE","(sdate, sep = ""/"") ","survival","recommended","1.6.2"
"date.mmddyyyy","closure","function","TRUE","FALSE","(sdate, sep = ""/"") ","survival","recommended","1.6.2"
"format.Surv","closure","function","TRUE","FALSE","(x, ...) ","survival","recommended","1.6.2"
"frailty","closure","function","TRUE","FALSE","(x, distribution = ""gamma"", ...) ","survival","recommended","1.6.2"
"frailty.brent","closure","function","TRUE","FALSE","(x, y, lower, upper) ","survival","recommended","1.6.2"
"frailty.controlaic","closure","function","TRUE","FALSE","(parms, iter, old, n, df, loglik) ","survival","recommended","1.6.2"
"frailty.controldf","closure","function","TRUE","FALSE","(parms, iter, old, df) ","survival","recommended","1.6.2"
"frailty.controlgam","closure","function","TRUE","FALSE","(opt, iter, old, group, status, loglik) ","survival","recommended","1.6.2"
"frailty.controlgauss","closure","function","TRUE","FALSE","(opt, iter, old, fcoef, trH, loglik) ","survival","recommended","1.6.2"
"frailty.gamma","closure","function","TRUE","FALSE","(x, sparse = (nclass > 5), theta, df, eps = 1e-05, method = c(""em"",     ""aic"", ""df"", ""fixed""), ...) ","survival","recommended","1.6.2"
"frailty.gammacon","closure","function","TRUE","FALSE","(d, nu) ","survival","recommended","1.6.2"
"frailty.gaussian","closure","function","TRUE","FALSE","(x, sparse = (nclass > 5), theta, df, method = c(""reml"",     ""aic"", ""df"", ""fixed""), ...) ","survival","recommended","1.6.2"
"frailty.t","closure","function","TRUE","FALSE","(x, sparse = (nclass > 5), theta, df, eps = 1e-05, tdf = 5,     method = c(""aic"", ""df"", ""fixed""), ...) ","survival","recommended","1.6.2"
"is.Surv","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.category","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.date","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.na.Surv","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.na.coxph.penalty","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.na.date","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.na.ratetable","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.na.ratetable2","closure","function","TRUE","FALSE","(x) ","survival","recommended","1.6.2"
"is.ratetable","closure","function","TRUE","FALSE","(x, verbose = FALSE) ","survival","recommended","1.6.2"
"labels.survreg","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"lines.survfit","closure","function","TRUE","FALSE","(x, type = ""s"", mark = 3, col = 1, lty = 1, lwd = 1,     mark.time = TRUE, xscale = 1, firstx = 0, firsty = 1, xmax,     fun, conf.int = FALSE, ...) ","survival","recommended","1.6.2"
"match.ratetable","closure","function","TRUE","FALSE","(R, ratetable) ","survival","recommended","1.6.2"
"mdy.date","closure","function","TRUE","FALSE","(month, day, year, nineteen = TRUE, fillday = FALSE,     fillmonth = FALSE) ","survival","recommended","1.6.2"
"model.frame.coxph","closure","function","TRUE","FALSE","(formula, ...) ","survival","recommended","1.6.2"
"model.frame.survreg","closure","function","TRUE","FALSE","(formula, ...) ","survival","recommended","1.6.2"
"model.newframe","closure","function","TRUE","FALSE","(object, newdata, safe = FALSE, response = FALSE, ...) ","survival","recommended","1.6.2"
"plot.cox.zph","closure","function","TRUE","FALSE","(x, resid = TRUE, se = TRUE, df = 4, nsmo = 40, var,     ...) ","survival","recommended","1.6.2"
"plot.date","closure","function","TRUE","FALSE","(x, y, ..., axes, xaxt, xlab, ylab, xlim = range(x,     na.rm = TRUE), ylim = range(y, na.rm = TRUE)) ","survival","recommended","1.6.2"
"plot.survfit","closure","function","TRUE","FALSE","(x, conf.int, mark.time = TRUE, mark = 3, col = 1, lty = 1,     lwd = 1, cex = 1, log = FALSE, xscale = 1, yscale = 1, firstx = 0,     firsty = 1, xmax, ymin = 0, fun, xlab = """", ylab = """", xaxs = ""S"",     bty = NULL, legend.text = NULL, legend.pos = 0, legend.bty = ""n"",     main = NULL, ...) ","survival","recommended","1.6.2"
"points.survfit","closure","function","TRUE","FALSE","(x, ...) ","survival","recommended","1.6.2"
"predict.coxph","closure","function","TRUE","FALSE","(object, newdata, type = c(""lp"", ""risk"", ""expected"",     ""terms""), se.fit = FALSE, terms = names(object$assign), collapse,     safe = FALSE, ...) ","survival","recommended","1.6.2"
"predict.coxph.penal","closure","function","TRUE","FALSE","(object, newdata, type = c(""lp"", ""risk"", ""expected"",     ""terms""), se.fit = FALSE, terms = names(object$assign), collapse,     safe = FALSE, ...) ","survival","recommended","1.6.2"
"predict.survreg","closure","function","TRUE","FALSE","(object, newdata, type = c(""response"", ""link"", ""lp"",     ""linear"", ""terms"", ""quantile"", ""uquantile""), se.fit = FALSE,     terms = NULL, p = c(0.1, 0.9), ...) ","survival","recommended","1.6.2"
"predict.survreg.penal","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"print.Surv","closure","function","TRUE","FALSE","(x, quote = FALSE, ...) ","survival","recommended","1.6.2"
"print.cox.zph","closure","function","TRUE","FALSE","(x, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"print.coxph","closure","function","TRUE","FALSE","(x, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"print.coxph.null","closure","function","TRUE","FALSE","(x, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"print.coxph.penal","closure","function","TRUE","FALSE","(x, terms = FALSE, maxlabel = 25, digits = max(options()$digits -     4, 3), ...) ","survival","recommended","1.6.2"
"print.date","closure","function","TRUE","FALSE","(x, quote, prefix, ...) ","survival","recommended","1.6.2"
"print.ratetable","closure","function","TRUE","FALSE","(x, ...) ","survival","recommended","1.6.2"
"print.summary.survfit","closure","function","TRUE","FALSE","(x, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"print.summary.survreg","closure","function","TRUE","FALSE","(x, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"print.survdiff","closure","function","TRUE","FALSE","(x, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"print.survexp","closure","function","TRUE","FALSE","(x, scale = 1, digits = max(options()$digits - 4, 3),     naprint = FALSE, ...) ","survival","recommended","1.6.2"
"print.survfit","closure","function","TRUE","FALSE","(x, scale = 1, digits = max(options()$digits - 4, 3),     print.n = getOption(""survfit.print.n""), show.rmean = getOption(""survfit.print.mean""),     ...) ","survival","recommended","1.6.2"
"print.survreg","closure","function","TRUE","FALSE","(x, ...) ","survival","recommended","1.6.2"
"print.survreg.penal","closure","function","TRUE","FALSE","(x, terms = FALSE, maxlabel = 25, digits = max(options()$digits -     4, 3), ...) ","survival","recommended","1.6.2"
"pspline","closure","function","TRUE","FALSE","(x, df = 4, theta, nterm = 2.5 * df, degree = 3, eps = 0.1,     method, ...) ","survival","recommended","1.6.2"
"pyears","closure","function","TRUE","FALSE","(formula = formula(data), data = sys.frame(sys.parent()),     weights, subset, na.action, ratetable = survexp.us, scale = 365.25,     expect = c(""event"", ""pyears""), model = FALSE, x = FALSE,     y = FALSE) ","survival","recommended","1.6.2"
"ratetable","closure","function","TRUE","FALSE","(...) ","survival","recommended","1.6.2"
"residuals.coxph","closure","function","TRUE","FALSE","(object, type = c(""martingale"", ""deviance"", ""score"",     ""schoenfeld"", ""dfbeta"", ""dfbetas"", ""scaledsch"", ""partial""),     collapse = FALSE, weighted = FALSE, ...) ","survival","recommended","1.6.2"
"residuals.coxph.null","closure","function","TRUE","FALSE","(object, type = c(""martingale"", ""deviance"", ""score"",     ""schoenfeld""), collapse = FALSE, weighted = FALSE, ...) ","survival","recommended","1.6.2"
"residuals.coxph.penal","closure","function","TRUE","FALSE","(object, type = c(""martingale"", ""deviance"", ""score"",     ""schoenfeld"", ""dfbeta"", ""dfbetas"", ""scaledsch"", ""partial""),     collapse = FALSE, weighted = FALSE, ...) ","survival","recommended","1.6.2"
"residuals.survreg","closure","function","TRUE","FALSE","(object, type = c(""response"", ""deviance"", ""dfbeta"",     ""dfbetas"", ""working"", ""ldcase"", ""ldresp"", ""ldshape"", ""matrix""),     rsigma = TRUE, collapse = FALSE, weighted = FALSE, ...) ","survival","recommended","1.6.2"
"residuals.survreg.penal","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"ridge","closure","function","TRUE","FALSE","(..., theta, df = nvar/2, eps = 0.1, scale = TRUE) ","survival","recommended","1.6.2"
"strata","closure","function","TRUE","FALSE","(..., na.group = FALSE, shortlabel = FALSE) ","survival","recommended","1.6.2"
"summary.coxph","closure","function","TRUE","FALSE","(object, table = TRUE, coef = TRUE, conf.int = 0.95,     scale = 1, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"summary.coxph.penal","closure","function","TRUE","FALSE","(object, conf.int = 0.95, scale = 1, terms = FALSE,     maxlabel = 25, digits = max(options()$digits - 4, 3), ...) ","survival","recommended","1.6.2"
"summary.date","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"summary.ratetable","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","1.6.2"
"summary.survfit","closure","function","TRUE","FALSE","(object, times, censored = FALSE, scale = 1, ...) ","survival","recommended","1.6.2"
"summary.survreg","closure","function","TRUE","FALSE","(object, correlation = FALSE, ...) ","survival","recommended","1.6.2"
"survdiff","closure","function","TRUE","FALSE","(formula, data, subset, na.action, rho = 0) ","survival","recommended","1.6.2"
"survdiff.fit","closure","function","TRUE","FALSE","(y, x, strat, rho = 0) ","survival","recommended","1.6.2"
"survexp","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, times, cohort = TRUE, conditional = FALSE,     ratetable = survexp.us, scale = 1, npoints, se.fit, model = FALSE,     x = FALSE, y = FALSE) ","survival","recommended","1.6.2"
"survexp.cfit","closure","function","TRUE","FALSE","(x, y, death, individual, cox, se.fit, method) ","survival","recommended","1.6.2"
"survexp.fit","closure","function","TRUE","FALSE","(x, y, times, death, ratetable) ","survival","recommended","1.6.2"
"survfit","closure","function","TRUE","FALSE","(formula, data, weights, subset, na.action, ...) ","survival","recommended","1.6.2"
"survfit.coxph","closure","function","TRUE","FALSE","(object, newdata, se.fit = TRUE, conf.int = 0.95, individual = FALSE,     type, vartype, conf.type = c(""log"", ""log-log"", ""plain"", ""none""),     call = match.call()) ","survival","recommended","1.6.2"
"survfit.coxph.null","closure","function","TRUE","FALSE","(object, newdata, se.fit = TRUE, conf.int = 0.95, individual = FALSE,     type, vartype, conf.type = c(""log"", ""log-log"", ""plain"", ""none""),     ...) ","survival","recommended","1.6.2"
"survfit.km","closure","function","TRUE","FALSE","(x, y, casewt = rep(1, n), type = c(""kaplan-meier"",     ""fleming-harrington"", ""fh2""), error = c(""greenwood"", ""tsiatis""),     se.fit = TRUE, conf.int = 0.95, conf.type = c(""log"", ""log-log"",         ""plain"", ""none""), conf.lower = c(""usual"", ""peto"", ""modified""),     new.start) ","survival","recommended","1.6.2"
"survobrien","closure","function","TRUE","FALSE","(formula, data = sys.frame(sys.parent())) ","survival","recommended","1.6.2"
"survpenal.fit","closure","function","TRUE","FALSE","(x, y, weights, offset, init, controlvals, dist, scale = 0,     nstrat = 1, strata, pcols, pattr, assign, parms = NULL) ","survival","recommended","1.6.2"
"survreg","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, dist = ""weibull"", init = NULL, scale = 0,     control = survreg.control(), parms = NULL, model = FALSE,     x = FALSE, y = TRUE, ...) ","survival","recommended","1.6.2"
"survreg.control","closure","function","TRUE","FALSE","(maxiter = 30, rel.tolerance = 1e-05, failure = 1, toler.chol = 1e-10,     iter.max, debug = 0, outer.max = 10) ","survival","recommended","1.6.2"
"survreg.distributions","list","list","TRUE","FALSE","NA","survival","recommended","1.6.2"
"survreg.fit","closure","function","TRUE","FALSE","(x, y, weights, offset, init, controlvals, dist, scale = 0,     nstrat = 1, strata, parms = NULL) ","survival","recommended","1.6.2"
"survreg.old","closure","function","TRUE","FALSE","(formula, data = sys.frame(sys.parent()), ..., link = ""log"",     dist = c(""extreme"", ""logistic"", ""gaussian"", ""exponential"",         ""rayleigh"", ""weibull""), fixed = list()) ","survival","recommended","1.6.2"
"tcut","closure","function","TRUE","FALSE","(x, breaks, labels, scale = 1) ","survival","recommended","1.6.2"
"untangle.specials","closure","function","TRUE","FALSE","(tt, special, order = 1) ","survival","recommended","1.6.2"
".convertFilePathToAbsolute","closure","function","TRUE","FALSE","(path) ","tools","base","1.6.2"
".listFilesWithExts","closure","function","TRUE","FALSE","(dir, exts, path = TRUE) ","tools","base","1.6.2"
".loadPackageQuietly","closure","function","TRUE","FALSE","(package, lib.loc) ","tools","base","1.6.2"
".makeS3MethodsStopList","closure","function","TRUE","FALSE","(package) ","tools","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","tools","base","1.6.2"
".sourceAssignments","closure","function","TRUE","FALSE","(file, envir) ","tools","base","1.6.2"
"Rtangle","closure","function","TRUE","FALSE","() ","tools","base","1.6.2"
"RtangleFinish","closure","function","TRUE","FALSE","(object, error = FALSE) ","tools","base","1.6.2"
"RtangleRuncode","closure","function","TRUE","FALSE","(object, chunk, options) ","tools","base","1.6.2"
"RtangleSetup","closure","function","TRUE","FALSE","(file, syntax, output = NULL, annotate = TRUE, split = FALSE,     prefix = TRUE, quiet = FALSE) ","tools","base","1.6.2"
"RtangleWritedoc","closure","function","TRUE","FALSE","(object, chunk) ","tools","base","1.6.2"
"RweaveChunkPrefix","closure","function","TRUE","FALSE","(options) ","tools","base","1.6.2"
"RweaveEvalWithOpt","closure","function","TRUE","FALSE","(expr, options) ","tools","base","1.6.2"
"RweaveLatex","closure","function","TRUE","FALSE","() ","tools","base","1.6.2"
"RweaveLatexFinish","closure","function","TRUE","FALSE","(object, error = FALSE) ","tools","base","1.6.2"
"RweaveLatexOptions","closure","function","TRUE","FALSE","(options) ","tools","base","1.6.2"
"RweaveLatexRuncode","closure","function","TRUE","FALSE","(object, chunk, options) ","tools","base","1.6.2"
"RweaveLatexSetup","closure","function","TRUE","FALSE","(file, syntax, output = NULL, quiet = FALSE, debug = FALSE,     echo = TRUE, eval = TRUE, split = FALSE, stylepath = TRUE,     pdf = TRUE, eps = TRUE) ","tools","base","1.6.2"
"RweaveLatexWritedoc","closure","function","TRUE","FALSE","(object, chunk) ","tools","base","1.6.2"
"Stangle","closure","function","TRUE","FALSE","(file, driver = Rtangle(), syntax = getOption(""SweaveSyntax""),     ...) ","tools","base","1.6.2"
"Sweave","closure","function","TRUE","FALSE","(file, driver = RweaveLatex(), syntax = getOption(""SweaveSyntax""),     ...) ","tools","base","1.6.2"
"SweaveGetSyntax","closure","function","TRUE","FALSE","(file) ","tools","base","1.6.2"
"SweaveHooks","closure","function","TRUE","FALSE","(options, run = FALSE, envir = .GlobalEnv) ","tools","base","1.6.2"
"SweaveParseOptions","closure","function","TRUE","FALSE","(text, defaults = list(), check = NULL) ","tools","base","1.6.2"
"SweaveSyntConv","closure","function","TRUE","FALSE","(file, syntax, output = NULL) ","tools","base","1.6.2"
"SweaveSyntaxLatex","list","SweaveSyntax","TRUE","FALSE","NA","tools","base","1.6.2"
"SweaveSyntaxNoweb","list","SweaveSyntax","TRUE","FALSE","NA","tools","base","1.6.2"
"buildVignettes","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
"checkAssignFuns","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
"checkDocArgs","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
"checkDocStyle","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
"checkFF","closure","function","TRUE","FALSE","(package, dir, file, lib.loc = NULL, verbose = getOption(""verbose"")) ","tools","base","1.6.2"
"checkMethods","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
"checkTnF","closure","function","TRUE","FALSE","(package, dir, file, lib.loc = NULL) ","tools","base","1.6.2"
"checkVignettes","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL, tangle = TRUE, weave = TRUE,     workdir = c(""tmp"", ""src"", ""cur""), keepfiles = FALSE) ","tools","base","1.6.2"
"codoc","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL, use.values = FALSE, use.positions = TRUE,     ignore.generic.functions = FALSE, verbose = getOption(""verbose"")) ","tools","base","1.6.2"
"pkgVignettes","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
"print.checkAssignFuns","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.checkDocArgs","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.checkDocStyle","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.checkFF","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.checkMethods","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.checkTnF","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.checkVignettes","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.codoc","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"print.undoc","closure","function","TRUE","FALSE","(x, ...) ","tools","base","1.6.2"
"sQuote","closure","function","TRUE","FALSE","(s) ","tools","base","1.6.2"
"undoc","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","1.6.2"
".First.lib","closure","function","TRUE","FALSE","(lib, pkg) ","ts","base","1.6.2"
".packageName","character","character","TRUE","FALSE","NA","ts","base","1.6.2"
"ARMAacf","closure","function","TRUE","FALSE","(ar = numeric(0), ma = numeric(0), lag.max = r, pacf = FALSE) ","ts","base","1.6.2"
"ARMAtoMA","closure","function","TRUE","FALSE","(ar = numeric(0), ma = numeric(0), lag.max) ","ts","base","1.6.2"
"Box.test","closure","function","TRUE","FALSE","(x, lag = 1, type = c(""Box-Pierce"", ""Ljung-Box"")) ","ts","base","1.6.2"
"HoltWinters","closure","function","TRUE","FALSE","(x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c(""additive"",     ""multiplicative""), start.periods = 3, l.start = NULL, b.start = NULL,     s.start = NULL) ","ts","base","1.6.2"
"KalmanForecast","closure","function","TRUE","FALSE","(n.ahead = 10, mod) ","ts","base","1.6.2"
"KalmanLike","closure","function","TRUE","FALSE","(y, mod, nit = 0) ","ts","base","1.6.2"
"KalmanRun","closure","function","TRUE","FALSE","(y, mod, nit = 0) ","ts","base","1.6.2"
"KalmanSmooth","closure","function","TRUE","FALSE","(y, mod, nit = 0) ","ts","base","1.6.2"
"PP.test","closure","function","TRUE","FALSE","(x, lshort = TRUE) ","ts","base","1.6.2"
"StructTS","closure","function","TRUE","FALSE","(x, type = c(""level"", ""trend"", ""BSM""), init = NULL,     fixed = NULL, optim.control = NULL) ","ts","base","1.6.2"
"[.tskernel","closure","function","TRUE","FALSE","(k, i) ","ts","base","1.6.2"
"acf","closure","function","TRUE","FALSE","(x, lag.max = NULL, type = c(""correlation"", ""covariance"",     ""partial""), plot = TRUE, na.action = na.fail, demean = TRUE,     ...) ","ts","base","1.6.2"
"acf2AR","closure","function","TRUE","FALSE","(acf) ","ts","base","1.6.2"
"ar","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, method = c(""yule-walker"",     ""burg"", ""ols"", ""mle"", ""yw"", ), na.action = na.fail, series = deparse(substitute(x)),     ...) ","ts","base","1.6.2"
"ar.burg","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"ar.burg.default","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, var.method = 1, ...) ","ts","base","1.6.2"
"ar.burg.mts","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, var.method = 1, ...) ","ts","base","1.6.2"
"ar.mle","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, ...) ","ts","base","1.6.2"
"ar.ols","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, intercept = demean, series = NULL, ...) ","ts","base","1.6.2"
"ar.yw","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"ar.yw.default","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, ...) ","ts","base","1.6.2"
"ar.yw.mts","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, var.method = 1, ...) ","ts","base","1.6.2"
"arima","closure","function","TRUE","FALSE","(x, order = c(0, 0, 0), seasonal = list(order = c(0,     0, 0), period = NA), xreg = NULL, include.mean = TRUE, transform.pars = TRUE,     fixed = NULL, init = NULL, method = c(""CSS-ML"", ""ML"", ""CSS""),     n.cond, optim.control = list(), kappa = 1e+06) ","ts","base","1.6.2"
"arima.sim","closure","function","TRUE","FALSE","(model, n, rand.gen = rnorm, innov = rand.gen(n, ...),     n.start = NA, ...) ","ts","base","1.6.2"
"arima0","closure","function","TRUE","FALSE","(x, order = c(0, 0, 0), seasonal = list(order = c(0,     0, 0), period = NA), xreg = NULL, include.mean = TRUE, delta = 0.01,     transform.pars = TRUE, fixed = NULL, init = NULL, method = c(""ML"",         ""CSS""), n.cond, optim.control = list()) ","ts","base","1.6.2"
"arima0.diag","closure","function","TRUE","FALSE","(...) ","ts","base","1.6.2"
"bandwidth.kernel","closure","function","TRUE","FALSE","(k) ","ts","base","1.6.2"
"ccf","closure","function","TRUE","FALSE","(x, y, lag.max = NULL, type = c(""correlation"", ""covariance""),     plot = TRUE, na.action = na.fail, ...) ","ts","base","1.6.2"
"cpgram","closure","function","TRUE","FALSE","(ts, taper = 0.1, main = paste(""Series: "", deparse(substitute(ts))),     ci.col = ""blue"") ","ts","base","1.6.2"
"decompose","closure","function","TRUE","FALSE","(x, type = c(""additive"", ""multiplicative"")) ","ts","base","1.6.2"
"df.kernel","closure","function","TRUE","FALSE","(k) ","ts","base","1.6.2"
"diffinv","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"diffinv.default","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, xi = rep(0, lag * differences *     dim(as.matrix(x))[2]), ...) ","ts","base","1.6.2"
"diffinv.ts","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, xi = rep(0, lag * differences *     NCOL(x)), ...) ","ts","base","1.6.2"
"diffinv.vector","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, xi = rep(0, lag * differences),     ...) ","ts","base","1.6.2"
"embed","closure","function","TRUE","FALSE","(x, dimension = 1) ","ts","base","1.6.2"
"filter","closure","function","TRUE","FALSE","(x, filter, method = c(""convolution"", ""recursive""),     sides = 2, circular = FALSE, init = NULL) ","ts","base","1.6.2"
"is.tskernel","closure","function","TRUE","FALSE","(k) ","ts","base","1.6.2"
"kernapply","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"kernapply.default","closure","function","TRUE","FALSE","(x, k, circular = FALSE, ...) ","ts","base","1.6.2"
"kernapply.ts","closure","function","TRUE","FALSE","(x, k, circular = FALSE, ...) ","ts","base","1.6.2"
"kernapply.tskernel","closure","function","TRUE","FALSE","(k1, k2) ","ts","base","1.6.2"
"kernapply.vector","closure","function","TRUE","FALSE","(x, k, circular = FALSE, ...) ","ts","base","1.6.2"
"kernel","closure","function","TRUE","FALSE","(coef, m = length(coef) + 1, r, name = ""unknown"") ","ts","base","1.6.2"
"lag","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"lag.default","closure","function","TRUE","FALSE","(x, k = 1, ...) ","ts","base","1.6.2"
"lag.plot","closure","function","TRUE","FALSE","(x, lags = 1, layout = NULL, set.lags = 1:lags, main = NULL,     asp = 1, font.main = par(""font.main""), cex.main = par(""cex.main""),     diag = TRUE, diag.col = ""gray"", type = ""p"", oma = NULL, ask = NULL,     do.lines = n <= 150, labels = do.lines, ...) ","ts","base","1.6.2"
"makeARIMA","closure","function","TRUE","FALSE","(phi, theta, Delta, kappa = 1e+06) ","ts","base","1.6.2"
"monthplot","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"monthplot.StructTS","closure","function","TRUE","FALSE","(x, labels = NULL, ylab = choice, choice = ""sea"", ...) ","ts","base","1.6.2"
"monthplot.default","closure","function","TRUE","FALSE","(x, labels = 1:12, times = 1:length(x), phase = (times -     1)%%length(labels) + 1, base = mean, xlim = c(0.55, f + 0.45),     ylim = range(x, na.rm = TRUE), axes = TRUE, xlab = """", ylab = deparse(substitute(x)),     type = ""l"", box = TRUE, add = FALSE, ...) ","ts","base","1.6.2"
"monthplot.stl","closure","function","TRUE","FALSE","(x, labels = NULL, ylab = choice, choice = ""seasonal"",     ...) ","ts","base","1.6.2"
"monthplot.ts","closure","function","TRUE","FALSE","(x, labels = NULL, times = time(x), phase = cycle(x),     ylab = deparse(substitute(x)), ...) ","ts","base","1.6.2"
"na.contiguous","closure","function","TRUE","FALSE","(frame) ","ts","base","1.6.2"
"pacf","closure","function","TRUE","FALSE","(x, lag.max, plot, na.action, ...) ","ts","base","1.6.2"
"pacf.default","closure","function","TRUE","FALSE","(x, lag.max = NULL, plot = TRUE, na.action = na.fail,     ...) ","ts","base","1.6.2"
"pacf.mts","closure","function","TRUE","FALSE","(x, lag.max = NULL, plot = TRUE, na.action = na.fail,     ...) ","ts","base","1.6.2"
"plot.HoltWinters","closure","function","TRUE","FALSE","(x, predicted.values = NA, intervals = TRUE, separator = TRUE,     col = 1, col.predicted = 2, col.intervals = 4, col.separator = 1,     lty = 1, lty.predicted = 1, lty.intervals = 1, lty.separator = 3,     ylab = ""Observed / Fitted"", main = ""Holt-Winters filtering"",     ...) ","ts","base","1.6.2"
"plot.acf","closure","function","TRUE","FALSE","(x, ci = 0.95, type = ""h"", xlab = ""Lag"", ylab = NULL,     ylim = NULL, main = NULL, ci.col = ""blue"", ci.type = c(""white"",         ""ma""), max.mfrow = 6, ask = Npgs > 1 && dev.interactive(),     mar = if (nser > 2) c(3, 2, 2, 0.8) else par(""mar""), oma = if (nser >         2) c(1, 1.2, 1, 1) else par(""oma""), mgp = if (nser >         2) c(1.5, 0.6, 0) else par(""mgp""), xpd = par(""xpd""),     cex.main = if (nser > 2) 1 else par(""cex.main""), verbose = getOption(""verbose""),     ...) ","ts","base","1.6.2"
"plot.decomposed.ts","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"plot.spec","closure","function","TRUE","FALSE","(x, add = FALSE, ci = 0.95, log = c(""yes"", ""dB"", ""no""),     xlab = ""frequency"", ylab = NULL, type = ""l"", ci.col = ""blue"",     main = NULL, sub = NULL, plot.type = c(""marginal"", ""coherency"",         ""phase""), ...) ","ts","base","1.6.2"
"plot.spec.coherency","closure","function","TRUE","FALSE","(x, ci = 0.95, xlab = ""frequency"", ylab = ""squared coherency"",     ylim = c(0, 1), type = ""l"", main = NULL, ci.lty = 3, ci.col = ""blue"",     ...) ","ts","base","1.6.2"
"plot.spec.phase","closure","function","TRUE","FALSE","(x, ci = 0.95, xlab = ""frequency"", ylab = ""phase"", ylim = c(-pi,     pi), type = ""l"", main = NULL, ci.lty = 3, ci.col = ""blue"",     ...) ","ts","base","1.6.2"
"plot.stl","closure","function","TRUE","FALSE","(x, labels = colnames(X), set.pars = list(mar = c(0,     6, 0, 6), oma = c(6, 0, 4, 0), tck = -0.01, mfrow = c(nplot,     1)), main = NULL, range.bars = TRUE, ...) ","ts","base","1.6.2"
"plot.tskernel","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"predict.Arima","closure","function","TRUE","FALSE","(object, n.ahead = 1, newxreg = NULL, se.fit = TRUE,     ...) ","ts","base","1.6.2"
"predict.HoltWinters","closure","function","TRUE","FALSE","(object, n.ahead = 1, prediction.interval = FALSE, quantile = qnorm(0.975),     ...) ","ts","base","1.6.2"
"predict.StructTS","closure","function","TRUE","FALSE","(object, n.ahead = 1, se.fit = TRUE, ...) ","ts","base","1.6.2"
"predict.ar","closure","function","TRUE","FALSE","(object, newdata, n.ahead = 1, se.fit = TRUE, ...) ","ts","base","1.6.2"
"predict.arima0","closure","function","TRUE","FALSE","(object, n.ahead = 1, newxreg = NULL, se.fit = TRUE,     ...) ","ts","base","1.6.2"
"print.Arima","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), se = TRUE,     ...) ","ts","base","1.6.2"
"print.HoltWinters","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"print.StructTS","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","ts","base","1.6.2"
"print.ar","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","ts","base","1.6.2"
"print.arima0","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), se = TRUE,     ...) ","ts","base","1.6.2"
"print.stl","closure","function","TRUE","FALSE","(x, ...) ","ts","base","1.6.2"
"print.tskernel","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","ts","base","1.6.2"
"residuals.HoltWinters","closure","function","TRUE","FALSE","(object, ...) ","ts","base","1.6.2"
"spec.ar","closure","function","TRUE","FALSE","(x, n.freq, order = NULL, plot = TRUE, na.action = na.fail,     method = ""yule-walker"", ...) ","ts","base","1.6.2"
"spec.pgram","closure","function","TRUE","FALSE","(x, spans = NULL, kernel = NULL, taper = 0.1, pad = 0,     fast = TRUE, demean = FALSE, detrend = TRUE, plot = TRUE,     na.action = na.fail, ...) ","ts","base","1.6.2"
"spec.taper","closure","function","TRUE","FALSE","(x, p = 0.1) ","ts","base","1.6.2"
"spectrum","closure","function","TRUE","FALSE","(..., method = c(""pgram"", ""ar"")) ","ts","base","1.6.2"
"stl","closure","function","TRUE","FALSE","(x, s.window, s.degree = 0, t.window = NULL, t.degree = 1,     l.window = nextodd(period), l.degree = t.degree, s.jump = ceiling(s.window/10),     t.jump = ceiling(t.window/10), l.jump = ceiling(l.window/10),     robust = FALSE, inner = if (robust) 1 else 2, outer = if (robust) 15 else 0,     na.action = na.fail) ","ts","base","1.6.2"
"summary.stl","closure","function","TRUE","FALSE","(object, digits = getOption(""digits""), ...) ","ts","base","1.6.2"
"toeplitz","closure","function","TRUE","FALSE","(x) ","ts","base","1.6.2"
"ts.intersect","closure","function","TRUE","FALSE","(..., dframe = FALSE) ","ts","base","1.6.2"
"ts.plot","closure","function","TRUE","FALSE","(..., gpars = list()) ","ts","base","1.6.2"
"ts.union","closure","function","TRUE","FALSE","(..., dframe = FALSE) ","ts","base","1.6.2"
"tsSmooth","closure","function","TRUE","FALSE","(object, ...) ","ts","base","1.6.2"
"tsSmooth.StructTS","closure","function","TRUE","FALSE","(object, ...) ","ts","base","1.6.2"
"tsdiag","closure","function","TRUE","FALSE","(object, gof.lag, ...) ","ts","base","1.6.2"
"tsdiag.Arima","closure","function","TRUE","FALSE","(object, gof.lag = 10, ...) ","ts","base","1.6.2"
"tsdiag.StructTS","closure","function","TRUE","FALSE","(object, gof.lag = 10, ...) ","ts","base","1.6.2"
"tsdiag.arima0","closure","function","TRUE","FALSE","(object, gof.lag = 10, ...) ","ts","base","1.6.2"
