"name","type","class","exported","generic","args","package","Rversion"
"!","builtin","","TRUE","NA","","base","1.1.1"
"!=","builtin","","TRUE","NA","","base","1.1.1"
"$","special","","TRUE","NA","","base","1.1.1"
"$<-","special","","TRUE","NA","","base","1.1.1"
"%%","builtin","","TRUE","NA","","base","1.1.1"
"%*%","builtin","","TRUE","NA","","base","1.1.1"
"%/%","builtin","","TRUE","NA","","base","1.1.1"
"%in%","closure","","TRUE","FALSE","(x, table) ","base","1.1.1"
"%o%","closure","","TRUE","FALSE","(X, Y, FUN = ""*"", ...) ","base","1.1.1"
"%x%","closure","","TRUE","FALSE","(X, Y, FUN = ""*"", make.dimnames = FALSE, ...) ","base","1.1.1"
"&","builtin","","TRUE","NA","","base","1.1.1"
"&&","special","","TRUE","NA","","base","1.1.1"
"(","builtin","","TRUE","NA","","base","1.1.1"
"*","builtin","","TRUE","NA","","base","1.1.1"
"+","builtin","","TRUE","NA","","base","1.1.1"
"-","builtin","","TRUE","NA","","base","1.1.1"
".Alias","builtin","","TRUE","NA","","base","1.1.1"
".AutoloadEnv","environment","","TRUE","FALSE","NA","base","1.1.1"
".C","builtin","","TRUE","NA","","base","1.1.1"
".Call","builtin","","TRUE","NA","","base","1.1.1"
".Defunct","closure","","TRUE","FALSE","() ","base","1.1.1"
".Deprecated","closure","","TRUE","FALSE","(new) ","base","1.1.1"
".Device","character","","TRUE","FALSE","NA","base","1.1.1"
".Devices","pairlist","","TRUE","FALSE","NA","base","1.1.1"
".External","builtin","","TRUE","NA","","base","1.1.1"
".Fortran","builtin","","TRUE","NA","","base","1.1.1"
".GlobalEnv","environment","","TRUE","FALSE","NA","base","1.1.1"
".Internal","special","","TRUE","NA","","base","1.1.1"
".Last.value","character","","TRUE","FALSE","NA","base","1.1.1"
".Library","character","","TRUE","FALSE","NA","base","1.1.1"
".Machine","list","","TRUE","FALSE","NA","base","1.1.1"
".NotYetImplemented","closure","","TRUE","FALSE","() ","base","1.1.1"
".NotYetUsed","closure","","TRUE","FALSE","(x) ","base","1.1.1"
".Options","pairlist","","TRUE","FALSE","NA","base","1.1.1"
".Pars","character","","TRUE","FALSE","NA","base","1.1.1"
".Pars.readonly","character","","TRUE","FALSE","NA","base","1.1.1"
".Platform","list","","TRUE","FALSE","NA","base","1.1.1"
".PostScript.Options","list","","TRUE","FALSE","NA","base","1.1.1"
".Primitive","builtin","","TRUE","NA","","base","1.1.1"
".lib.loc","character","","TRUE","FALSE","NA","base","1.1.1"
".packages","closure","","TRUE","FALSE","(all.available = FALSE, lib.loc = .lib.loc) ","base","1.1.1"
".path.package","closure","","TRUE","FALSE","(package = .packages(), quiet = FALSE) ","base","1.1.1"
"/","builtin","","TRUE","NA","","base","1.1.1"
":","builtin","","TRUE","NA","","base","1.1.1"
"<","builtin","","TRUE","NA","","base","1.1.1"
"<-","special","","TRUE","NA","","base","1.1.1"
"<<-","special","","TRUE","NA","","base","1.1.1"
"<=","builtin","","TRUE","NA","","base","1.1.1"
"==","builtin","","TRUE","NA","","base","1.1.1"
">","builtin","","TRUE","NA","","base","1.1.1"
">=","builtin","","TRUE","NA","","base","1.1.1"
"Arg","builtin","","TRUE","NA","","base","1.1.1"
"C","closure","","TRUE","FALSE","(object, contr, how.many, ...) ","base","1.1.1"
"CRAN.packages","closure","","TRUE","FALSE","(CRAN = getOption(""CRAN""), method = ""auto"", contriburl = contrib.url(CRAN)) ","base","1.1.1"
"Conj","builtin","","TRUE","NA","","base","1.1.1"
"D","closure","","TRUE","FALSE","(expr, namevec) ","base","1.1.1"
"F","logical","","TRUE","FALSE","NA","base","1.1.1"
"GNOME","closure","","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","1.1.1"
"GTK","closure","","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","1.1.1"
"Gamma","closure","","TRUE","FALSE","(link = ""inverse"") ","base","1.1.1"
"I","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"IQR","closure","","TRUE","FALSE","(x, na.rm = FALSE) ","base","1.1.1"
"Im","builtin","","TRUE","NA","","base","1.1.1"
"LETTERS","character","","TRUE","FALSE","NA","base","1.1.1"
"Machine","closure","","TRUE","FALSE","() ","base","1.1.1"
"Math.data.frame","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"Math.factor","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"Mod","builtin","","TRUE","NA","","base","1.1.1"
"NCOL","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"NROW","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"NextMethod","closure","","TRUE","FALSE","(generic = NULL, object = NULL, ...) ","base","1.1.1"
"Ops.data.frame","closure","","TRUE","FALSE","(e1, e2 = NULL) ","base","1.1.1"
"Ops.factor","closure","","TRUE","FALSE","(e1, e2) ","base","1.1.1"
"Ops.ordered","closure","","TRUE","FALSE","(e1, e2) ","base","1.1.1"
"Platform","closure","","TRUE","FALSE","() ","base","1.1.1"
"R.Version","closure","","TRUE","FALSE","() ","base","1.1.1"
"R.home","closure","","TRUE","FALSE","() ","base","1.1.1"
"R.version","list","simple.list","TRUE","FALSE","NA","base","1.1.1"
"R.version.string","character","","TRUE","FALSE","NA","base","1.1.1"
"RNGkind","closure","","TRUE","FALSE","(kind = NULL, normal.kind = NULL) ","base","1.1.1"
"Re","builtin","","TRUE","NA","","base","1.1.1"
"Recall","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"Summary.data.frame","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"Summary.factor","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"T","logical","","TRUE","FALSE","NA","base","1.1.1"
"UseMethod","special","","TRUE","NA","","base","1.1.1"
"Version","closure","","TRUE","FALSE","() ","base","1.1.1"
"X11","closure","","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12,     gamma = 1, colortype = getOption(""X11colortype""), maxcubesize = 256) ","base","1.1.1"
"[","special","","TRUE","NA","","base","1.1.1"
"[.data.frame","closure","","TRUE","FALSE","(x, i, j, drop = if (missing(i)) TRUE else length(cols) ==     1) ","base","1.1.1"
"[.factor","closure","","TRUE","FALSE","(x, i, drop = FALSE) ","base","1.1.1"
"[.formula","closure","","TRUE","FALSE","(x, i) ","base","1.1.1"
"[.noquote","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"[.ts","closure","","TRUE","FALSE","(x, i, j, drop = TRUE) ","base","1.1.1"
"[<-","special","","TRUE","NA","","base","1.1.1"
"[<-.data.frame","closure","","TRUE","FALSE","(x, i, j, value) ","base","1.1.1"
"[<-.factor","closure","","TRUE","FALSE","(x, i, value) ","base","1.1.1"
"[[","special","","TRUE","NA","","base","1.1.1"
"[[.data.frame","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"[[<-","special","","TRUE","NA","","base","1.1.1"
"[[<-.data.frame","closure","","TRUE","FALSE","(x, i, j, value) ","base","1.1.1"
"^","builtin","","TRUE","NA","","base","1.1.1"
"abbreviate","closure","","TRUE","FALSE","(names.arg, minlength = 4, use.classes = TRUE, dot = FALSE) ","base","1.1.1"
"abline","closure","","TRUE","FALSE","(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,     coef = NULL, untf = FALSE, col = par(""col""), lty = par(""lty""),     lwd = NULL, ...) ","base","1.1.1"
"abs","builtin","","TRUE","NA","","base","1.1.1"
"acos","builtin","","TRUE","NA","","base","1.1.1"
"acosh","builtin","","TRUE","NA","","base","1.1.1"
"add.scope","closure","","TRUE","FALSE","(terms1, terms2) ","base","1.1.1"
"add1","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"add1.default","closure","","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq""),     k = 2, trace = FALSE, ...) ","base","1.1.1"
"add1.glm","closure","","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), x = NULL, k = 2, ...) ","base","1.1.1"
"add1.lm","closure","","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), x = NULL, k = 2, ...) ","base","1.1.1"
"add1.mlm","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"aggregate","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"aggregate.data.frame","closure","","TRUE","FALSE","(x, by, FUN, ...) ","base","1.1.1"
"aggregate.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"aggregate.ts","closure","","TRUE","FALSE","(x, nfrequency = 1, FUN = sum, ndeltat = 1, ts.eps = getOption(""ts.eps"")) ","base","1.1.1"
"alias","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"alias.formula","closure","","TRUE","FALSE","(object, data, ...) ","base","1.1.1"
"alias.lm","closure","","TRUE","FALSE","(object, complete = TRUE, partial = FALSE, partial.pattern = FALSE,     ...) ","base","1.1.1"
"alist","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"all","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"all.equal","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.character","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.default","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.factor","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.formula","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.language","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.list","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"all.equal.numeric","closure","","TRUE","FALSE","(target, current, tolerance = .Machine$double.eps^0.5,     scale = NULL) ","base","1.1.1"
"all.names","closure","","TRUE","FALSE","(expr, functions = TRUE, max.names = 200, unique = FALSE) ","base","1.1.1"
"all.vars","closure","","TRUE","FALSE","(expr, functions = FALSE, max.names = 200, unique = TRUE) ","base","1.1.1"
"anova","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"anova.glm","closure","","TRUE","FALSE","(object, ..., dispersion = NULL, test = NULL) ","base","1.1.1"
"anova.glm.null","closure","","TRUE","FALSE","(object, ..., test = NULL, na.action = na.omit) ","base","1.1.1"
"anova.glmlist","closure","","TRUE","FALSE","(object, dispersion = NULL, test = NULL, ...) ","base","1.1.1"
"anova.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"anova.lm.null","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"anova.mlm","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"anovalist.lm","closure","","TRUE","FALSE","(object, ..., test = NULL) ","base","1.1.1"
"any","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"aov","closure","","TRUE","FALSE","(formula, data = NULL, projections = FALSE, qr = TRUE,     contrasts = NULL, ...) ","base","1.1.1"
"aperm","closure","","TRUE","FALSE","(a, perm, resize = TRUE) ","base","1.1.1"
"append","closure","","TRUE","FALSE","(x, values, after = length(x)) ","base","1.1.1"
"apply","closure","","TRUE","FALSE","(X, MARGIN, FUN, ...) ","base","1.1.1"
"approx","closure","","TRUE","FALSE","(x, y = NULL, xout, method = ""linear"", n = 50, yleft,     yright, rule = 1, f = 0, ties = mean) ","base","1.1.1"
"approxfun","closure","","TRUE","FALSE","(x, y = NULL, method = ""linear"", yleft, yright, rule = 1,     f = 0, ties = mean) ","base","1.1.1"
"apropos","closure","","TRUE","FALSE","(what, where = FALSE, mode = ""any"") ","base","1.1.1"
"args","closure","","TRUE","FALSE","(name) ","base","1.1.1"
"array","closure","","TRUE","FALSE","(data = NA, dim = length(data), dimnames = NULL) ","base","1.1.1"
"arrows","closure","","TRUE","FALSE","(x0, y0, x1, y1, length = 0.25, angle = 30, code = 2,     col = par(""fg""), lty = NULL, lwd = par(""lwd""), xpd = FALSE) ","base","1.1.1"
"as.array","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.call","builtin","","TRUE","NA","","base","1.1.1"
"as.character","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.character.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.complex","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.complex.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.data.frame","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.AsIs","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.character","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.complex","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.data.frame","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.default","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.factor","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.integer","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.list","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.logical","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.matrix","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.model.matrix","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.numeric","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.ordered","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.ts","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.data.frame.vector","closure","","TRUE","FALSE","(x, row.names = NULL, optional = FALSE) ","base","1.1.1"
"as.double","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.double.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.expression","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.expression.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.factor","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.formula","closure","","TRUE","FALSE","(object) ","base","1.1.1"
"as.function","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.function.default","closure","","TRUE","FALSE","(l, envir = sys.frame(sys.parent())) ","base","1.1.1"
"as.integer","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.integer.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.list","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.list.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.list.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.logical","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.logical.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.matrix","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.matrix.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.matrix.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.matrix.noquote","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.name","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.null","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.null.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.numeric","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.ordered","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.pairlist","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.qr","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.real","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.single","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"as.single.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.symbol","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.ts","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"as.vector","closure","","TRUE","FALSE","(x, mode = ""any"") ","base","1.1.1"
"as.vector.factor","closure","","TRUE","FALSE","(x, type = ""any"") ","base","1.1.1"
"asin","builtin","","TRUE","NA","","base","1.1.1"
"asinh","builtin","","TRUE","NA","","base","1.1.1"
"assign","closure","","TRUE","FALSE","(x, value, pos = -1, envir = pos.to.env(pos), inherits = FALSE,     immediate = TRUE) ","base","1.1.1"
"atan","builtin","","TRUE","NA","","base","1.1.1"
"atan2","closure","","TRUE","FALSE","(y, x) ","base","1.1.1"
"atanh","builtin","","TRUE","NA","","base","1.1.1"
"attach","closure","","TRUE","FALSE","(what, pos = 2, name = deparse(substitute(what))) ","base","1.1.1"
"attr","closure","","TRUE","FALSE","(x, which) ","base","1.1.1"
"attr.all.equal","closure","","TRUE","FALSE","(target, current, ...) ","base","1.1.1"
"attr<-","special","","TRUE","NA","","base","1.1.1"
"attributes","builtin","","TRUE","NA","","base","1.1.1"
"attributes<-","builtin","","TRUE","NA","","base","1.1.1"
"autoload","closure","","TRUE","FALSE","(name, file) ","base","1.1.1"
"autoloader","closure","","TRUE","FALSE","(name, file) ","base","1.1.1"
"ave","closure","","TRUE","FALSE","(x, ..., FUN = mean) ","base","1.1.1"
"axis","closure","","TRUE","FALSE","(side, at = NULL, labels = TRUE, tick = TRUE, line = 0,     pos = NA, outer = FALSE, ...) ","base","1.1.1"
"backsolve","closure","","TRUE","FALSE","(r, x, k = ncol(r), upper.tri = TRUE, transpose = FALSE) ","base","1.1.1"
"barplot","closure","","TRUE","FALSE","(height, ...) ","base","1.1.1"
"barplot.default","closure","","TRUE","FALSE","(height, width = 1, space = NULL, names.arg = NULL,     legend.text = NULL, beside = FALSE, horiz = FALSE, col = heat.colors(NR),     border = par(""fg""), main = NULL, sub = NULL, xlab = NULL,     ylab = NULL, xlim = NULL, ylim = NULL, axes = TRUE, axisnames = TRUE,     inside = TRUE, plot = TRUE, ...) ","base","1.1.1"
"basename","closure","","TRUE","FALSE","(path) ","base","1.1.1"
"besselI","closure","","TRUE","FALSE","(x, nu, expon.scaled = FALSE) ","base","1.1.1"
"besselJ","closure","","TRUE","FALSE","(x, nu) ","base","1.1.1"
"besselK","closure","","TRUE","FALSE","(x, nu, expon.scaled = FALSE) ","base","1.1.1"
"besselY","closure","","TRUE","FALSE","(x, nu) ","base","1.1.1"
"beta","closure","","TRUE","FALSE","(a, b) ","base","1.1.1"
"binomial","closure","","TRUE","FALSE","(link = ""logit"") ","base","1.1.1"
"bitmap","closure","","TRUE","FALSE","(file, type = ""png256"", height = 6, width = 6, res = 72,     pointsize, ...) ","base","1.1.1"
"body","closure","","TRUE","FALSE","(fun = sys.function(sys.parent())) ","base","1.1.1"
"body<-","closure","","TRUE","FALSE","(f, value, envir = sys.frame(sys.parent())) ","base","1.1.1"
"box","closure","","TRUE","FALSE","(which = ""plot"", lty = ""solid"", ...) ","base","1.1.1"
"boxplot","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"boxplot.default","closure","","TRUE","FALSE","(x, ..., range = 1.5, width = NULL, varwidth = FALSE,     notch = FALSE, names, boxwex = 0.8, data = sys.frame(sys.parent()),     plot = TRUE, border = par(""fg""), col = NULL, log = """", pars = NULL) ","base","1.1.1"
"boxplot.formula","closure","","TRUE","FALSE","(formula, data = NULL, subset, na.action, ...) ","base","1.1.1"
"boxplot.stats","closure","","TRUE","FALSE","(x, coef = 1.5, do.conf = TRUE, do.out = TRUE) ","base","1.1.1"
"break","special","","TRUE","NA","","base","1.1.1"
"browser","special","","TRUE","NA","","base","1.1.1"
"bug.report","closure","","TRUE","FALSE","(subject = """", ccaddress = getenv(""USER""), method = getOption(""mailer""),     address = ""r-bugs@biostat.ku.dk"", file = ""R.bug.report"") ","base","1.1.1"
"builtins","closure","","TRUE","FALSE","(internal = FALSE) ","base","1.1.1"
"bxp","closure","","TRUE","FALSE","(z, notch = FALSE, width = NULL, varwidth = FALSE, notch.frac = 0.5,     boxwex = 0.8, border = par(""fg""), col = NULL, log = """", pars = NULL,     ...) ","base","1.1.1"
"by","closure","","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","1.1.1"
"by.data.frame","closure","","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","1.1.1"
"by.default","closure","","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","1.1.1"
"c","special","","TRUE","NA","","base","1.1.1"
"call","special","","TRUE","NA","","base","1.1.1"
"case.names","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"case.names.default","closure","","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""row"") ","base","1.1.1"
"case.names.lm","closure","","TRUE","FALSE","(obj, full = FALSE) ","base","1.1.1"
"cat","closure","","TRUE","FALSE","(..., file = """", sep = "" "", fill = FALSE, labels = NULL,     append = FALSE) ","base","1.1.1"
"category","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"cbind","closure","","TRUE","FALSE","(..., deparse.level = 1) ","base","1.1.1"
"cbind.data.frame","closure","","TRUE","FALSE","(..., deparse.level = 1) ","base","1.1.1"
"ceiling","builtin","","TRUE","NA","","base","1.1.1"
"char.expand","closure","","TRUE","FALSE","(input, target, nomatch = stop(""no match"")) ","base","1.1.1"
"character","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"charmatch","closure","","TRUE","FALSE","(x, table, nomatch = NA) ","base","1.1.1"
"chartr","closure","","TRUE","FALSE","(old, new, x) ","base","1.1.1"
"check.options","closure","","TRUE","FALSE","(new, name.opt, reset = FALSE, assign.opt = FALSE, envir = .GlobalEnv,     check.attributes = c(""mode"", ""length""), override.check = FALSE) ","base","1.1.1"
"chol","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"chol2inv","closure","","TRUE","FALSE","(x, size = ncol(x)) ","base","1.1.1"
"choose","closure","","TRUE","FALSE","(n, k) ","base","1.1.1"
"chull","closure","","TRUE","FALSE","(x, y = NULL) ","base","1.1.1"
"class","builtin","","TRUE","NA","","base","1.1.1"
"class<-","builtin","","TRUE","NA","","base","1.1.1"
"close.screen","closure","","TRUE","FALSE","(n, all.screens = FALSE) ","base","1.1.1"
"close.socket","closure","","TRUE","FALSE","(socket) ","base","1.1.1"
"cm","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"cm.colors","closure","","TRUE","FALSE","(n) ","base","1.1.1"
"co.intervals","closure","","TRUE","FALSE","(x, number = 6, overlap = 0.5) ","base","1.1.1"
"codes","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"codes.factor","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"codes.ordered","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"codes<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"coef","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"coef.aov","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"coef.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"coef.glm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"coef.listof","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"coef.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"coefficients","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"col","closure","","TRUE","FALSE","(x, as.factor = FALSE) ","base","1.1.1"
"colnames","closure","","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""col"") ","base","1.1.1"
"colnames<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"colors","closure","","TRUE","FALSE","() ","base","1.1.1"
"colours","closure","","TRUE","FALSE","() ","base","1.1.1"
"commandArgs","closure","","TRUE","FALSE","() ","base","1.1.1"
"comment","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"comment<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"complete.cases","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"complex","closure","","TRUE","FALSE","(length.out = 0, real = numeric(), imaginary = numeric(),     modulus = 1, argument = 0) ","base","1.1.1"
"conflicts","closure","","TRUE","FALSE","(where = search(), detail = FALSE) ","base","1.1.1"
"contour","closure","","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, nlevels = 10, levels = pretty(zlim, nlevels), labels = NULL,     xlim = range(x, finite = TRUE), ylim = range(y, finite = TRUE),     zlim = range(z, finite = TRUE), labcex = 0.4, drawlabels = TRUE,     method = ""flattest"", vfont = NULL, col = par(""fg""), lty = par(""lty""),     lwd = par(""lwd""), add = FALSE, ...) ","base","1.1.1"
"contr.helmert","closure","","TRUE","FALSE","(n, contrasts = TRUE) ","base","1.1.1"
"contr.poly","closure","","TRUE","FALSE","(n, contrasts = TRUE) ","base","1.1.1"
"contr.sum","closure","","TRUE","FALSE","(n, contrasts = TRUE) ","base","1.1.1"
"contr.treatment","closure","","TRUE","FALSE","(n, base = 1, contrasts = TRUE) ","base","1.1.1"
"contrasts","closure","","TRUE","FALSE","(x, contrasts = TRUE) ","base","1.1.1"
"contrasts<-","closure","","TRUE","FALSE","(x, how.many, value) ","base","1.1.1"
"contrib.url","closure","","TRUE","FALSE","(CRAN) ","base","1.1.1"
"convolve","closure","","TRUE","FALSE","(x, y, conj = TRUE, type = c(""circular"", ""open"", ""filter"")) ","base","1.1.1"
"cooks.distance","closure","","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj),     sd = sqrt(deviance(lm.obj)/df.residual(lm.obj))) ","base","1.1.1"
"coplot","closure","","TRUE","FALSE","(formula, data, given.values, panel = points, rows,     columns, show.given = TRUE, col = par(""fg""), pch = par(""pch""),     xlab = c(x.name, paste(""Given :"", a.name)), ylab = c(y.name,         paste(""Given :"", b.name)), subscripts = FALSE, xlim,     ylim, number = 6, overlap = 0.5, ...) ","base","1.1.1"
"cor","closure","","TRUE","FALSE","(x, y = NULL, use = ""all.obs"") ","base","1.1.1"
"cos","builtin","","TRUE","NA","","base","1.1.1"
"cosh","builtin","","TRUE","NA","","base","1.1.1"
"count.fields","closure","","TRUE","FALSE","(file, sep = """", quote = ""\""'"", skip = 0) ","base","1.1.1"
"cov","closure","","TRUE","FALSE","(x, y = NULL, use = ""all.obs"") ","base","1.1.1"
"cov.wt","closure","","TRUE","FALSE","(x, wt = rep(1/nrow(x), nrow(x)), cor = FALSE, center = TRUE) ","base","1.1.1"
"covratio","closure","","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj)) ","base","1.1.1"
"crossprod","closure","","TRUE","FALSE","(x, y = x) ","base","1.1.1"
"cummax","builtin","","TRUE","NA","","base","1.1.1"
"cummin","builtin","","TRUE","NA","","base","1.1.1"
"cumprod","builtin","","TRUE","NA","","base","1.1.1"
"cumsum","builtin","","TRUE","NA","","base","1.1.1"
"curve","closure","","TRUE","FALSE","(expr, from, to, n = 101, add = FALSE, type = ""l"", ylab = NULL,     log = NULL, ...) ","base","1.1.1"
"cut","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"cut.default","closure","","TRUE","FALSE","(x, breaks, labels = NULL, include.lowest = FALSE, right = TRUE,     dig.lab = 3) ","base","1.1.1"
"cycle","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"cycle.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"cycle.ts","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"data","closure","","TRUE","FALSE","(..., list = character(0), package = .packages(), lib.loc = .lib.loc,     verbose = getOption(""verbose"")) ","base","1.1.1"
"data.class","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"data.entry","closure","","TRUE","FALSE","(..., Modes = NULL, Names = NULL) ","base","1.1.1"
"data.frame","closure","","TRUE","FALSE","(..., row.names = NULL, check.rows = FALSE, check.names = TRUE) ","base","1.1.1"
"data.matrix","closure","","TRUE","FALSE","(frame) ","base","1.1.1"
"dataentry","closure","","TRUE","FALSE","(data, modes) ","base","1.1.1"
"date","closure","","TRUE","FALSE","() ","base","1.1.1"
"dbeta","closure","","TRUE","FALSE","(x, shape1, shape2, ncp = 0, log = FALSE) ","base","1.1.1"
"dbinom","closure","","TRUE","FALSE","(x, size, prob, log = FALSE) ","base","1.1.1"
"dcauchy","closure","","TRUE","FALSE","(x, location = 0, scale = 1, log = FALSE) ","base","1.1.1"
"dchisq","closure","","TRUE","FALSE","(x, df, ncp = 0, log = FALSE) ","base","1.1.1"
"de","closure","","TRUE","FALSE","(..., Modes = list(), Names = NULL) ","base","1.1.1"
"de.ncols","closure","","TRUE","FALSE","(inlist) ","base","1.1.1"
"de.restore","closure","","TRUE","FALSE","(inlist, ncols, coltypes, argnames, args) ","base","1.1.1"
"de.setup","closure","","TRUE","FALSE","(ilist, list.names, incols) ","base","1.1.1"
"debug","builtin","","TRUE","NA","","base","1.1.1"
"debugger","closure","","TRUE","FALSE","(dump = last.dump) ","base","1.1.1"
"delay","closure","","TRUE","FALSE","(x, env = .GlobalEnv) ","base","1.1.1"
"delete.response","closure","","TRUE","FALSE","(termobj) ","base","1.1.1"
"deltat","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"deltat.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"demo","closure","","TRUE","FALSE","(topic, device = getOption(""device"")) ","base","1.1.1"
"density","closure","","TRUE","FALSE","(x, bw, adjust = 1, kernel = c(""gaussian"", ""epanechnikov"",     ""rectangular"", ""triangular"", ""biweight"", ""cosine"", ""optcosine""),     window = kernel, width, give.Rkern = FALSE, n = 512, from,     to, cut = 3, na.rm = FALSE) ","base","1.1.1"
"deparse","closure","","TRUE","FALSE","(expr, width.cutoff = 60) ","base","1.1.1"
"deriv","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"deriv.default","closure","","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"") ","base","1.1.1"
"deriv.formula","closure","","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"") ","base","1.1.1"
"det","closure","","TRUE","FALSE","(x, method = c(""qr"", ""eigenvalues"")) ","base","1.1.1"
"detach","closure","","TRUE","FALSE","(name, pos = 2) ","base","1.1.1"
"dev.control","closure","","TRUE","FALSE","(displaylist) ","base","1.1.1"
"dev.copy","closure","","TRUE","FALSE","(device, ..., which = dev.next()) ","base","1.1.1"
"dev.copy2eps","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"dev.cur","closure","","TRUE","FALSE","() ","base","1.1.1"
"dev.list","closure","","TRUE","FALSE","() ","base","1.1.1"
"dev.next","closure","","TRUE","FALSE","(which = dev.cur()) ","base","1.1.1"
"dev.off","closure","","TRUE","FALSE","(which = dev.cur()) ","base","1.1.1"
"dev.prev","closure","","TRUE","FALSE","(which = dev.cur()) ","base","1.1.1"
"dev.print","closure","","TRUE","FALSE","(device = postscript, ...) ","base","1.1.1"
"dev.set","closure","","TRUE","FALSE","(which = dev.next()) ","base","1.1.1"
"dev2bitmap","closure","","TRUE","FALSE","(file, type = ""png256"", height = 6, width = 6, res = 72,     pointsize, ...) ","base","1.1.1"
"deviance","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"deviance.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"deviance.glm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"deviance.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"deviance.mlm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"dexp","closure","","TRUE","FALSE","(x, rate = 1, log = FALSE) ","base","1.1.1"
"df","closure","","TRUE","FALSE","(x, df1, df2, log = FALSE) ","base","1.1.1"
"df.residual","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"df.residual.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"dfbetas","closure","","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj)) ","base","1.1.1"
"dffits","closure","","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj)) ","base","1.1.1"
"dgamma","closure","","TRUE","FALSE","(x, shape, scale = 1, log = FALSE) ","base","1.1.1"
"dgeom","closure","","TRUE","FALSE","(x, prob, log = FALSE) ","base","1.1.1"
"dget","closure","","TRUE","FALSE","(file) ","base","1.1.1"
"dhyper","closure","","TRUE","FALSE","(x, m, n, k, log = FALSE) ","base","1.1.1"
"diag","closure","","TRUE","FALSE","(x = 1, nrow, ncol = n) ","base","1.1.1"
"diag<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"diff","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"diff.default","closure","","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","base","1.1.1"
"digamma","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"dim","special","","TRUE","NA","","base","1.1.1"
"dim.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"dim<-","special","","TRUE","NA","","base","1.1.1"
"dimnames","special","","TRUE","NA","","base","1.1.1"
"dimnames.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"dimnames<-","special","","TRUE","NA","","base","1.1.1"
"dimnames<-.data.frame","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"dir","closure","","TRUE","FALSE","(path = ""."", pattern = NULL, all.files = FALSE, full.names = FALSE) ","base","1.1.1"
"dir.create","closure","","TRUE","FALSE","(path) ","base","1.1.1"
"dirname","closure","","TRUE","FALSE","(path) ","base","1.1.1"
"dlnorm","closure","","TRUE","FALSE","(x, meanlog = 0, sdlog = 1, log = FALSE) ","base","1.1.1"
"dlogis","closure","","TRUE","FALSE","(x, location = 0, scale = 1, log = FALSE) ","base","1.1.1"
"dnbinom","closure","","TRUE","FALSE","(x, size, prob, log = FALSE) ","base","1.1.1"
"dnchisq","closure","","TRUE","FALSE","(x, df, lambda) ","base","1.1.1"
"dnorm","closure","","TRUE","FALSE","(x, mean = 0, sd = 1, log = FALSE) ","base","1.1.1"
"do.call","closure","","TRUE","FALSE","(what, args) ","base","1.1.1"
"dotplot","closure","","TRUE","FALSE","(x, labels = NULL, groups = NULL, gdata = NULL, cex = par(""cex""),     pch = 21, gpch = 21, bg = par(""bg""), color = par(""fg""), gcolor = par(""fg""),     lcolor = ""gray"", main = NULL, xlab = NULL, ylab = NULL, ...) ","base","1.1.1"
"double","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"download.file","closure","","TRUE","FALSE","(url, destfile, method = ""auto"", quiet = FALSE) ","base","1.1.1"
"download.packages","closure","","TRUE","FALSE","(pkgs, destdir, available = NULL, CRAN = getOption(""CRAN""),     contriburl = contrib.url(CRAN), method = ""auto"") ","base","1.1.1"
"dpois","closure","","TRUE","FALSE","(x, lambda, log = FALSE) ","base","1.1.1"
"dput","closure","","TRUE","FALSE","(x, file = """") ","base","1.1.1"
"drop","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"drop.scope","closure","","TRUE","FALSE","(terms1, terms2) ","base","1.1.1"
"drop.terms","closure","","TRUE","FALSE","(termobj, dropx = NULL, keep.response = FALSE) ","base","1.1.1"
"drop1","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"drop1.default","closure","","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq""),     k = 2, trace = FALSE, ...) ","base","1.1.1"
"drop1.glm","closure","","TRUE","FALSE","(object, scope, scale = 0, test = c(""none"", ""Chisq"",     ""F""), k = 2, ...) ","base","1.1.1"
"drop1.lm","closure","","TRUE","FALSE","(object, scope, scale = 0, all.cols = TRUE, test = c(""none"",     ""Chisq"", ""F""), k = 2, ...) ","base","1.1.1"
"drop1.mlm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"dsignrank","closure","","TRUE","FALSE","(x, n, log = FALSE) ","base","1.1.1"
"dt","closure","","TRUE","FALSE","(x, df, log = FALSE) ","base","1.1.1"
"dummy.coef","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"dummy.coef.aovlist","closure","","TRUE","FALSE","(object, use.na = FALSE) ","base","1.1.1"
"dummy.coef.lm","closure","","TRUE","FALSE","(object, use.na = FALSE) ","base","1.1.1"
"dump","closure","","TRUE","FALSE","(list, fileout = ""dumpdata"") ","base","1.1.1"
"dump.frames","closure","","TRUE","FALSE","(dumpto = ""last.dump"", to.file = FALSE) ","base","1.1.1"
"dunif","closure","","TRUE","FALSE","(x, min = 0, max = 1, log = FALSE) ","base","1.1.1"
"duplicated","closure","","TRUE","FALSE","(x, incomparables = FALSE) ","base","1.1.1"
"dweibull","closure","","TRUE","FALSE","(x, shape, scale = 1, log = FALSE) ","base","1.1.1"
"dwilcox","closure","","TRUE","FALSE","(x, m, n, log = FALSE) ","base","1.1.1"
"dyn.load","closure","","TRUE","FALSE","(x, local = TRUE, now = TRUE) ","base","1.1.1"
"dyn.unload","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"edit","closure","","TRUE","FALSE","(name, ...) ","base","1.1.1"
"edit.data.frame","closure","","TRUE","FALSE","(name, factor.mode = c(""character"", ""numeric""), edit.row.names = any(row.names(name) !=     1:nrow(name)), ...) ","base","1.1.1"
"edit.default","closure","","TRUE","FALSE","(name = NULL, file = """", editor = getOption(""editor""),     ...) ","base","1.1.1"
"edit.matrix","closure","","TRUE","FALSE","(name, edit.row.names = any(rownames(name) != 1:nrow(name)),     ...) ","base","1.1.1"
"eff.aovlist","closure","","TRUE","FALSE","(aovlist) ","base","1.1.1"
"effects","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"effects.glm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"effects.lm","closure","","TRUE","FALSE","(object, set.sign = FALSE) ","base","1.1.1"
"eigen","closure","","TRUE","FALSE","(x, symmetric, only.values = FALSE) ","base","1.1.1"
"emacs","closure","","TRUE","FALSE","(name = NULL, file = """") ","base","1.1.1"
"end","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"end.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"environment","closure","","TRUE","FALSE","(fun = NULL) ","base","1.1.1"
"environment<-","builtin","","TRUE","NA","","base","1.1.1"
"erase.screen","closure","","TRUE","FALSE","(n = .split.cur.screen) ","base","1.1.1"
"eval","closure","","TRUE","FALSE","(expr, envir = parent.frame(), enclos = if (is.list(envir) ||     is.pairlist(envir)) parent.frame()) ","base","1.1.1"
"eval.parent","closure","","TRUE","FALSE","(expr, n = 1) ","base","1.1.1"
"evalq","closure","","TRUE","FALSE","(expr, envir, enclos) ","base","1.1.1"
"example","closure","","TRUE","FALSE","(topic, package = .packages(), lib.loc = .lib.loc, echo = TRUE,     verbose = getOption(""verbose""), prompt.echo = paste(abbreviate(topic,         6), ""> "", sep = """")) ","base","1.1.1"
"exists","closure","","TRUE","FALSE","(x, where = -1, envir = pos.to.env(where), frame, mode = ""any"",     inherits = TRUE) ","base","1.1.1"
"exp","builtin","","TRUE","NA","","base","1.1.1"
"expand.grid","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"expand.model.frame","closure","","TRUE","FALSE","(model, extras, enclos = sys.frame(sys.parent()), na.expand = FALSE) ","base","1.1.1"
"expression","special","","TRUE","NA","","base","1.1.1"
"extractAIC","closure","","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","1.1.1"
"extractAIC.aov","closure","","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","base","1.1.1"
"extractAIC.coxph","closure","","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","1.1.1"
"extractAIC.glm","closure","","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","base","1.1.1"
"extractAIC.lm","closure","","TRUE","FALSE","(fit, scale = 0, k = 2, ...) ","base","1.1.1"
"extractAIC.negbin","closure","","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","1.1.1"
"extractAIC.survreg","closure","","TRUE","FALSE","(fit, scale, k = 2, ...) ","base","1.1.1"
"factor","closure","","TRUE","FALSE","(x, levels = sort(unique(x), na.last = TRUE), labels = levels,     exclude = NA, ordered = is.ordered(x)) ","base","1.1.1"
"factor.scope","closure","","TRUE","FALSE","(factor, scope) ","base","1.1.1"
"family","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"family.glm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"family.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"fft","closure","","TRUE","FALSE","(z, inverse = FALSE) ","base","1.1.1"
"file.append","closure","","TRUE","FALSE","(file1, file2) ","base","1.1.1"
"file.choose","closure","","TRUE","FALSE","(new = FALSE) ","base","1.1.1"
"file.create","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"file.exists","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"file.path","closure","","TRUE","FALSE","(..., fsep = .Platform$file.sep) ","base","1.1.1"
"file.remove","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"file.show","closure","","TRUE","FALSE","(..., header = rep("""", nfiles), title = ""R Information"",     delete.file = FALSE, pager = getOption(""pager"")) ","base","1.1.1"
"filled.contour","closure","","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, xlim = range(x, finite = TRUE), ylim = range(y, finite = TRUE),     zlim = range(z, finite = TRUE), levels = pretty(zlim, nlevels),     nlevels = 20, color.palette = cm.colors, col = color.palette(length(levels) -         1), plot.title, plot.axes, key.title, key.axes, asp = NA,     xaxs = ""i"", yaxs = ""i"", las = 1, axes = TRUE, ...) ","base","1.1.1"
"find","closure","","TRUE","FALSE","(what, mode = ""any"", numeric. = FALSE, simple.words = TRUE) ","base","1.1.1"
"fitted","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"fitted.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"fitted.glm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"fitted.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"fitted.values","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"fivenum","closure","","TRUE","FALSE","(x, na.rm = TRUE) ","base","1.1.1"
"fix","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"floor","builtin","","TRUE","NA","","base","1.1.1"
"for","special","","TRUE","NA","","base","1.1.1"
"formals","closure","","TRUE","FALSE","(fun = sys.function(sys.parent())) ","base","1.1.1"
"formals<-","closure","","TRUE","FALSE","(f, value, envir = sys.frame(sys.parent())) ","base","1.1.1"
"format","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"format.char","closure","","TRUE","FALSE","(x, width = NULL, flag = ""-"") ","base","1.1.1"
"format.default","closure","","TRUE","FALSE","(x, trim = FALSE, digits = NULL) ","base","1.1.1"
"format.info","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"format.pval","closure","","TRUE","FALSE","(pv, digits = max(1, getOption(""digits"") - 2), eps = .Machine$double.eps,     na.form = ""NA"") ","base","1.1.1"
"formatC","closure","","TRUE","FALSE","(x, digits = NULL, width = NULL, format = NULL, flag = """",     mode = NULL) ","base","1.1.1"
"formula","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"formula.data.frame","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"formula.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"formula.formula","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"formula.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"formula.terms","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"forwardsolve","closure","","TRUE","FALSE","(l, x, k = ncol(l), upper.tri = FALSE, transpose = FALSE) ","base","1.1.1"
"frame","closure","","TRUE","FALSE","(ask = NA) ","base","1.1.1"
"frequency","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"frequency.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"ftable","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"ftable.default","closure","","TRUE","FALSE","(..., exclude = c(NA, NaN), row.vars = NULL, col.vars = NULL) ","base","1.1.1"
"ftable.formula","closure","","TRUE","FALSE","(formula, data = NULL, subset, na.action, ...) ","base","1.1.1"
"ftable2table","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"function","special","","TRUE","NA","","base","1.1.1"
"gamma","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"gammaCody","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"gaussian","closure","","TRUE","FALSE","(link = ""identity"") ","base","1.1.1"
"gc","closure","","TRUE","FALSE","(verbose = getOption(""verbose"")) ","base","1.1.1"
"gcinfo","closure","","TRUE","FALSE","(verbose) ","base","1.1.1"
"gctorture","closure","","TRUE","FALSE","(on = TRUE) ","base","1.1.1"
"get","closure","","TRUE","FALSE","(x, pos = -1, envir = pos.to.env(pos), mode = ""any"",     inherits = TRUE) ","base","1.1.1"
"getOption","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"getenv","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"geterrmessage","closure","","TRUE","FALSE","() ","base","1.1.1"
"getwd","closure","","TRUE","FALSE","() ","base","1.1.1"
"gl","closure","","TRUE","FALSE","(n, k, length = n * k, labels = 1:n, ordered = FALSE) ","base","1.1.1"
"glm","closure","","TRUE","FALSE","(formula, family = gaussian, data = list(), weights = NULL,     subset = NULL, na.action = na.fail, start = NULL, offset = NULL,     control = glm.control(...), model = TRUE, method = ""glm.fit"",     x = FALSE, y = TRUE, contrasts = NULL, ...) ","base","1.1.1"
"glm.control","closure","","TRUE","FALSE","(epsilon = 1e-04, maxit = 10, trace = FALSE) ","base","1.1.1"
"glm.fit","closure","","TRUE","FALSE","(x, y, weights = rep(1, nobs), start = NULL, etastart = NULL,     mustart = NULL, offset = rep(0, nobs), family = gaussian(),     control = glm.control(), intercept = TRUE) ","base","1.1.1"
"glm.fit.null","closure","","TRUE","FALSE","(x, y, weights = rep(1, nobs), start = NULL, offset = rep(0,     nobs), family = gaussian(), control = glm.control(), intercept = FALSE) ","base","1.1.1"
"globalenv","builtin","","TRUE","NA","","base","1.1.1"
"gnome","closure","","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","1.1.1"
"graphics.off","closure","","TRUE","FALSE","() ","base","1.1.1"
"gray","closure","","TRUE","FALSE","(level) ","base","1.1.1"
"grep","closure","","TRUE","FALSE","(pattern, x, ignore.case = FALSE, extended = TRUE, value = FALSE) ","base","1.1.1"
"grey","closure","","TRUE","FALSE","(level) ","base","1.1.1"
"grid","closure","","TRUE","FALSE","(nx = NULL, ny = NULL, col = ""lightgray"", lty = ""dotted"") ","base","1.1.1"
"gsub","closure","","TRUE","FALSE","(pattern, replacement, x, ignore.case = FALSE, extended = TRUE) ","base","1.1.1"
"gtk","closure","","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12) ","base","1.1.1"
"hasTsp","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"hat","closure","","TRUE","FALSE","(x, intercept = TRUE) ","base","1.1.1"
"heat.colors","closure","","TRUE","FALSE","(n) ","base","1.1.1"
"help","closure","","TRUE","FALSE","(topic, offline = FALSE, package = .packages(), lib.loc = .lib.loc,     verbose = getOption(""verbose""), try.all.packages = getOption(""help.try.all.packages""),     htmlhelp = getOption(""htmlhelp"")) ","base","1.1.1"
"help.search","closure","","TRUE","FALSE","(topic, fields = c(""name"", ""title""), apropos, keyword,     whatis, ignore.case = TRUE, packages = NULL, lib.loc = .lib.loc,     help.db = getOption(""help.db""), verbose = getOption(""verbose""),     rebuild = FALSE) ","base","1.1.1"
"help.start","closure","","TRUE","FALSE","(gui = ""irrelevant"", browser = getOption(""browser""),     remote = NULL) ","base","1.1.1"
"hist","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"hist.default","closure","","TRUE","FALSE","(x, breaks, freq = NULL, probability = !freq, include.lowest = TRUE,     right = TRUE, col = NULL, border = par(""fg""), main = paste(""Histogram of"",         deparse(substitute(x))), xlim = range(breaks), ylim = range(y,         0), xlab = deparse(substitute(x)), ylab, axes = TRUE,     plot = TRUE, labels = FALSE, nclass = NULL, ...) ","base","1.1.1"
"hsv","closure","","TRUE","FALSE","(h = 1, s = 1, v = 1, gamma = 1) ","base","1.1.1"
"httpclient","closure","","TRUE","FALSE","(url, port = 80, error.is.fatal = TRUE, check.MIME.type = TRUE,     file = tempfile(), drop.ctrl.z = TRUE) ","base","1.1.1"
"identify","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"identify.default","closure","","TRUE","FALSE","(x, y = NULL, labels = seq(along = x), pos = FALSE,     n = length(x), plot = TRUE, offset = 0.5, ...) ","base","1.1.1"
"if","special","","TRUE","NA","","base","1.1.1"
"ifelse","closure","","TRUE","FALSE","(test, yes, no) ","base","1.1.1"
"image","closure","","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, zlim = range(z[is.finite(z)]), xlim = range(x[is.finite(x)]),     ylim = range(y[is.finite(y)]), col = heat.colors(12), add = FALSE,     xaxs = ""i"", yaxs = ""i"", xlab, ylab, breaks, oldstyle = FALSE,     ...) ","base","1.1.1"
"index.search","closure","","TRUE","FALSE","(topic, path, file = ""AnIndex"", type = ""help"") ","base","1.1.1"
"influence.measures","closure","","TRUE","FALSE","(lm.obj) ","base","1.1.1"
"inherits","closure","","TRUE","FALSE","(x, name) ","base","1.1.1"
"install.packages","closure","","TRUE","FALSE","(pkgs, lib, CRAN = getOption(""CRAN""), contriburl = contrib.url(CRAN),     method = ""auto"", available = NULL, destdir = NULL) ","base","1.1.1"
"installed.packages","closure","","TRUE","FALSE","(lib.loc = .lib.loc) ","base","1.1.1"
"integer","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"interaction","closure","","TRUE","FALSE","(..., drop = FALSE) ","base","1.1.1"
"interaction.plot","closure","","TRUE","FALSE","(x.factor, trace.factor, response, fun = mean, type = c(""l"",     ""p""), legend = TRUE, trace.label = deparse(substitute(trace.factor)),     fixed = FALSE, xlab = deparse(substitute(x.factor)), ylab = ylabel,     ylim = range(cells, na.rm = TRUE), lty = nc:1, col = 1, pch = c(1:9,         0, letters), ...) ","base","1.1.1"
"interactive","special","","TRUE","NA","","base","1.1.1"
"intersect","closure","","TRUE","FALSE","(x, y) ","base","1.1.1"
"inverse.gaussian","closure","","TRUE","FALSE","(link = ""1/mu^2"") ","base","1.1.1"
"invisible","builtin","","TRUE","NA","","base","1.1.1"
"is.R","closure","","TRUE","FALSE","() ","base","1.1.1"
"is.array","builtin","","TRUE","NA","","base","1.1.1"
"is.atomic","builtin","","TRUE","NA","","base","1.1.1"
"is.call","builtin","","TRUE","NA","","base","1.1.1"
"is.character","builtin","","TRUE","NA","","base","1.1.1"
"is.complex","builtin","","TRUE","NA","","base","1.1.1"
"is.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.double","builtin","","TRUE","NA","","base","1.1.1"
"is.element","closure","","TRUE","FALSE","(el, set) ","base","1.1.1"
"is.empty.model","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.environment","builtin","","TRUE","NA","","base","1.1.1"
"is.expression","builtin","","TRUE","NA","","base","1.1.1"
"is.factor","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.finite","builtin","","TRUE","NA","","base","1.1.1"
"is.function","builtin","","TRUE","NA","","base","1.1.1"
"is.infinite","builtin","","TRUE","NA","","base","1.1.1"
"is.integer","builtin","","TRUE","NA","","base","1.1.1"
"is.language","builtin","","TRUE","NA","","base","1.1.1"
"is.list","builtin","","TRUE","NA","","base","1.1.1"
"is.loaded","builtin","","TRUE","NA","","base","1.1.1"
"is.logical","builtin","","TRUE","NA","","base","1.1.1"
"is.matrix","builtin","","TRUE","NA","","base","1.1.1"
"is.na","builtin","","TRUE","NA","","base","1.1.1"
"is.na.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.name","builtin","","TRUE","NA","","base","1.1.1"
"is.nan","builtin","","TRUE","NA","","base","1.1.1"
"is.null","builtin","","TRUE","NA","","base","1.1.1"
"is.numeric","builtin","","TRUE","NA","","base","1.1.1"
"is.object","builtin","","TRUE","NA","","base","1.1.1"
"is.ordered","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.pairlist","builtin","","TRUE","NA","","base","1.1.1"
"is.qr","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.real","builtin","","TRUE","NA","","base","1.1.1"
"is.recursive","builtin","","TRUE","NA","","base","1.1.1"
"is.single","builtin","","TRUE","NA","","base","1.1.1"
"is.symbol","builtin","","TRUE","NA","","base","1.1.1"
"is.ts","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"is.vector","closure","","TRUE","FALSE","(x, mode = ""any"") ","base","1.1.1"
"jitter","closure","","TRUE","FALSE","(x, factor = 1, amount = NULL) ","base","1.1.1"
"jpeg","closure","","TRUE","FALSE","(filename = ""Rplot.jpeg"", width = 480, height = 480,     pointsize = 12, quality = 75, gamma = 1, colortype = getOption(""X11colortype""),     maxcubesize = 256) ","base","1.1.1"
"kappa","closure","","TRUE","FALSE","(z, ...) ","base","1.1.1"
"kappa.default","closure","","TRUE","FALSE","(z, exact = FALSE, ...) ","base","1.1.1"
"kappa.lm","closure","","TRUE","FALSE","(z, ...) ","base","1.1.1"
"kappa.qr","closure","","TRUE","FALSE","(z, ...) ","base","1.1.1"
"kappa.tri","closure","","TRUE","FALSE","(z, exact = FALSE, ...) ","base","1.1.1"
"kronecker","closure","","TRUE","FALSE","(X, Y, FUN = ""*"", make.dimnames = FALSE, ...) ","base","1.1.1"
"labels","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"labels.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"labels.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"labels.terms","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"lapply","closure","","TRUE","FALSE","(X, FUN, ...) ","base","1.1.1"
"layout","closure","","TRUE","FALSE","(mat, widths = rep(1, dim(mat)[2]), heights = rep(1,     dim(mat)[1]), respect = FALSE) ","base","1.1.1"
"layout.show","closure","","TRUE","FALSE","(n = 1) ","base","1.1.1"
"lbeta","closure","","TRUE","FALSE","(a, b) ","base","1.1.1"
"lchoose","closure","","TRUE","FALSE","(n, k) ","base","1.1.1"
"lcm","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"legend","closure","","TRUE","FALSE","(x, y, legend, fill, col = ""black"", lty, lwd, pch, bty = ""o"",     bg = par(""bg""), cex = 1, xjust = 0, yjust = 1, x.intersp = 1,     y.intersp = 1, adj = 0, text.width = NULL, merge = do.lines &&         has.pch, trace = FALSE, ncol = 1, horiz = FALSE) ","base","1.1.1"
"length","builtin","","TRUE","NA","","base","1.1.1"
"length<-","builtin","","TRUE","NA","","base","1.1.1"
"letters","character","","TRUE","FALSE","NA","base","1.1.1"
"levels","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"levels<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"levels<-.default","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"levels<-.factor","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"lgamma","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"library","closure","","TRUE","FALSE","(package, help, lib.loc = .lib.loc, character.only = FALSE,     logical.return = FALSE, warn.conflicts = package != ""MASS"",     keep.source = getOption(""keep.source.pkgs"")) ","base","1.1.1"
"library.dynam","closure","","TRUE","FALSE","(chname, package = .packages(), lib.loc = .lib.loc,     verbose = getOption(""verbose""), file.ext = .Platform$dynlib.ext) ","base","1.1.1"
"licence","closure","","TRUE","FALSE","() ","base","1.1.1"
"license","closure","","TRUE","FALSE","() ","base","1.1.1"
"lines","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"lines.default","closure","","TRUE","FALSE","(x, y = NULL, type = ""l"", col = par(""col""), lty = par(""lty""),     ...) ","base","1.1.1"
"lines.formula","closure","","TRUE","FALSE","(formula, ..., data = parent.frame(), subset) ","base","1.1.1"
"lines.ts","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"list","builtin","","TRUE","NA","","base","1.1.1"
"list.files","closure","","TRUE","FALSE","(path = ""."", pattern = NULL, all.files = FALSE, full.names = FALSE) ","base","1.1.1"
"lm","closure","","TRUE","FALSE","(formula, data = list(), subset, weights, na.action,     method = ""qr"", model = TRUE, x = FALSE, y = FALSE, qr = TRUE,     singular.ok = TRUE, contrasts = NULL, offset = NULL, ...) ","base","1.1.1"
"lm.fit","closure","","TRUE","FALSE","(x, y, offset = NULL, method = ""qr"", tol = 1e-07, ...) ","base","1.1.1"
"lm.fit.null","closure","","TRUE","FALSE","(x, y, method = ""qr"", tol = 1e-07, ...) ","base","1.1.1"
"lm.influence","closure","","TRUE","FALSE","(lm.obj) ","base","1.1.1"
"lm.wfit","closure","","TRUE","FALSE","(x, y, w, offset = NULL, method = ""qr"", tol = 1e-07,     ...) ","base","1.1.1"
"lm.wfit.null","closure","","TRUE","FALSE","(x, y, w, method = ""qr"", tol = 1e-07, ...) ","base","1.1.1"
"load","closure","","TRUE","FALSE","(file, envir = sys.frame(sys.parent())) ","base","1.1.1"
"local","closure","","TRUE","FALSE","(expr, envir = new.env()) ","base","1.1.1"
"locator","closure","","TRUE","FALSE","(n = 512, type = ""n"", ...) ","base","1.1.1"
"log","closure","","TRUE","FALSE","(x, base = exp(1)) ","base","1.1.1"
"log10","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"log1p","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"log2","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"logical","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"loglin","closure","","TRUE","FALSE","(table, margin, start = rep(1, length(table)), fit = FALSE,     eps = 0.1, iter = 20, param = FALSE, print = TRUE) ","base","1.1.1"
"lower.tri","closure","","TRUE","FALSE","(x, diag = FALSE) ","base","1.1.1"
"lowess","closure","","TRUE","FALSE","(x, y = NULL, f = 2/3, iter = 3, delta = 0.01 * diff(range(xy$x[o]))) ","base","1.1.1"
"ls","closure","","TRUE","FALSE","(name, pos = -1, envir = pos.to.env(pos), all.names = FALSE,     pattern) ","base","1.1.1"
"ls.diag","closure","","TRUE","FALSE","(ls.out) ","base","1.1.1"
"ls.print","closure","","TRUE","FALSE","(ls.out, digits = 4, print.it = TRUE) ","base","1.1.1"
"ls.str","closure","","TRUE","FALSE","(..., mode = ""any"", max.level = 1, give.attr = FALSE) ","base","1.1.1"
"lsf.str","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"lsfit","closure","","TRUE","FALSE","(x, y, wt = NULL, intercept = TRUE, tolerance = 1e-07,     yname = NULL) ","base","1.1.1"
"machine","closure","","TRUE","FALSE","() ","base","1.1.1"
"mad","closure","","TRUE","FALSE","(y, center, constant = 1.4826, na.rm = FALSE) ","base","1.1.1"
"mahalanobis","closure","","TRUE","FALSE","(x, center, cov, inverted = FALSE) ","base","1.1.1"
"make.link","closure","","TRUE","FALSE","(link) ","base","1.1.1"
"make.names","closure","","TRUE","FALSE","(names, unique = FALSE) ","base","1.1.1"
"make.socket","closure","","TRUE","FALSE","(host = ""localhost"", port, fail = TRUE, server = FALSE) ","base","1.1.1"
"make.tables.aovproj","closure","","TRUE","FALSE","(proj.cols, mf.cols, prjs, mf, fun = ""mean"", prt = FALSE,     ...) ","base","1.1.1"
"make.tables.aovprojlist","closure","","TRUE","FALSE","(proj.cols, strata.cols, model.cols, projections, model,     eff, fun = ""mean"", prt = FALSE, ...) ","base","1.1.1"
"margin.table","closure","","TRUE","FALSE","(x, margin) ","base","1.1.1"
"mat.or.vec","closure","","TRUE","FALSE","(nr, nc) ","base","1.1.1"
"match","closure","","TRUE","FALSE","(x, table, nomatch = NA) ","base","1.1.1"
"match.arg","closure","","TRUE","FALSE","(arg, choices) ","base","1.1.1"
"match.call","closure","","TRUE","FALSE","(definition = NULL, call = sys.call(sys.parent()), expand.dots = TRUE) ","base","1.1.1"
"match.fun","closure","","TRUE","FALSE","(FUN, descend = TRUE) ","base","1.1.1"
"matlines","closure","","TRUE","FALSE","(x, y, type = ""l"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     ...) ","base","1.1.1"
"matplot","closure","","TRUE","FALSE","(x, y, type = ""p"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     cex = NULL, xlab = NULL, ylab = NULL, xlim = NULL, ylim = NULL,     ..., add = FALSE, verbose = getOption(""verbose"")) ","base","1.1.1"
"matpoints","closure","","TRUE","FALSE","(x, y, type = ""p"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     ...) ","base","1.1.1"
"matrix","closure","","TRUE","FALSE","(data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL) ","base","1.1.1"
"max","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"max.col","closure","","TRUE","FALSE","(m) ","base","1.1.1"
"mean","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"mean.default","closure","","TRUE","FALSE","(x, trim = 0, na.rm = FALSE) ","base","1.1.1"
"median","closure","","TRUE","FALSE","(x, na.rm = FALSE) ","base","1.1.1"
"memory.profile","closure","","TRUE","FALSE","() ","base","1.1.1"
"menu","closure","","TRUE","FALSE","(choices, graphics = FALSE, title = """") ","base","1.1.1"
"merge","closure","","TRUE","FALSE","(x, y, ...) ","base","1.1.1"
"merge.data.frame","closure","","TRUE","FALSE","(x, y, by = intersect(names(x), names(y)), by.x = by,     by.y = by, sort = TRUE) ","base","1.1.1"
"merge.default","closure","","TRUE","FALSE","(x, y, ...) ","base","1.1.1"
"methods","closure","","TRUE","FALSE","(generic.function, class) ","base","1.1.1"
"min","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"missing","special","","TRUE","NA","","base","1.1.1"
"mode","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"mode<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"model.extract","closure","","TRUE","FALSE","(frame, component) ","base","1.1.1"
"model.frame","closure","","TRUE","FALSE","(formula, ...) ","base","1.1.1"
"model.frame.aovlist","closure","","TRUE","FALSE","(formula, data = NULL, ...) ","base","1.1.1"
"model.frame.default","closure","","TRUE","FALSE","(formula, data = NULL, subset = NULL, na.action = na.fail,     drop.unused.levels = FALSE, xlev = NULL, ...) ","base","1.1.1"
"model.frame.glm","closure","","TRUE","FALSE","(formula, data, na.action, ...) ","base","1.1.1"
"model.frame.lm","closure","","TRUE","FALSE","(formula, data, na.action, ...) ","base","1.1.1"
"model.matrix","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"model.matrix.default","closure","","TRUE","FALSE","(formula, data = sys.frame(sys.parent()), contrasts.arg = NULL,     xlev = NULL) ","base","1.1.1"
"model.matrix.glm.null","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"model.matrix.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"model.matrix.lm.null","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"model.offset","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"model.response","closure","","TRUE","FALSE","(data, type = ""any"") ","base","1.1.1"
"model.tables","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"model.tables.aov","closure","","TRUE","FALSE","(x, type = ""effects"", se = FALSE, cterms) ","base","1.1.1"
"model.tables.aovlist","closure","","TRUE","FALSE","(x, type = ""effects"", se = FALSE, ...) ","base","1.1.1"
"model.weights","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"month.abb","character","","TRUE","FALSE","NA","base","1.1.1"
"month.name","character","","TRUE","FALSE","NA","base","1.1.1"
"mosaicplot","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"mosaicplot.default","closure","","TRUE","FALSE","(X, main = NULL, xlab = NULL, ylab = NULL, sort = NULL,     off = NULL, dir = NULL, color = FALSE) ","base","1.1.1"
"mosaicplot.formula","closure","","TRUE","FALSE","(formula, data = NULL, subset, na.action, ...) ","base","1.1.1"
"mostattributes<-","closure","","TRUE","FALSE","(obj, value) ","base","1.1.1"
"mtext","closure","","TRUE","FALSE","(text, side = 3, line = 0, outer = FALSE, at = NA, adj = NA,     cex = NA, col = NA, font = NA, ...) ","base","1.1.1"
"mvfft","closure","","TRUE","FALSE","(z, inverse = FALSE) ","base","1.1.1"
"na.action","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"na.action.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"na.fail","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"na.fail.default","closure","","TRUE","FALSE","(object) ","base","1.1.1"
"na.omit","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"na.omit.data.frame","closure","","TRUE","FALSE","(object) ","base","1.1.1"
"na.omit.default","closure","","TRUE","FALSE","(object) ","base","1.1.1"
"names","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"names.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"names<-","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"names<-.default","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"nargs","special","","TRUE","NA","","base","1.1.1"
"nchar","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"ncol","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"new.env","closure","","TRUE","FALSE","() ","base","1.1.1"
"next","special","","TRUE","NA","","base","1.1.1"
"nextn","closure","","TRUE","FALSE","(n, factors = c(2, 3, 5)) ","base","1.1.1"
"nlevels","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"nlm","closure","","TRUE","FALSE","(f, p, hessian = FALSE, typsize = rep(1, length(p)),     fscale = 1, print.level = 0, ndigit = 12, gradtol = 1e-06,     stepmax = max(1000 * sqrt(sum((p/typsize)^2)), 1000), steptol = 1e-06,     iterlim = 100, check.analyticals = TRUE, ...) ","base","1.1.1"
"noquote","closure","","TRUE","FALSE","(obj) ","base","1.1.1"
"nrow","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"numeric","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"objects","closure","","TRUE","FALSE","(name, pos = -1, envir = pos.to.env(pos), all.names = FALSE,     pattern) ","base","1.1.1"
"offset","closure","","TRUE","FALSE","(object) ","base","1.1.1"
"old.packages","closure","","TRUE","FALSE","(lib.loc = .lib.loc, CRAN = getOption(""CRAN""), contriburl = contrib.url(CRAN),     method = ""auto"", available = NULL) ","base","1.1.1"
"on.exit","special","","TRUE","NA","","base","1.1.1"
"optim","closure","","TRUE","FALSE","(par, fn, gr = NULL, method = c(""Nelder-Mead"", ""BFGS"",     ""CG"", ""L-BFGS-B"", ""SANN""), lower = -Inf, upper = Inf, control = list(),     hessian = FALSE, ...) ","base","1.1.1"
"optimise","closure","","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     maximum = FALSE, tol = .Machine$double.eps^0.25, ...) ","base","1.1.1"
"optimize","closure","","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     maximum = FALSE, tol = .Machine$double.eps^0.25, ...) ","base","1.1.1"
"options","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"order","closure","","TRUE","FALSE","(..., na.last = TRUE) ","base","1.1.1"
"ordered","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"outer","closure","","TRUE","FALSE","(X, Y, FUN = ""*"", ...) ","base","1.1.1"
"p.adjust","closure","","TRUE","FALSE","(p, method = p.adjust.methods, n = length(p)) ","base","1.1.1"
"p.adjust.methods","character","","TRUE","FALSE","NA","base","1.1.1"
"package.contents","closure","","TRUE","FALSE","(pkg, lib = .lib.loc) ","base","1.1.1"
"package.dependencies","closure","","TRUE","FALSE","(x, check = FALSE) ","base","1.1.1"
"package.description","closure","","TRUE","FALSE","(pkg, lib = .lib.loc, fields = NULL) ","base","1.1.1"
"page","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"pairlist","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"pairs","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"pairs.default","closure","","TRUE","FALSE","(x, labels, panel = points, main = NULL, oma = NULL,     font.main = par(""font.main""), cex.main = par(""cex.main""),     ..., lower.panel = panel, upper.panel = panel, diag.panel = NULL,     text.panel = textPanel, label.pos = 0.5 + has.diag/3, cex.labels = NULL,     font.labels = 1, row1attop = TRUE) ","base","1.1.1"
"pairs.formula","closure","","TRUE","FALSE","(formula, data = NULL, subset, na.action, ...) ","base","1.1.1"
"palette","closure","","TRUE","FALSE","(value) ","base","1.1.1"
"panel.smooth","closure","","TRUE","FALSE","(x, y, col = par(""col""), pch = par(""pch""), col.smooth = ""red"",     span = 2/3, iter = 3, ...) ","base","1.1.1"
"par","closure","","TRUE","FALSE","(..., no.readonly = FALSE) ","base","1.1.1"
"parent.frame","closure","","TRUE","FALSE","(n = 1) ","base","1.1.1"
"parse","closure","","TRUE","FALSE","(file = """", n = NULL, text = NULL, prompt = NULL, white = FALSE) ","base","1.1.1"
"parse.dcf","closure","","TRUE","FALSE","(text = NULL, file = """", fields = NULL, versionfix = FALSE) ","base","1.1.1"
"paste","closure","","TRUE","FALSE","(..., sep = "" "", collapse = NULL) ","base","1.1.1"
"pbeta","closure","","TRUE","FALSE","(q, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pbinom","closure","","TRUE","FALSE","(q, size, prob, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pcauchy","closure","","TRUE","FALSE","(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pchisq","closure","","TRUE","FALSE","(q, df, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pentagamma","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"persp","closure","","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, xlim = range(x), ylim = range(y), zlim = range(z, na.rm = TRUE),     xlab = NULL, ylab = NULL, zlab = NULL, theta = 0, phi = 15,     r = sqrt(3), d = 1, scale = TRUE, expand = 1, col = NULL,     border = NULL, ltheta = -135, lphi = 0, shade = NA, box = TRUE,     axes = TRUE, nticks = 5, ticktype = ""simple"", ...) ","base","1.1.1"
"pexp","closure","","TRUE","FALSE","(q, rate = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pf","closure","","TRUE","FALSE","(q, df1, df2, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pgamma","closure","","TRUE","FALSE","(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pgeom","closure","","TRUE","FALSE","(q, prob, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"phyper","closure","","TRUE","FALSE","(q, m, n, k, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pi","double","","TRUE","FALSE","NA","base","1.1.1"
"pico","closure","","TRUE","FALSE","(name = NULL, file = """") ","base","1.1.1"
"pictex","closure","","TRUE","FALSE","(file = ""Rplots.tex"", width = 5, height = 4, debug = FALSE,     bg = ""white"", fg = ""black"") ","base","1.1.1"
"piechart","closure","","TRUE","FALSE","(x, labels = names(x), edges = 200, radius = 0.8, col = NULL,     main = NULL, ...) ","base","1.1.1"
"plnorm","closure","","TRUE","FALSE","(q, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"plogis","closure","","TRUE","FALSE","(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"plot","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"plot.data.frame","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"plot.default","closure","","TRUE","FALSE","(x, y = NULL, type = ""p"", xlim = NULL, ylim = NULL,     log = """", main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     ann = par(""ann""), axes = TRUE, frame.plot = axes, panel.first = NULL,     panel.last = NULL, col = par(""col""), bg = NA, pch = par(""pch""),     cex = 1, lty = par(""lty""), lab = par(""lab""), lwd = par(""lwd""),     asp = NA, ...) ","base","1.1.1"
"plot.density","closure","","TRUE","FALSE","(s, main = NULL, xlab = NULL, ylab = ""Density"", type = ""l"",     zero.line = TRUE, ...) ","base","1.1.1"
"plot.factor","closure","","TRUE","FALSE","(x, y, legend.text = levels(y), ...) ","base","1.1.1"
"plot.formula","closure","","TRUE","FALSE","(formula, ..., data = parent.frame(), subset, ylab = varnames[response],     ask = TRUE) ","base","1.1.1"
"plot.function","closure","","TRUE","FALSE","(fn, from = 0, to = 1, ...) ","base","1.1.1"
"plot.lm","closure","","TRUE","FALSE","(x, which = 1:4, caption = c(""Residuals vs Fitted"",     ""Normal Q-Q plot"", ""Scale-Location plot"", ""Cook's distance plot""),     panel = points, sub.caption = deparse(x$call), main = """",     ask = interactive() && one.fig && length(which) > 1 && .Device !=         ""postscript"", ..., id.n = 3, labels.id = names(residuals(x)),     cex.id = 0.75) ","base","1.1.1"
"plot.mlm","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"plot.mts","closure","","TRUE","FALSE","(x, plot.type = c(""multiple"", ""single""), log = """", col = par(""col""),     bg = NA, pch = par(""pch""), cex = par(""cex""), lty = par(""lty""),     lwd = par(""lwd""), ann = par(""ann""), xlab = ""Time"", main = NULL,     oma = c(6, 0, 5, 0), ...) ","base","1.1.1"
"plot.new","closure","","TRUE","FALSE","(ask = NA) ","base","1.1.1"
"plot.ts","closure","","TRUE","FALSE","(x, y = NULL, type = ""l"", xlim = NULL, ylim = NULL,     xlab = ""Time"", ylab, log = """", col = par(""col""), bg = NA,     pch = par(""pch""), cex = par(""cex""), lty = par(""lty""), lwd = par(""lwd""),     axes = TRUE, frame.plot = axes, ann = par(""ann""), main = NULL,     plot.type = c(""multiple"", ""single""), ...) ","base","1.1.1"
"plot.window","closure","","TRUE","FALSE","(xlim, ylim, log = """", asp = NA, ...) ","base","1.1.1"
"plot.xy","closure","","TRUE","FALSE","(xy, type, pch = 1, lty = ""solid"", col = par(""fg""),     bg = NA, cex = 1, ...) ","base","1.1.1"
"pmatch","closure","","TRUE","FALSE","(x, table, nomatch = NA, duplicates.ok = FALSE) ","base","1.1.1"
"pmax","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"pmin","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"pnbinom","closure","","TRUE","FALSE","(q, size, prob, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pnchisq","closure","","TRUE","FALSE","(q, df, lambda) ","base","1.1.1"
"png","closure","","TRUE","FALSE","(filename = ""Rplot.png"", width = 480, height = 480,     pointsize = 12, gamma = 1, colortype = getOption(""X11colortype""),     maxcubesize = 256) ","base","1.1.1"
"pnorm","closure","","TRUE","FALSE","(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"points","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"points.default","closure","","TRUE","FALSE","(x, y = NULL, type = ""p"", pch = par(""pch""), col = par(""col""),     bg = NA, cex = 1, ...) ","base","1.1.1"
"points.formula","closure","","TRUE","FALSE","(formula, ..., data = parent.frame(), subset) ","base","1.1.1"
"poisson","closure","","TRUE","FALSE","(link = ""log"") ","base","1.1.1"
"poly","closure","","TRUE","FALSE","(x, degree = 1) ","base","1.1.1"
"polygon","closure","","TRUE","FALSE","(x, y = NULL, col = NA, border = NULL, lty = NULL, xpd = NULL,     density = -1, angle = 45, ...) ","base","1.1.1"
"polyroot","closure","","TRUE","FALSE","(z) ","base","1.1.1"
"pos.to.env","builtin","","TRUE","NA","","base","1.1.1"
"postscript","closure","","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.ps"", ""Rplot%03d.ps""),     onefile = TRUE, ...) ","base","1.1.1"
"power","closure","","TRUE","FALSE","(lambda = 1) ","base","1.1.1"
"ppoints","closure","","TRUE","FALSE","(n, a = ifelse(n <= 10, 3/8, 1/2)) ","base","1.1.1"
"ppois","closure","","TRUE","FALSE","(q, lambda, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"predict","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"predict.glm","closure","","TRUE","FALSE","(object, newdata = NULL, type = c(""link"", ""response"",     ""terms""), se.fit = FALSE, dispersion = NULL, terms = NULL,     ...) ","base","1.1.1"
"predict.lm","closure","","TRUE","FALSE","(object, newdata, se.fit = FALSE, scale = NULL, df = Inf,     interval = c(""none"", ""confidence"", ""prediction""), level = 0.95,     type = c(""response"", ""terms""), terms = NULL, ...) ","base","1.1.1"
"predict.mlm","closure","","TRUE","FALSE","(object, newdata, se.fit = FALSE, ...) ","base","1.1.1"
"preplot","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"pretty","closure","","TRUE","FALSE","(x, n = 5, min.n = n%/%3, shrink.sml = 0.75, high.u.bias = 1.5,     u5.bias = 0.5 + 1.5 * high.u.bias, eps.correct = 0) ","base","1.1.1"
"print","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.anova","closure","","TRUE","FALSE","(x, digits = max(getOption(""digits"") - 2, 3), signif.stars = getOption(""show.signif.stars""),     ...) ","base","1.1.1"
"print.anova.glm","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","1.1.1"
"print.anova.lm","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","1.1.1"
"print.aov","closure","","TRUE","FALSE","(x, intercept = FALSE, tol = .Machine$double.eps^0.5,     ...) ","base","1.1.1"
"print.aovlist","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.atomic","closure","","TRUE","FALSE","(x, quote = TRUE, ...) ","base","1.1.1"
"print.by","closure","","TRUE","FALSE","(x, ..., vsep) ","base","1.1.1"
"print.coefmat","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 2), signif.stars = getOption(""show.signif.stars""),     dig.tst = max(1, min(5, digits - 1)), cs.ind = 1:k, tst.ind = k +         1, zap.ind = integer(0), P.values = NULL, has.Pvalue = nc >=         4 && substr(colnames(x)[nc], 1, 3) == ""Pr("", na.print = """",     ...) ","base","1.1.1"
"print.data.frame","closure","","TRUE","FALSE","(x, ..., digits = NULL, quote = FALSE, right = TRUE) ","base","1.1.1"
"print.default","closure","","TRUE","FALSE","(x, digits = NULL, quote = TRUE, na.print = NULL, print.gap = NULL,     right = FALSE, ...) ","base","1.1.1"
"print.density","closure","","TRUE","FALSE","(x, digits = NULL, ...) ","base","1.1.1"
"print.dummy.coef","closure","","TRUE","FALSE","(x, ..., title) ","base","1.1.1"
"print.dummy.coef.list","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.factor","closure","","TRUE","FALSE","(x, quote = FALSE, ...) ","base","1.1.1"
"print.family","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.formula","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.ftable","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"print.glm","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","1.1.1"
"print.glm.null","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","1.1.1"
"print.htest","closure","","TRUE","FALSE","(x, digits = 4, quote = TRUE, prefix = """", ...) ","base","1.1.1"
"print.infl","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 4), ...) ","base","1.1.1"
"print.listof","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.lm","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","1.1.1"
"print.lm.null","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","1.1.1"
"print.matrix","closure","","TRUE","FALSE","(x, rowlab = dn[[1]], collab = dn[[2]], quote = TRUE,     right = FALSE, na.print = NULL, print.gap = NULL, ...) ","base","1.1.1"
"print.mtable","closure","","TRUE","FALSE","(x, ..., digits = getOption(""digits""), quote = FALSE,     right = FALSE) ","base","1.1.1"
"print.noquote","closure","","TRUE","FALSE","(obj, ...) ","base","1.1.1"
"print.ordered","closure","","TRUE","FALSE","(x, quote = FALSE) ","base","1.1.1"
"print.plot","closure","","TRUE","FALSE","() ","base","1.1.1"
"print.recordedplot","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"print.simple.list","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.socket","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.summary.aov","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), symbolic.cor = p >     4, signif.stars = getOption(""show.signif.stars""), ...) ","base","1.1.1"
"print.summary.aovlist","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.summary.glm","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     symbolic.cor = p > 4, signif.stars = getOption(""show.signif.stars""),     ...) ","base","1.1.1"
"print.summary.glm.null","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","1.1.1"
"print.summary.lm","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), symbolic.cor = p >     4, signif.stars = getOption(""show.signif.stars""), ...) ","base","1.1.1"
"print.summary.lm.null","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","base","1.1.1"
"print.table","closure","","TRUE","FALSE","(x, digits = getOption(""digits""), quote = FALSE, na.print = """",     ...) ","base","1.1.1"
"print.tables.aov","closure","","TRUE","FALSE","(x, digits = 4, ...) ","base","1.1.1"
"print.tabular","closure","","TRUE","FALSE","(table, digits = max(3, getOption(""digits"") - 3), na.print = """",     ...) ","base","1.1.1"
"print.terms","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"print.ts","closure","","TRUE","FALSE","(x, calendar, ...) ","base","1.1.1"
"prmatrix","closure","","TRUE","FALSE","(x, rowlab = dn[[1]], collab = dn[[2]], quote = TRUE,     right = FALSE, na.print = NULL, print.gap = NULL, ...) ","base","1.1.1"
"proc.time","builtin","","TRUE","NA","","base","1.1.1"
"prod","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"profile","closure","","TRUE","FALSE","(fitted, which, maxpts, ...) ","base","1.1.1"
"proj","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"proj.aov","closure","","TRUE","FALSE","(object, onedf = FALSE, unweighted.scale = FALSE) ","base","1.1.1"
"proj.aovlist","closure","","TRUE","FALSE","(object, onedf = FALSE, unweighted.scale = FALSE) ","base","1.1.1"
"proj.default","closure","","TRUE","FALSE","(object, onedf = TRUE, ...) ","base","1.1.1"
"proj.lm","closure","","TRUE","FALSE","(object, onedf = FALSE, unweighted.scale = FALSE) ","base","1.1.1"
"prompt","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"prompt.data.frame","closure","","TRUE","FALSE","(object, filename = paste0(name, "".Rd"")) ","base","1.1.1"
"prompt.default","closure","","TRUE","FALSE","(object, filename = paste0(name, "".Rd""), force.function = FALSE) ","base","1.1.1"
"prop.table","closure","","TRUE","FALSE","(x, margin) ","base","1.1.1"
"provide","closure","","TRUE","FALSE","(package) ","base","1.1.1"
"ps.options","closure","","TRUE","FALSE","(..., reset = FALSE, override.check = FALSE) ","base","1.1.1"
"psignrank","closure","","TRUE","FALSE","(q, n, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pt","closure","","TRUE","FALSE","(q, df, ncp, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"ptukey","closure","","TRUE","FALSE","(q, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"punif","closure","","TRUE","FALSE","(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pweibull","closure","","TRUE","FALSE","(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"pwilcox","closure","","TRUE","FALSE","(q, m, n, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"q","closure","","TRUE","FALSE","(save = ""default"", status = 0, runLast = TRUE) ","base","1.1.1"
"qbeta","closure","","TRUE","FALSE","(p, shape1, shape2, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qbinom","closure","","TRUE","FALSE","(p, size, prob, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qcauchy","closure","","TRUE","FALSE","(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qchisq","closure","","TRUE","FALSE","(p, df, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qexp","closure","","TRUE","FALSE","(p, rate = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qf","closure","","TRUE","FALSE","(p, df1, df2, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qgamma","closure","","TRUE","FALSE","(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qgeom","closure","","TRUE","FALSE","(p, prob, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qhyper","closure","","TRUE","FALSE","(p, m, n, k, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qlnorm","closure","","TRUE","FALSE","(p, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qlogis","closure","","TRUE","FALSE","(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qnbinom","closure","","TRUE","FALSE","(p, size, prob, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qnchisq","closure","","TRUE","FALSE","(p, df, lambda) ","base","1.1.1"
"qnorm","closure","","TRUE","FALSE","(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qpois","closure","","TRUE","FALSE","(p, lambda, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qqline","closure","","TRUE","FALSE","(y, ...) ","base","1.1.1"
"qqnorm","closure","","TRUE","FALSE","(y, ylim, main = ""Normal Q-Q Plot"", xlab = ""Theoretical Quantiles"",     ylab = ""Sample Quantiles"", plot.it = TRUE, ...) ","base","1.1.1"
"qqplot","closure","","TRUE","FALSE","(x, y, plot.it = TRUE, xlab = deparse(substitute(x)),     ylab = deparse(substitute(y)), ...) ","base","1.1.1"
"qr","closure","","TRUE","FALSE","(x, tol = 1e-07) ","base","1.1.1"
"qr.Q","closure","","TRUE","FALSE","(qr, complete = FALSE, Dvec = rep(if (cmplx) 1 + 0+0i else 1,     if (complete) dqr[1] else min(dqr))) ","base","1.1.1"
"qr.R","closure","","TRUE","FALSE","(qr, complete = FALSE) ","base","1.1.1"
"qr.X","closure","","TRUE","FALSE","(qr, complete = FALSE, ncol = if (complete) nrow(R) else min(dim(R))) ","base","1.1.1"
"qr.coef","closure","","TRUE","FALSE","(qr, y) ","base","1.1.1"
"qr.fitted","closure","","TRUE","FALSE","(qr, y, k = qr$rank) ","base","1.1.1"
"qr.qty","closure","","TRUE","FALSE","(qr, y) ","base","1.1.1"
"qr.qy","closure","","TRUE","FALSE","(qr, y) ","base","1.1.1"
"qr.resid","closure","","TRUE","FALSE","(qr, y) ","base","1.1.1"
"qr.solve","closure","","TRUE","FALSE","(a, b, tol = 1e-07) ","base","1.1.1"
"qsignrank","closure","","TRUE","FALSE","(p, n, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qt","closure","","TRUE","FALSE","(p, df, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qtukey","closure","","TRUE","FALSE","(p, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"quantile","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"quantile.default","closure","","TRUE","FALSE","(x, probs = seq(0, 1, 0.25), na.rm = FALSE, names = TRUE) ","base","1.1.1"
"quasi","closure","","TRUE","FALSE","(link = ""identity"", variance = ""constant"") ","base","1.1.1"
"quasibinomial","closure","","TRUE","FALSE","(link = ""logit"") ","base","1.1.1"
"quasipoisson","closure","","TRUE","FALSE","(link = ""log"") ","base","1.1.1"
"quit","closure","","TRUE","FALSE","(save = ""default"", status = 0, runLast = TRUE) ","base","1.1.1"
"qunif","closure","","TRUE","FALSE","(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"quote","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"qweibull","closure","","TRUE","FALSE","(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"qwilcox","closure","","TRUE","FALSE","(p, m, n, lower.tail = TRUE, log.p = FALSE) ","base","1.1.1"
"rainbow","closure","","TRUE","FALSE","(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n,     gamma = 1) ","base","1.1.1"
"range","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"range.default","closure","","TRUE","FALSE","(..., na.rm = FALSE, finite = FALSE) ","base","1.1.1"
"rank","closure","","TRUE","FALSE","(x, na.last = TRUE) ","base","1.1.1"
"rbeta","closure","","TRUE","FALSE","(n, shape1, shape2) ","base","1.1.1"
"rbind","closure","","TRUE","FALSE","(..., deparse.level = 1) ","base","1.1.1"
"rbind.data.frame","closure","","TRUE","FALSE","(..., deparse.level = 1) ","base","1.1.1"
"rbinom","closure","","TRUE","FALSE","(n, size, prob) ","base","1.1.1"
"rcauchy","closure","","TRUE","FALSE","(n, location = 0, scale = 1) ","base","1.1.1"
"rchisq","closure","","TRUE","FALSE","(n, df, ncp = 0) ","base","1.1.1"
"read.csv","closure","","TRUE","FALSE","(file, header = TRUE, sep = "","", quote = ""\"""", dec = ""."",     ...) ","base","1.1.1"
"read.csv2","closure","","TRUE","FALSE","(file, header = TRUE, sep = "";"", quote = ""\"""", dec = "","",     ...) ","base","1.1.1"
"read.fwf","closure","","TRUE","FALSE","(file, widths, sep = ""\t"", as.is = FALSE, skip = 0,     row.names, col.names) ","base","1.1.1"
"read.socket","closure","","TRUE","FALSE","(socket, maxlen = 256, loop = FALSE) ","base","1.1.1"
"read.table","closure","","TRUE","FALSE","(file, header = FALSE, sep = """", quote = ""\""'"", dec = ""."",     row.names, col.names, as.is = FALSE, na.strings = ""NA"", skip = 0,     check.names = TRUE, strip.white = FALSE) ","base","1.1.1"
"read.table.url","closure","","TRUE","FALSE","(url, method = ""auto"", ...) ","base","1.1.1"
"readline","closure","","TRUE","FALSE","(prompt = """") ","base","1.1.1"
"real","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"recordPlot","closure","","TRUE","FALSE","() ","base","1.1.1"
"rect","closure","","TRUE","FALSE","(xleft, ybottom, xright, ytop, col = NULL, border = par(""fg""),     lty = NULL, lwd = par(""lwd""), xpd = FALSE) ","base","1.1.1"
"reformulate","closure","","TRUE","FALSE","(termlabels, response = NULL) ","base","1.1.1"
"regexpr","closure","","TRUE","FALSE","(pattern, text, extended = TRUE) ","base","1.1.1"
"relevel","closure","","TRUE","FALSE","(x, ref, ...) ","base","1.1.1"
"relevel.default","closure","","TRUE","FALSE","(x, ref, ...) ","base","1.1.1"
"relevel.factor","closure","","TRUE","FALSE","(x, ref, ...) ","base","1.1.1"
"relevel.ordered","closure","","TRUE","FALSE","(x, ref, ...) ","base","1.1.1"
"remove","closure","","TRUE","FALSE","(..., list = character(0), pos = -1, envir = pos.to.env(pos),     inherits = FALSE) ","base","1.1.1"
"rep","closure","","TRUE","FALSE","(x, times, length.out) ","base","1.1.1"
"repeat","special","","TRUE","NA","","base","1.1.1"
"replace","closure","","TRUE","FALSE","(x, list, values) ","base","1.1.1"
"replayPlot","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"replications","closure","","TRUE","FALSE","(formula, data = NULL, na.action) ","base","1.1.1"
"require","closure","","TRUE","FALSE","(package, quietly = FALSE, warn.conflicts = TRUE, keep.source = getOption(""keep.source.pkgs"")) ","base","1.1.1"
"resid","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"residuals","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"residuals.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"residuals.glm","closure","","TRUE","FALSE","(object, type = c(""deviance"", ""pearson"", ""working"",     ""response"", ""partial""), ...) ","base","1.1.1"
"residuals.lm","closure","","TRUE","FALSE","(object, type = c(""working"", ""response"", ""deviance"",     ""pearson"", ""partial""), ...) ","base","1.1.1"
"restart","closure","","TRUE","FALSE","(on = TRUE) ","base","1.1.1"
"return","special","","TRUE","NA","","base","1.1.1"
"rev","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"rexp","closure","","TRUE","FALSE","(n, rate = 1) ","base","1.1.1"
"rf","closure","","TRUE","FALSE","(n, df1, df2) ","base","1.1.1"
"rgamma","closure","","TRUE","FALSE","(n, shape, scale = 1) ","base","1.1.1"
"rgb","closure","","TRUE","FALSE","(red, green, blue, names = NULL) ","base","1.1.1"
"rgeom","closure","","TRUE","FALSE","(n, prob) ","base","1.1.1"
"rhyper","closure","","TRUE","FALSE","(nn, m, n, k) ","base","1.1.1"
"rle","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"rlnorm","closure","","TRUE","FALSE","(n, meanlog = 0, sdlog = 1) ","base","1.1.1"
"rlogis","closure","","TRUE","FALSE","(n, location = 0, scale = 1) ","base","1.1.1"
"rm","closure","","TRUE","FALSE","(..., list = character(0), pos = -1, envir = pos.to.env(pos),     inherits = FALSE) ","base","1.1.1"
"rnbinom","closure","","TRUE","FALSE","(n, size, prob) ","base","1.1.1"
"rnorm","closure","","TRUE","FALSE","(n, mean = 0, sd = 1) ","base","1.1.1"
"round","closure","","TRUE","FALSE","(x, digits = 0) ","base","1.1.1"
"row","closure","","TRUE","FALSE","(x, as.factor = FALSE) ","base","1.1.1"
"row.names","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"row.names<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"rownames","closure","","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""row"") ","base","1.1.1"
"rownames<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"rowsum","closure","","TRUE","FALSE","(x, group, reorder = TRUE) ","base","1.1.1"
"rpois","closure","","TRUE","FALSE","(n, lambda) ","base","1.1.1"
"rsignrank","closure","","TRUE","FALSE","(nn, n) ","base","1.1.1"
"rstandard","closure","","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj),     sd = sqrt(deviance(lm.obj)/df.residual(lm.obj))) ","base","1.1.1"
"rstudent","closure","","TRUE","FALSE","(lm.obj, infl = lm.influence(lm.obj), res = weighted.residuals(lm.obj)) ","base","1.1.1"
"rt","closure","","TRUE","FALSE","(n, df) ","base","1.1.1"
"rug","closure","","TRUE","FALSE","(x, ticksize = 0.03, side = 1, lwd = 0.5, col) ","base","1.1.1"
"runif","closure","","TRUE","FALSE","(n, min = 0, max = 1) ","base","1.1.1"
"rweibull","closure","","TRUE","FALSE","(n, shape, scale = 1) ","base","1.1.1"
"rwilcox","closure","","TRUE","FALSE","(nn, m, n) ","base","1.1.1"
"sample","closure","","TRUE","FALSE","(x, size, replace = FALSE, prob = NULL) ","base","1.1.1"
"sapply","closure","","TRUE","FALSE","(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE) ","base","1.1.1"
"save","closure","","TRUE","FALSE","(..., list = character(0), file = """", ascii = FALSE,     oldstyle = FALSE) ","base","1.1.1"
"save.image","closure","","TRUE","FALSE","(file = "".RData"", oldstyle = FALSE) ","base","1.1.1"
"save.plot","closure","","TRUE","FALSE","(file = ""Rplots.ps"") ","base","1.1.1"
"scale","closure","","TRUE","FALSE","(x, ..., scale = TRUE) ","base","1.1.1"
"scale.default","closure","","TRUE","FALSE","(x, center = TRUE, scale = TRUE) ","base","1.1.1"
"scan","closure","","TRUE","FALSE","(file = """", what = double(0), nmax = -1, n = -1, sep = """",     quote = if (sep == ""\n"") """" else ""'\"""", dec = ""."", skip = 0,     nlines = 0, na.strings = ""NA"", flush = FALSE, strip.white = FALSE,     quiet = FALSE) ","base","1.1.1"
"scan.url","closure","","TRUE","FALSE","(url, file = tempfile(), method = ""auto"", ...) ","base","1.1.1"
"screen","closure","","TRUE","FALSE","(n = .split.cur.screen, new = TRUE) ","base","1.1.1"
"sd","closure","","TRUE","FALSE","(x, na.rm = FALSE) ","base","1.1.1"
"se.aov","closure","","TRUE","FALSE","(object, n, type = ""means"") ","base","1.1.1"
"se.aovlist","closure","","TRUE","FALSE","(object, dn.proj, dn.strata, factors, mf, efficiency,     n, type = ""diff.means"", ...) ","base","1.1.1"
"se.contrast","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"se.contrast.aov","closure","","TRUE","FALSE","(object, contrast.obj, coef = contr.helmert(ncol(contrast))[,     1], data = NULL, ...) ","base","1.1.1"
"se.contrast.aovlist","closure","","TRUE","FALSE","(object, contrast.obj, coef = contr.helmert(ncol(contrast))[,     1], data = NULL, ...) ","base","1.1.1"
"search","closure","","TRUE","FALSE","() ","base","1.1.1"
"searchpaths","closure","","TRUE","FALSE","() ","base","1.1.1"
"segments","closure","","TRUE","FALSE","(x0, y0, x1, y1, col = par(""fg""), lty = par(""lty""),     lwd = par(""lwd""), ...) ","base","1.1.1"
"seq","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"seq.default","closure","","TRUE","FALSE","(from = 1, to = 1, by = ((to - from)/(length.out - 1)),     length.out = NULL, along.with = NULL) ","base","1.1.1"
"sequence","closure","","TRUE","FALSE","(nvec) ","base","1.1.1"
"set.seed","closure","","TRUE","FALSE","(seed, kind = NULL) ","base","1.1.1"
"setdiff","closure","","TRUE","FALSE","(x, y) ","base","1.1.1"
"setequal","closure","","TRUE","FALSE","(x, y) ","base","1.1.1"
"setwd","closure","","TRUE","FALSE","(dir) ","base","1.1.1"
"show.data","closure","","TRUE","FALSE","(package = .packages(), lib.loc = .lib.loc) ","base","1.1.1"
"sign","builtin","","TRUE","NA","","base","1.1.1"
"signif","closure","","TRUE","FALSE","(x, digits = 6) ","base","1.1.1"
"sin","builtin","","TRUE","NA","","base","1.1.1"
"single","closure","","TRUE","FALSE","(length = 0) ","base","1.1.1"
"sinh","builtin","","TRUE","NA","","base","1.1.1"
"sink","closure","","TRUE","FALSE","(file = NULL, append = FALSE) ","base","1.1.1"
"solve","closure","","TRUE","FALSE","(a, b, ...) ","base","1.1.1"
"solve.default","closure","","TRUE","FALSE","(a, b, tol = 1e-07) ","base","1.1.1"
"solve.qr","closure","","TRUE","FALSE","(a, b, tol = 1e-07) ","base","1.1.1"
"sort","closure","","TRUE","FALSE","(x, partial = NULL, na.last = NA) ","base","1.1.1"
"sort.list","closure","","TRUE","FALSE","(x, partial = NULL, na.last = TRUE) ","base","1.1.1"
"source","closure","","TRUE","FALSE","(file, local = FALSE, echo = verbose, print.eval = echo,     verbose = getOption(""verbose""), prompt.echo = getOption(""prompt""),     max.deparse.length = 150, chdir = FALSE) ","base","1.1.1"
"source.url","closure","","TRUE","FALSE","(url, file = tempfile(), ...) ","base","1.1.1"
"spline","closure","","TRUE","FALSE","(x, y = NULL, n = 3 * length(x), method = ""fmm"", xmin = min(x),     xmax = max(x)) ","base","1.1.1"
"splinefun","closure","","TRUE","FALSE","(x, y = NULL, method = ""fmm"") ","base","1.1.1"
"split","closure","","TRUE","FALSE","(x, f) ","base","1.1.1"
"split.data.frame","closure","","TRUE","FALSE","(x, f) ","base","1.1.1"
"split.default","closure","","TRUE","FALSE","(x, f) ","base","1.1.1"
"split.screen","closure","","TRUE","FALSE","(figs, screen = if (exists("".split.screens"", envir = .GlobalEnv)) .split.cur.screen else 0,     erase = TRUE) ","base","1.1.1"
"sqrt","builtin","","TRUE","NA","","base","1.1.1"
"stack","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"stack.data.frame","closure","","TRUE","FALSE","(x, select) ","base","1.1.1"
"stack.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"stars","closure","","TRUE","FALSE","(x, full = TRUE, scale = TRUE, radius = TRUE, labels = dimnames(x)[[1]],     locations = NULL, xlimit = NULL, ylimit = NULL, len = 1,     colors = NULL, key.loc = NULL, key.labels = NULL, draw.segments = FALSE,     draw.axes = FALSE, ...) ","base","1.1.1"
"start","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"start.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"stat.anova","closure","","TRUE","FALSE","(table, test = c(""Chisq"", ""F"", ""Cp""), scale, df.scale,     n) ","base","1.1.1"
"stem","closure","","TRUE","FALSE","(x, scale = 1, width = 80, atom = 1e-08) ","base","1.1.1"
"step","closure","","TRUE","FALSE","(object, scope, scale = 0, direction = c(""both"", ""backward"",     ""forward""), trace = 1, keep = NULL, steps = 1000, k = 2,     ...) ","base","1.1.1"
"stop","closure","","TRUE","FALSE","(message = NULL, call. = TRUE) ","base","1.1.1"
"stopifnot","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"storage.mode","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"storage.mode<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"str","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"str.data.frame","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"str.default","closure","","TRUE","FALSE","(object, max.level = 0, vec.len = 4, digits.d = 3, nchar.max = 128,     give.attr = TRUE, give.length = TRUE, wid = getOption(""width""),     nest.lev = 0, indent.str = paste(rep("" "", max(0, nest.lev +         1)), collapse = "".."")) ","base","1.1.1"
"strheight","closure","","TRUE","FALSE","(s, units = ""user"", cex = NULL) ","base","1.1.1"
"stripplot","closure","","TRUE","FALSE","(x, method = ""overplot"", jitter = 0.1, offset = 1/3,     vertical = FALSE, group.names, xlim = NULL, ylim = NULL,     main = """", ylab = """", xlab = """", pch = 0, col = par(""fg""),     cex = par(""cex"")) ","base","1.1.1"
"strsplit","closure","","TRUE","FALSE","(x, split) ","base","1.1.1"
"structure","closure","","TRUE","FALSE","(.Data, ...) ","base","1.1.1"
"strwidth","closure","","TRUE","FALSE","(s, units = ""user"", cex = NULL) ","base","1.1.1"
"sub","closure","","TRUE","FALSE","(pattern, replacement, x, ignore.case = FALSE, extended = TRUE) ","base","1.1.1"
"subset","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"subset.data.frame","closure","","TRUE","FALSE","(dfr, subset, select) ","base","1.1.1"
"subset.default","closure","","TRUE","FALSE","(x, subset) ","base","1.1.1"
"substitute","special","","TRUE","NA","","base","1.1.1"
"substr","closure","","TRUE","FALSE","(x, start, stop) ","base","1.1.1"
"substring","closure","","TRUE","FALSE","(text, first, last = 1e+06) ","base","1.1.1"
"sum","closure","","TRUE","FALSE","(..., na.rm = FALSE) ","base","1.1.1"
"summary","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"summary.aov","closure","","TRUE","FALSE","(object, intercept = FALSE, keep.zero.df = TRUE, ...) ","base","1.1.1"
"summary.aovlist","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"summary.data.frame","closure","","TRUE","FALSE","(object, maxsum = 7, digits = getOption(""digits""), ...) ","base","1.1.1"
"summary.default","closure","","TRUE","FALSE","(object, ..., digits = max(3, getOption(""digits"") -     3)) ","base","1.1.1"
"summary.factor","closure","","TRUE","FALSE","(object, maxsum = 100, ...) ","base","1.1.1"
"summary.glm","closure","","TRUE","FALSE","(object, dispersion = NULL, correlation = FALSE, ...) ","base","1.1.1"
"summary.glm.null","closure","","TRUE","FALSE","(object, dispersion = NULL, correlation = TRUE, na.action = na.omit,     ...) ","base","1.1.1"
"summary.infl","closure","","TRUE","FALSE","(object, digits = max(2, getOption(""digits"") - 5), ...) ","base","1.1.1"
"summary.lm","closure","","TRUE","FALSE","(object, correlation = FALSE, ...) ","base","1.1.1"
"summary.lm.null","closure","","TRUE","FALSE","(z, correlation = FALSE, ...) ","base","1.1.1"
"summary.matrix","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"summary.mlm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"sunflowerplot","closure","","TRUE","FALSE","(x, y = NULL, number, log = """", digits = 6, xlab = NULL,     ylab = NULL, xlim = NULL, ylim = NULL, add = FALSE, rotate = FALSE,     pch = 16, cex = 0.8, cex.fact = 1.5, size = 1/8, seg.col = 2,     seg.lwd = 1.5, ...) ","base","1.1.1"
"svd","closure","","TRUE","FALSE","(x, nu = min(n, p), nv = min(n, p)) ","base","1.1.1"
"sweep","closure","","TRUE","FALSE","(x, MARGIN, STATS, FUN = ""-"", ...) ","base","1.1.1"
"switch","closure","","TRUE","FALSE","(EXPR, ...) ","base","1.1.1"
"symbol.C","builtin","","TRUE","NA","","base","1.1.1"
"symbol.For","builtin","","TRUE","NA","","base","1.1.1"
"symbols","closure","","TRUE","FALSE","(x, y, circles, squares, rectangles, stars, thermometers,     boxplots, inches = TRUE, add = FALSE, fg = 1, bg = NA, xlab = """",     ylab = """", ...) ","base","1.1.1"
"symnum","closure","","TRUE","FALSE","(x, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95), symbols = c("" "",     ""."", "","", ""+"", ""*"", ""B""), legend = length(symbols) >= 3,     na = ""?"", eps = 1e-05, corr = missing(cutpoints), show.max = if (corr) ""1"",     show.min = NULL, lower.triangular = corr & is.matrix(x),     diag.lower.tri = corr & !is.null(show.max)) ","base","1.1.1"
"sys.call","closure","","TRUE","FALSE","(which = 0) ","base","1.1.1"
"sys.calls","closure","","TRUE","FALSE","() ","base","1.1.1"
"sys.frame","closure","","TRUE","FALSE","(which = 0) ","base","1.1.1"
"sys.frames","closure","","TRUE","FALSE","() ","base","1.1.1"
"sys.function","closure","","TRUE","FALSE","(which = 0) ","base","1.1.1"
"sys.nframe","closure","","TRUE","FALSE","() ","base","1.1.1"
"sys.on.exit","closure","","TRUE","FALSE","() ","base","1.1.1"
"sys.parent","closure","","TRUE","FALSE","(n = 1) ","base","1.1.1"
"sys.parents","closure","","TRUE","FALSE","() ","base","1.1.1"
"sys.source","closure","","TRUE","FALSE","(file, envir = NULL, chdir = FALSE, keep.source = getOption(""keep.source.pkgs"")) ","base","1.1.1"
"sys.status","closure","","TRUE","FALSE","() ","base","1.1.1"
"system","closure","","TRUE","FALSE","(command, intern = FALSE, ignore.stderr = FALSE) ","base","1.1.1"
"system.file","closure","","TRUE","FALSE","(..., pkg = .packages(), lib = .lib.loc) ","base","1.1.1"
"system.test","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"system.time","closure","","TRUE","FALSE","(expr) ","base","1.1.1"
"t","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"t.data.frame","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"t.default","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"table","closure","","TRUE","FALSE","(..., exclude = c(NA, NaN), dnn = list.names(...), deparse.level = 1) ","base","1.1.1"
"tabulate","closure","","TRUE","FALSE","(bin, nbins = max(1, bin)) ","base","1.1.1"
"tan","builtin","","TRUE","NA","","base","1.1.1"
"tanh","builtin","","TRUE","NA","","base","1.1.1"
"tapply","closure","","TRUE","FALSE","(X, INDEX, FUN = NULL, simplify = TRUE, ...) ","base","1.1.1"
"tempfile","closure","","TRUE","FALSE","(pattern = ""file"") ","base","1.1.1"
"termplot","closure","","TRUE","FALSE","(model, data = model.frame(model), partial.resid = FALSE,     rug = FALSE, terms = NULL, se = FALSE, xlabs = NULL, ylab = NULL,     main = NULL, col.term = 2, lwd.term = 1.5, col.se = ""orange"",     lty.se = 2, lwd.se = 1, col.res = ""gray"", cex = 1, pch = par(""pch""),     ...) ","base","1.1.1"
"terms","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"terms.aovlist","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"terms.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"terms.formula","closure","","TRUE","FALSE","(x, specials = NULL, abb = NULL, data = NULL, neg.out = TRUE,     keep.order = FALSE) ","base","1.1.1"
"terms.terms","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"terrain.colors","closure","","TRUE","FALSE","(n) ","base","1.1.1"
"tetragamma","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"text","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"text.default","closure","","TRUE","FALSE","(x, y = NULL, labels = seq(along = x), adj = NULL, pos = NULL,     offset = 0.5, vfont = NULL, cex = 1, col = NULL, font = NULL,     xpd = NULL, ...) ","base","1.1.1"
"time","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"time.default","closure","","TRUE","FALSE","(x, offset = 0, ...) ","base","1.1.1"
"time.ts","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"title","closure","","TRUE","FALSE","(main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     line = NA, outer = FALSE, ...) ","base","1.1.1"
"tolower","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"topo.colors","closure","","TRUE","FALSE","(n) ","base","1.1.1"
"toupper","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"trace","builtin","","TRUE","NA","","base","1.1.1"
"traceback","closure","","TRUE","FALSE","() ","base","1.1.1"
"transform","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"transform.data.frame","closure","","TRUE","FALSE","(dfr, ...) ","base","1.1.1"
"transform.default","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"trigamma","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"trunc","builtin","","TRUE","NA","","base","1.1.1"
"try","closure","","TRUE","FALSE","(expr, first = TRUE) ","base","1.1.1"
"ts","closure","","TRUE","FALSE","(data = NA, start = 1, end = numeric(0), frequency = 1,     deltat = 1, ts.eps = getOption(""ts.eps""), class = if (nseries >         1) c(""mts"", ""ts"") else ""ts"", names = if (!is.null(dimnames(data))) colnames(data) else paste(""Series"",         seq(nseries))) ","base","1.1.1"
"tsp","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"tsp<-","closure","","TRUE","FALSE","(x, value) ","base","1.1.1"
"typeof","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"unclass","builtin","","TRUE","NA","","base","1.1.1"
"undebug","builtin","","TRUE","NA","","base","1.1.1"
"undoc","closure","","TRUE","FALSE","(pkg, dir) ","base","1.1.1"
"union","closure","","TRUE","FALSE","(x, y) ","base","1.1.1"
"unique","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"uniroot","closure","","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     tol = .Machine$double.eps^0.25, maxiter = 1000, ...) ","base","1.1.1"
"unix","closure","","TRUE","FALSE","(call, intern = FALSE) ","base","1.1.1"
"unix.time","closure","","TRUE","FALSE","(expr) ","base","1.1.1"
"unlink","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"unlist","closure","","TRUE","FALSE","(x, recursive = TRUE, use.names = TRUE) ","base","1.1.1"
"unname","closure","","TRUE","FALSE","(obj, force = FALSE) ","base","1.1.1"
"unstack","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"unstack.data.frame","closure","","TRUE","FALSE","(x, form = formula(x)) ","base","1.1.1"
"unstack.default","closure","","TRUE","FALSE","(x, form) ","base","1.1.1"
"untrace","builtin","","TRUE","NA","","base","1.1.1"
"update","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"update.default","closure","","TRUE","FALSE","(object, formula., ..., evaluate = TRUE) ","base","1.1.1"
"update.formula","closure","","TRUE","FALSE","(old, new) ","base","1.1.1"
"update.packages","closure","","TRUE","FALSE","(lib.loc = .lib.loc, CRAN = getOption(""CRAN""), contriburl = contrib.url(CRAN),     method = ""auto"", instlib = NULL, ask = TRUE, available = NULL,     destdir = NULL) ","base","1.1.1"
"upper.tri","closure","","TRUE","FALSE","(x, diag = FALSE) ","base","1.1.1"
"url.show","closure","","TRUE","FALSE","(url, title = url, delete.file = TRUE, file = tempfile(),     method = ""auto"", ...) ","base","1.1.1"
"var","closure","","TRUE","FALSE","(x, y = NULL, na.rm = FALSE, use) ","base","1.1.1"
"variable.names","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"variable.names.default","closure","","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""col"") ","base","1.1.1"
"variable.names.lm","closure","","TRUE","FALSE","(obj, full = FALSE) ","base","1.1.1"
"vector","closure","","TRUE","FALSE","(mode = ""logical"", length = 0) ","base","1.1.1"
"version","list","simple.list","TRUE","FALSE","NA","base","1.1.1"
"vi","closure","","TRUE","FALSE","(name = NULL, file = """") ","base","1.1.1"
"warning","closure","","TRUE","FALSE","(message = NULL) ","base","1.1.1"
"warnings","closure","","TRUE","FALSE","(...) ","base","1.1.1"
"weighted.mean","closure","","TRUE","FALSE","(x, w, na.rm = FALSE) ","base","1.1.1"
"weighted.residuals","closure","","TRUE","FALSE","(obj, drop0 = TRUE) ","base","1.1.1"
"weights","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"weights.default","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"weights.lm","closure","","TRUE","FALSE","(object, ...) ","base","1.1.1"
"which","closure","","TRUE","FALSE","(logic, arr.ind = FALSE) ","base","1.1.1"
"which.max","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"which.min","closure","","TRUE","FALSE","(x) ","base","1.1.1"
"while","special","","TRUE","NA","","base","1.1.1"
"window","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"window.default","closure","","TRUE","FALSE","(x, start = NULL, end = NULL, frequency = NULL, deltat = NULL,     extend = FALSE, ...) ","base","1.1.1"
"window.ts","closure","","TRUE","FALSE","(x, ...) ","base","1.1.1"
"write","closure","","TRUE","FALSE","(x, file = ""data"", ncolumns = if (is.character(x)) 1 else 5,     append = FALSE) ","base","1.1.1"
"write.socket","closure","","TRUE","FALSE","(socket, string) ","base","1.1.1"
"write.table","closure","","TRUE","FALSE","(x, file = """", append = FALSE, quote = TRUE, sep = "" "",     eol = ""\n"", na = ""NA"", dec = ""."", row.names = TRUE, col.names = TRUE) ","base","1.1.1"
"x11","closure","","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12,     gamma = 1, colortype = getOption(""X11colortype""), maxcubesize = 256) ","base","1.1.1"
"xedit","closure","","TRUE","FALSE","(name = NULL, file = """") ","base","1.1.1"
"xemacs","closure","","TRUE","FALSE","(name = NULL, file = """") ","base","1.1.1"
"xfig","closure","","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.fig"", ""Rplot%03d.fig""),     onefile = FALSE, ...) ","base","1.1.1"
"xinch","closure","","TRUE","FALSE","(x = 1, warn.log = TRUE) ","base","1.1.1"
"xor","closure","","TRUE","FALSE","(x, y) ","base","1.1.1"
"xpdrows.data.frame","closure","","TRUE","FALSE","(x, old.rows, new.rows) ","base","1.1.1"
"xy.coords","closure","","TRUE","FALSE","(x, y, xlab = NULL, ylab = NULL, log = NULL, recycle = FALSE) ","base","1.1.1"
"xyinch","closure","","TRUE","FALSE","(xy = 1, warn.log = TRUE) ","base","1.1.1"
"xyz.coords","closure","","TRUE","FALSE","(x, y, z, xlab = NULL, ylab = NULL, zlab = NULL, log = NULL,     recycle = FALSE) ","base","1.1.1"
"yinch","closure","","TRUE","FALSE","(y = 1, warn.log = TRUE) ","base","1.1.1"
"zapsmall","closure","","TRUE","FALSE","(x, digits = getOption(""digits"")) ","base","1.1.1"
"zip.file.extract","closure","","TRUE","FALSE","(file, zipname = ""R.zip"") ","base","1.1.1"
"{","special","","TRUE","NA","","base","1.1.1"
"|","builtin","","TRUE","NA","","base","1.1.1"
"||","special","","TRUE","NA","","base","1.1.1"
"~","special","","TRUE","NA","","base","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","ctest","1.1.1"
"ansari.test","closure","","TRUE","FALSE","(x, y, alternative = c(""two.sided"", ""less"", ""greater""),     exact = NULL, conf.int = FALSE, conf.level = 0.95) ","ctest","1.1.1"
"bartlett.test","closure","","TRUE","FALSE","(x, g) ","ctest","1.1.1"
"binom.test","closure","","TRUE","FALSE","(x, n, p = 0.5, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95) ","ctest","1.1.1"
"chisq.test","closure","","TRUE","FALSE","(x, y = NULL, correct = TRUE, p = rep(1/length(x), length(x)),     simulate.p.value = FALSE, B = 2000) ","ctest","1.1.1"
"cor.test","closure","","TRUE","FALSE","(x, y, alternative = c(""two.sided"", ""less"", ""greater""),     method = c(""pearson"", ""kendall"", ""spearman""), exact = NULL) ","ctest","1.1.1"
"fisher.test","closure","","TRUE","FALSE","(x, y = NULL, workspace = 2e+05, hybrid = FALSE, or = 1,     alternative = ""two.sided"", conf.level = 0.95) ","ctest","1.1.1"
"fligner.test","closure","","TRUE","FALSE","(x, g) ","ctest","1.1.1"
"friedman.test","closure","","TRUE","FALSE","(y, groups, blocks) ","ctest","1.1.1"
"kruskal.test","closure","","TRUE","FALSE","(x, g) ","ctest","1.1.1"
"ks.test","closure","","TRUE","FALSE","(x, y, ..., alternative = c(""two.sided"", ""less"", ""greater"")) ","ctest","1.1.1"
"mantelhaen.test","closure","","TRUE","FALSE","(x, y = NULL, z = NULL, correct = TRUE) ","ctest","1.1.1"
"mcnemar.test","closure","","TRUE","FALSE","(x, y = NULL, correct = TRUE) ","ctest","1.1.1"
"mood.test","closure","","TRUE","FALSE","(x, y, alternative = c(""two.sided"", ""less"", ""greater"")) ","ctest","1.1.1"
"pairwise.prop.test","closure","","TRUE","FALSE","(x, n, p.adjust.method = p.adjust.methods, ...) ","ctest","1.1.1"
"pairwise.t.test","closure","","TRUE","FALSE","(x, g, p.adjust.method = p.adjust.methods, pool.sd = TRUE,     ...) ","ctest","1.1.1"
"pairwise.table","closure","","TRUE","FALSE","(compare.levels, level.names, p.adjust.method) ","ctest","1.1.1"
"pairwise.wilcox.test","closure","","TRUE","FALSE","(x, g, p.adjust.method = p.adjust.methods, ...) ","ctest","1.1.1"
"power.prop.test","closure","","TRUE","FALSE","(n = NULL, p1 = NULL, p2 = NULL, sig.level = 0.05, power = NULL,     alternative = c(""two.sided"", ""one.sided"")) ","ctest","1.1.1"
"power.t.test","closure","","TRUE","FALSE","(n = NULL, delta = NULL, sd = 1, sig.level = 0.05, power = NULL,     type = c(""two.sample"", ""one.sample"", ""paired""), alternative = c(""two.sided"",         ""one.sided"")) ","ctest","1.1.1"
"print.pairwise.htest","closure","","TRUE","FALSE","(x) ","ctest","1.1.1"
"print.power.htest","closure","","TRUE","FALSE","(x) ","ctest","1.1.1"
"prop.test","closure","","TRUE","FALSE","(x, n, p = NULL, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95, correct = TRUE) ","ctest","1.1.1"
"prop.trend.test","closure","","TRUE","FALSE","(x, n, score = 1:length(x)) ","ctest","1.1.1"
"quade.test","closure","","TRUE","FALSE","(y, groups, blocks) ","ctest","1.1.1"
"shapiro.test","closure","","TRUE","FALSE","(x) ","ctest","1.1.1"
"t.test","closure","","TRUE","FALSE","(x, y = NULL, alternative = c(""two.sided"", ""less"", ""greater""),     mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95) ","ctest","1.1.1"
"var.test","closure","","TRUE","FALSE","(x, y, ratio = 1, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95) ","ctest","1.1.1"
"wilcox.test","closure","","TRUE","FALSE","(x, y = NULL, alternative = c(""two.sided"", ""less"", ""greater""),     mu = 0, paired = FALSE, exact = NULL, correct = TRUE, conf.int = FALSE,     conf.level = 0.95) ","ctest","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","eda","1.1.1"
"coef.tukeyline","closure","","TRUE","FALSE","(object, ...) ","eda","1.1.1"
"fitted.tukeyline","closure","","TRUE","FALSE","(object, ...) ","eda","1.1.1"
"line","closure","","TRUE","FALSE","(x, y = NULL) ","eda","1.1.1"
"medpolish","closure","","TRUE","FALSE","(x, eps = 0.01, maxiter = 10, trace.iter = TRUE) ","eda","1.1.1"
"plot.medpolish","closure","","TRUE","FALSE","(x, main = ""Tukey Additivity Plot"", ...) ","eda","1.1.1"
"print.medpolish","closure","","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","eda","1.1.1"
"print.tukeyline","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","eda","1.1.1"
"residuals.tukeyline","closure","","TRUE","FALSE","(object, type = c(""working"", ""response"", ""deviance"",     ""pearson"", ""partial""), ...) ","eda","1.1.1"
"smooth","closure","","TRUE","FALSE","(x) ","eda","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","lqs","1.1.1"
"cov.mcd","closure","","TRUE","FALSE","(...) ","lqs","1.1.1"
"cov.mve","closure","","TRUE","FALSE","(...) ","lqs","1.1.1"
"cov.rob","closure","","TRUE","FALSE","(x, cor = FALSE, quantile.used = floor((n + p + 1)/2),     method = c(""mve"", ""mcd"", ""classical""), nsamp = ""best"", seed) ","lqs","1.1.1"
"lmsreg","closure","","TRUE","FALSE","(...) ","lqs","1.1.1"
"lqs","closure","","TRUE","FALSE","(x, ...) ","lqs","1.1.1"
"lqs.default","closure","","TRUE","FALSE","(x, y, intercept = TRUE, method = c(""lts"", ""lqs"", ""lms"",     ""S""), quantile, control = lqs.control(...), k0 = 1.548, seed,     ...) ","lqs","1.1.1"
"lqs.formula","closure","","TRUE","FALSE","(formula, data, ..., method = c(""lts"", ""lqs"", ""lms"",     ""S"", ""model.frame""), subset, na.action = na.fail, model = TRUE,     x.ret = FALSE, y.ret = FALSE, contrasts = NULL) ","lqs","1.1.1"
"ltsreg","closure","","TRUE","FALSE","(...) ","lqs","1.1.1"
"predict.lqs","closure","","TRUE","FALSE","(object, newdata, ...) ","lqs","1.1.1"
"print.lqs","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","lqs","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","modreg","1.1.1"
"anova.loess","closure","","TRUE","FALSE","(object, ...) ","modreg","1.1.1"
"ksmooth","closure","","TRUE","FALSE","(x, y, kernel = c(""box"", ""normal""), bandwidth = 0.5,     range.x = range(x), n.points = max(100, length(x)), x.points) ","modreg","1.1.1"
"loess","closure","","TRUE","FALSE","(formula, data = NULL, weights, subset, na.action, model = FALSE,     span = 0.75, enp.target, degree = 2, parametric = FALSE,     drop.square = FALSE, normalize = TRUE, family = c(""gaussian"",         ""symmetric""), method = c(""loess"", ""model.frame""), control = loess.control(...),     ...) ","modreg","1.1.1"
"loess.control","closure","","TRUE","FALSE","(surface = c(""interpolate"", ""direct""), statistics = c(""approximate"",     ""exact""), trace.hat = c(""exact"", ""approximate""), cell = 0.2,     iterations = 4, ...) ","modreg","1.1.1"
"loess.smooth","closure","","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, ...) ","modreg","1.1.1"
"plot.ppr","closure","","TRUE","FALSE","(fit, ask, type = ""o"", ...) ","modreg","1.1.1"
"pointwise","closure","","TRUE","FALSE","(results, coverage) ","modreg","1.1.1"
"ppr","closure","","TRUE","FALSE","(x, ...) ","modreg","1.1.1"
"ppr.default","closure","","TRUE","FALSE","(x, y, weights = rep(1, n), ww = rep(1, q), nterms,     max.terms = nterms, optlevel = 2, sm.method = c(""supsmu"",         ""spline"", ""gcvspline""), bass = 0, span = 0, df = 5, gcvpen = 1) ","modreg","1.1.1"
"ppr.formula","closure","","TRUE","FALSE","(formula, data = sys.parent(), weights, subset, na.action,     contrasts = NULL, ...) ","modreg","1.1.1"
"predLoess","closure","","TRUE","FALSE","(y, x, newx, s, weights, robust, span, degree, normalize,     parametric, drop.square, surface, cell, family, kd, divisor,     se = FALSE) ","modreg","1.1.1"
"predict.loess","closure","","TRUE","FALSE","(object, newdata = NULL, se = FALSE) ","modreg","1.1.1"
"predict.ppr","closure","","TRUE","FALSE","(obj, newdata, ...) ","modreg","1.1.1"
"predict.smooth.spline","closure","","TRUE","FALSE","(object, x, deriv = 0, ...) ","modreg","1.1.1"
"predict.smooth.spline.fit","closure","","TRUE","FALSE","(object, x, deriv = 0, ...) ","modreg","1.1.1"
"print.loess","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","modreg","1.1.1"
"print.ppr","closure","","TRUE","FALSE","(x, ...) ","modreg","1.1.1"
"print.smooth.spline","closure","","TRUE","FALSE","(x, ...) ","modreg","1.1.1"
"print.summary.loess","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","modreg","1.1.1"
"print.summary.ppr","closure","","TRUE","FALSE","(x, ...) ","modreg","1.1.1"
"scatter.smooth","closure","","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), xlab = deparse(substitute(x)), ylab = deparse(substitute(y)),     ylim = range(y, prediction$y), evaluation = 50, ...) ","modreg","1.1.1"
"simpleLoess","closure","","TRUE","FALSE","(y, x, weights, span = 0.75, degree = 2, parametric = FALSE,     drop.square = FALSE, normalize = TRUE, statistics = ""approximate"",     surface = ""interpolate"", cell = 0.2, iterations = 1, trace.hat = ""exact"") ","modreg","1.1.1"
"smooth.spline","closure","","TRUE","FALSE","(x, y = NULL, w = NULL, df = 5, spar = 0, cv = FALSE,     all.knots = FALSE, df.offset = 0, penalty = 1) ","modreg","1.1.1"
"summary.loess","closure","","TRUE","FALSE","(object, ...) ","modreg","1.1.1"
"summary.ppr","closure","","TRUE","FALSE","(object, ...) ","modreg","1.1.1"
"supsmu","closure","","TRUE","FALSE","(x, y, wt = rep(1, n), span = ""cv"", periodic = FALSE,     bass = 0) ","modreg","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","mva","1.1.1"
"as.dist","closure","","TRUE","FALSE","(m, diag = FALSE, upper = FALSE) ","mva","1.1.1"
"as.hclust","closure","","TRUE","FALSE","(x, ...) ","mva","1.1.1"
"as.hclust.twins","closure","","TRUE","FALSE","(x) ","mva","1.1.1"
"as.matrix.dist","closure","","TRUE","FALSE","(obj) ","mva","1.1.1"
"biplot","closure","","TRUE","FALSE","(x, ...) ","mva","1.1.1"
"biplot.default","closure","","TRUE","FALSE","(x, y, var.axes = TRUE, col, cex = rep(par(""cex""), 2),     xlabs = NULL, ylabs = NULL, expand = 1, xlim = NULL, ylim = NULL,     arrow.len = 0.1, ...) ","mva","1.1.1"
"biplot.princomp","closure","","TRUE","FALSE","(x, choices = 1:2, scale = 1, pc.biplot = FALSE, ...) ","mva","1.1.1"
"cancor","closure","","TRUE","FALSE","(x, y, xcenter = TRUE, ycenter = TRUE) ","mva","1.1.1"
"cmdscale","closure","","TRUE","FALSE","(d, k = 2, eig = FALSE) ","mva","1.1.1"
"cutree","closure","","TRUE","FALSE","(tree, k = NULL, h = NULL) ","mva","1.1.1"
"dist","closure","","TRUE","FALSE","(x, method = ""euclidean"", diag = FALSE, upper = FALSE) ","mva","1.1.1"
"hclust","closure","","TRUE","FALSE","(d, method = ""complete"") ","mva","1.1.1"
"identify.hclust","closure","","TRUE","FALSE","(HCOBJ, FUN = NULL, N = 20, MAXCLUSTER = 20, DEV.FUN = NULL,     ...) ","mva","1.1.1"
"kmeans","closure","","TRUE","FALSE","(x, centers, iter.max = 10) ","mva","1.1.1"
"loadings","closure","","TRUE","FALSE","(x) ","mva","1.1.1"
"names.dist","closure","","TRUE","FALSE","(d) ","mva","1.1.1"
"names<-.dist","closure","","TRUE","FALSE","(d, n) ","mva","1.1.1"
"plot.hclust","closure","","TRUE","FALSE","(tree, hang = 0.1, labels = NULL, ...) ","mva","1.1.1"
"plot.prcomp","closure","","TRUE","FALSE","(x, main = deparse(substitute(x)), ...) ","mva","1.1.1"
"plot.princomp","closure","","TRUE","FALSE","(x, main = deparse(substitute(x)), ...) ","mva","1.1.1"
"prcomp","closure","","TRUE","FALSE","(x, retx = TRUE, center = TRUE, scale. = FALSE, tol = NULL) ","mva","1.1.1"
"predict.princomp","closure","","TRUE","FALSE","(object, newdata, ...) ","mva","1.1.1"
"princomp","closure","","TRUE","FALSE","(x, cor = FALSE, scores = TRUE, covmat = NULL, subset = rep(TRUE,     nrow(as.matrix(x)))) ","mva","1.1.1"
"print.dist","closure","","TRUE","FALSE","(obj, diag = NULL, upper = NULL) ","mva","1.1.1"
"print.hclust","closure","","TRUE","FALSE","(tree) ","mva","1.1.1"
"print.prcomp","closure","","TRUE","FALSE","(x, print.x = FALSE, ...) ","mva","1.1.1"
"print.princomp","closure","","TRUE","FALSE","(x) ","mva","1.1.1"
"print.summary.prcomp","closure","","TRUE","FALSE","(x, digits = min(3, getOption(""digits"") - 3), ...) ","mva","1.1.1"
"rect.hclust","closure","","TRUE","FALSE","(hclust.obj, k = NULL, which = NULL, x = NULL, h = NULL,     border = 2, cluster = NULL) ","mva","1.1.1"
"screeplot","closure","","TRUE","FALSE","(x, npcs = min(10, length(x$sdev)), type = c(""barplot"",     ""lines""), main = deparse(substitute(x)), ...) ","mva","1.1.1"
"summary.prcomp","closure","","TRUE","FALSE","(object) ","mva","1.1.1"
"summary.princomp","closure","","TRUE","FALSE","(object, loadings = FALSE, cutoff = 0.1, digits = 3,     ...) ","mva","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","nls","1.1.1"
"NLSstAsymptotic","closure","","TRUE","FALSE","(xy) ","nls","1.1.1"
"NLSstAsymptotic.sortedXyData","closure","","TRUE","FALSE","(xy) ","nls","1.1.1"
"NLSstClosestX","closure","","TRUE","FALSE","(xy, yval) ","nls","1.1.1"
"NLSstClosestX.sortedXyData","closure","","TRUE","FALSE","(xy, yval) ","nls","1.1.1"
"NLSstLfAsymptote","closure","","TRUE","FALSE","(xy) ","nls","1.1.1"
"NLSstLfAsymptote.sortedXyData","closure","","TRUE","FALSE","(xy) ","nls","1.1.1"
"NLSstRtAsymptote","closure","","TRUE","FALSE","(xy) ","nls","1.1.1"
"NLSstRtAsymptote.sortedXyData","closure","","TRUE","FALSE","(xy) ","nls","1.1.1"
"SSasymp","closure","selfStart","TRUE","FALSE","(input, Asym, R0, lrc) ","nls","1.1.1"
"SSasympOff","closure","selfStart","TRUE","FALSE","(input, Asym, lrc, c0) ","nls","1.1.1"
"SSasympOrig","closure","selfStart","TRUE","FALSE","(input, Asym, lrc) ","nls","1.1.1"
"SSbiexp","closure","selfStart","TRUE","FALSE","(input, A1, lrc1, A2, lrc2) ","nls","1.1.1"
"SSfol","closure","selfStart","TRUE","FALSE","(Dose, input, lKe, lKa, lCl) ","nls","1.1.1"
"SSfpl","closure","selfStart","TRUE","FALSE","(input, A, B, xmid, scal) ","nls","1.1.1"
"SSlogis","closure","selfStart","TRUE","FALSE","(input, Asym, xmid, scal) ","nls","1.1.1"
"SSmicmen","closure","selfStart","TRUE","FALSE","(input, Vm, K) ","nls","1.1.1"
"anova.nls","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
"anovalist.nls","closure","","TRUE","FALSE","(object, ..., test = NULL) ","nls","1.1.1"
"asOneSidedFormula","closure","","TRUE","FALSE","(object) ","nls","1.1.1"
"clearNames","closure","","TRUE","FALSE","(object) ","nls","1.1.1"
"coef.nls","closure","","TRUE","FALSE","(x, ...) ","nls","1.1.1"
"deviance.nls","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
"df.residual.nls","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
"fitted.nls","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
"formula.nls","closure","","TRUE","FALSE","(object) ","nls","1.1.1"
"getInitial","closure","","TRUE","FALSE","(object, data, ...) ","nls","1.1.1"
"getInitial.default","closure","","TRUE","FALSE","(object, data, mCall, LHS = NULL, ...) ","nls","1.1.1"
"getInitial.formula","closure","","TRUE","FALSE","(object, data, ...) ","nls","1.1.1"
"getInitial.selfStart","closure","","TRUE","FALSE","(object, data, mCall, LHS = NULL, ...) ","nls","1.1.1"
"logLik","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
"logLik.nls","closure","","TRUE","FALSE","(object, REML = FALSE) ","nls","1.1.1"
"newEnv","closure","","TRUE","FALSE","(enclos) ","nls","1.1.1"
"nls","closure","","TRUE","FALSE","(formula, data = list(), start = getInitial(formula,     data), control, algorithm = ""default"", trace = FALSE, subset,     weights, na.action, ...) ","nls","1.1.1"
"nls.control","closure","","TRUE","FALSE","(maxiter = 50, tol = 1e-05, minFactor = 1/1024) ","nls","1.1.1"
"nlsModel","closure","","TRUE","FALSE","(form, data, start) ","nls","1.1.1"
"nlsModel.plinear","closure","","TRUE","FALSE","(form, data, start) ","nls","1.1.1"
"numericDeriv","closure","","TRUE","FALSE","(expr, theta, rho = parent.frame()) ","nls","1.1.1"
"plot.profile.nls","closure","","TRUE","FALSE","(x, levels, conf = c(99, 95, 90, 80, 50)/100, nseg = 50,     absVal = TRUE, ...) ","nls","1.1.1"
"predict.nls","closure","","TRUE","FALSE","(object, newdata, se.fit = FALSE, scale = NULL, df = Inf,     interval = c(""none"", ""confidence"", ""prediction""), level = 0.95,     ...) ","nls","1.1.1"
"print.nls","closure","","TRUE","FALSE","(x, ...) ","nls","1.1.1"
"print.summary.nls","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), symbolic.cor = p >     4, signif.stars = getOption(""show.signif.stars""), ...) ","nls","1.1.1"
"profile.nls","closure","","TRUE","FALSE","(fitted, which = 1:npar, maxpts = 100, alphamax = 0.01,     delta.t = cutoff/5) ","nls","1.1.1"
"profiler","closure","","TRUE","FALSE","(fitted, ...) ","nls","1.1.1"
"profiler.nls","closure","","TRUE","FALSE","(fitted, ...) ","nls","1.1.1"
"residuals.nls","closure","","TRUE","FALSE","(object, type = c(""response"", ""pearson""), ...) ","nls","1.1.1"
"selfStart","closure","","TRUE","FALSE","(model, initial, parameters, template) ","nls","1.1.1"
"selfStart.default","closure","","TRUE","FALSE","(model, initial, parameters, template) ","nls","1.1.1"
"selfStart.formula","closure","","TRUE","FALSE","(model, initial, parameters, template = NULL) ","nls","1.1.1"
"setNames","closure","","TRUE","FALSE","(object, nm) ","nls","1.1.1"
"sortedXyData","closure","","TRUE","FALSE","(x, y, data) ","nls","1.1.1"
"sortedXyData.default","closure","","TRUE","FALSE","(x, y, data) ","nls","1.1.1"
"summary.nls","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
"weights.nls","closure","","TRUE","FALSE","(object, ...) ","nls","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","splines","1.1.1"
"as.data.frame.xyVector","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"as.polySpline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"asVector","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"asVector.xyVector","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"backSpline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"backSpline.nbSpline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"backSpline.npolySpline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"bs","closure","","TRUE","FALSE","(x, df = NULL, knots = NULL, degree = 3, intercept = FALSE,     Boundary.knots = range(x)) ","splines","1.1.1"
"interpSpline","closure","","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","1.1.1"
"interpSpline.default","closure","","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","1.1.1"
"interpSpline.formula","closure","","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","1.1.1"
"ns","closure","","TRUE","FALSE","(x, df = NULL, knots = NULL, intercept = FALSE, Boundary.knots = range(x)) ","splines","1.1.1"
"periodicSpline","closure","","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","1.1.1"
"periodicSpline.default","closure","","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","1.1.1"
"periodicSpline.formula","closure","","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","1.1.1"
"plot.spline","closure","","TRUE","FALSE","(x, ...) ","splines","1.1.1"
"plot.xyVector","closure","","TRUE","FALSE","(x, ...) ","splines","1.1.1"
"polySpline","closure","","TRUE","FALSE","(object, ...) ","splines","1.1.1"
"polySpline.bSpline","closure","","TRUE","FALSE","(object, ...) ","splines","1.1.1"
"polySpline.nbSpline","closure","","TRUE","FALSE","(object, ...) ","splines","1.1.1"
"polySpline.pbSpline","closure","","TRUE","FALSE","(object, ...) ","splines","1.1.1"
"polySpline.polySpline","closure","","TRUE","FALSE","(object, ...) ","splines","1.1.1"
"predict.bSpline","closure","","TRUE","FALSE","(object, x, nseg = 50, deriv = 0) ","splines","1.1.1"
"predict.bs","closure","","TRUE","FALSE","(object, newx, ...) ","splines","1.1.1"
"predict.nbSpline","closure","","TRUE","FALSE","(object, x, nseg = 50, deriv = 0) ","splines","1.1.1"
"predict.npolySpline","closure","","TRUE","FALSE","(object, x, nseg = 50, deriv = 0) ","splines","1.1.1"
"predict.ns","closure","","TRUE","FALSE","(object, newx, ...) ","splines","1.1.1"
"predict.pbSpline","closure","","TRUE","FALSE","(object, x, nseg = 50, deriv = 0) ","splines","1.1.1"
"predict.polySpline","closure","","TRUE","FALSE","(object, x, nseg = 50, deriv = 0) ","splines","1.1.1"
"predict.ppolySpline","closure","","TRUE","FALSE","(object, x, nseg = 50, deriv = 0) ","splines","1.1.1"
"print.bSpline","closure","","TRUE","FALSE","(x, ...) ","splines","1.1.1"
"print.polySpline","closure","","TRUE","FALSE","(x, ...) ","splines","1.1.1"
"print.ppolySpline","closure","","TRUE","FALSE","(x, ...) ","splines","1.1.1"
"spline.des","closure","","TRUE","FALSE","(knots, x, ord = 4, derivs = integer(nx)) ","splines","1.1.1"
"splineDesign","closure","","TRUE","FALSE","(knots, x, ord = 4, derivs = integer(nx)) ","splines","1.1.1"
"splineKnots","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"splineKnots.spline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"splineOrder","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"splineOrder.bSpline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"splineOrder.polySpline","closure","","TRUE","FALSE","(object) ","splines","1.1.1"
"xyVector","closure","","TRUE","FALSE","(x, y) ","splines","1.1.1"
"ecdf","closure","","TRUE","FALSE","(x) ","stepfun","1.1.1"
"is.stepfun","closure","","TRUE","FALSE","(x) ","stepfun","1.1.1"
"knots","closure","","TRUE","FALSE","(...) ","stepfun","1.1.1"
"knots.stepfun","closure","","TRUE","FALSE","(Fn) ","stepfun","1.1.1"
"plot.ecdf","closure","","TRUE","FALSE","(..., verticals = FALSE, col.01line = ""gray70"") ","stepfun","1.1.1"
"plot.stepfun","closure","","TRUE","FALSE","(Fn, xval, xlim, xlab = ""x"", ylab = ""f(x)"", main = NULL,     add = FALSE, verticals = TRUE, do.points = TRUE, pch = par(""pch""),     col.points = par(""col""), cex.points = par(""cex""), col.hor = par(""col""),     col.vert = par(""col""), lty = par(""lty""), lwd = par(""lwd""),     ...) ","stepfun","1.1.1"
"print.ecdf","closure","","TRUE","FALSE","(Fn, digits = options(""digits"")[[1]] - 2, ...) ","stepfun","1.1.1"
"print.stepfun","closure","","TRUE","FALSE","(Fn, digits = getOption(""digits"") - 2, ...) ","stepfun","1.1.1"
"stepfun","closure","","TRUE","FALSE","(x, y, f = 0) ","stepfun","1.1.1"
"summary.ecdf","closure","","TRUE","FALSE","(Fn, ...) ","stepfun","1.1.1"
"summary.stepfun","closure","","TRUE","FALSE","(Fn) ","stepfun","1.1.1"
".First.lib","closure","","TRUE","FALSE","(lib, pkg) ","ts","1.1.1"
"Box.test","closure","","TRUE","FALSE","(x, lag = 1, type = c(""Box-Pierce"", ""Ljung-Box"")) ","ts","1.1.1"
"Ops.ts","closure","","TRUE","FALSE","(e1, e2) ","ts","1.1.1"
"PP.test","closure","","TRUE","FALSE","(x, lshort = TRUE) ","ts","1.1.1"
"[.tskernel","closure","","TRUE","FALSE","(k, i) ","ts","1.1.1"
"acf","closure","","TRUE","FALSE","(x, lag.max = NULL, type = c(""correlation"", ""covariance"",     ""partial""), plot = TRUE, na.action = na.fail, demean = TRUE,     ...) ","ts","1.1.1"
"ar","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, method = c(""yule-walker"",     ""burg"", ""ols"", ""mle"", ""yw"", ), na.action = na.fail, series = deparse(substitute(x)),     ...) ","ts","1.1.1"
"ar.burg","closure","","TRUE","FALSE","(x, ...) ","ts","1.1.1"
"ar.burg.default","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, var.method = 1, ...) ","ts","1.1.1"
"ar.burg.mts","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, var.method = 1, ...) ","ts","1.1.1"
"ar.mle","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, ...) ","ts","1.1.1"
"ar.ols","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, intercept = demean, series = NULL, ...) ","ts","1.1.1"
"ar.yw","closure","","TRUE","FALSE","(x, ...) ","ts","1.1.1"
"ar.yw.default","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, ...) ","ts","1.1.1"
"ar.yw.mts","closure","","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, var.method = 1, ...) ","ts","1.1.1"
"arima0","closure","","TRUE","FALSE","(x, order = c(0, 0, 0), seasonal = list(order = c(0,     0, 0), period = NA), xreg = NULL, include.mean = TRUE, na.action = na.fail,     delta = 0.01, transform.pars = 2) ","ts","1.1.1"
"arima0.diag","closure","","TRUE","FALSE","(fit, gof.lag = 10) ","ts","1.1.1"
"arma0f","closure","","TRUE","FALSE","(p) ","ts","1.1.1"
"bandwidth.kernel","closure","","TRUE","FALSE","(k) ","ts","1.1.1"
"cbind.ts","closure","","TRUE","FALSE","(..., dframe = FALSE, union = TRUE) ","ts","1.1.1"
"ccf","closure","","TRUE","FALSE","(x, y, lag.max = NULL, type = c(""correlation"", ""covariance""),     plot = TRUE, na.action = na.fail, ...) ","ts","1.1.1"
"cpgram","closure","","TRUE","FALSE","(ts, taper = 0.1, main = paste(""Series: "", deparse(substitute(ts))),     ci.col = ""blue"") ","ts","1.1.1"
"df.kernel","closure","","TRUE","FALSE","(k) ","ts","1.1.1"
"diff.ts","closure","","TRUE","FALSE","(x, lag = 1, differences = 1) ","ts","1.1.1"
"diffinv","closure","","TRUE","FALSE","(obj, ...) ","ts","1.1.1"
"diffinv.default","closure","","TRUE","FALSE","(x, lag = 1, differences = 1, xi = rep(0, lag * differences *     dim(as.matrix(x))[2])) ","ts","1.1.1"
"diffinv.ts","closure","","TRUE","FALSE","(x, lag = 1, differences = 1, xi = rep(0, lag * differences *     NCOL(x))) ","ts","1.1.1"
"diffinv.vec","closure","","TRUE","FALSE","(x, lag = 1, differences = 1, xi = rep(0, lag * differences)) ","ts","1.1.1"
"embed","closure","","TRUE","FALSE","(x, dimension = 1) ","ts","1.1.1"
"filter","closure","","TRUE","FALSE","(x, filter, method = c(""convolution"", ""recursive""),     sides = 2, circular = FALSE, init = NULL) ","ts","1.1.1"
"is.mts","closure","","TRUE","FALSE","(x) ","ts","1.1.1"
"is.tskernel","closure","","TRUE","FALSE","(k) ","ts","1.1.1"
"kernapply","closure","","TRUE","FALSE","(x, ...) ","ts","1.1.1"
"kernapply.default","closure","","TRUE","FALSE","(x, k, circular = FALSE) ","ts","1.1.1"
"kernapply.ts","closure","","TRUE","FALSE","(x, k, circular = FALSE) ","ts","1.1.1"
"kernapply.tskernel","closure","","TRUE","FALSE","(k1, k2) ","ts","1.1.1"
"kernapply.vector","closure","","TRUE","FALSE","(x, k, circular = FALSE) ","ts","1.1.1"
"kernel","closure","","TRUE","FALSE","(coef, m = length(coef) + 1, r, name = ""unknown"") ","ts","1.1.1"
"lag","closure","","TRUE","FALSE","(x, ...) ","ts","1.1.1"
"lag.default","closure","","TRUE","FALSE","(x, k = 1) ","ts","1.1.1"
"na.contiguous","closure","","TRUE","FALSE","(frame) ","ts","1.1.1"
"na.omit.ts","closure","","TRUE","FALSE","(frame) ","ts","1.1.1"
"pacf","closure","","TRUE","FALSE","(x, lag.max, plot, na.action, ...) ","ts","1.1.1"
"pacf.default","closure","","TRUE","FALSE","(x, lag.max = NULL, plot = TRUE, na.action = na.fail,     ...) ","ts","1.1.1"
"pacf.mts","closure","","TRUE","FALSE","(x, lag.max = NULL, plot = TRUE, na.action = na.fail,     ...) ","ts","1.1.1"
"plot.acf","closure","","TRUE","FALSE","(x, ci = 0.95, type = ""h"", xlab = ""Lag"", ylab = NULL,     ylim = NULL, main = NULL, ci.col = ""blue"", ci.type = c(""white"",         ""ma""), ...) ","ts","1.1.1"
"plot.spec","closure","","TRUE","FALSE","(x, add = FALSE, ci = 0.95, log = c(""yes"", ""dB"", ""no""),     xlab = ""frequency"", ylab = NULL, type = ""l"", ci.col = ""blue"",     main = NULL, sub = NULL, plot.type = c(""marginal"", ""coherency"",         ""phase""), ...) ","ts","1.1.1"
"plot.spec.coherency","closure","","TRUE","FALSE","(x, ci = 0.95, xlab = ""frequency"", ylab = ""squared coherency"",     ylim = c(0, 1), type = ""l"", main = NULL, ci.lty = 3, ci.col = ""blue"",     ...) ","ts","1.1.1"
"plot.spec.phase","closure","","TRUE","FALSE","(x, ci = 0.95, xlab = ""frequency"", ylab = ""phase"", ylim = c(-pi,     pi), type = ""l"", main = NULL, ci.lty = 3, ci.col = ""blue"",     ...) ","ts","1.1.1"
"plot.stl","closure","","TRUE","FALSE","(x, labels = colnames(X), ...) ","ts","1.1.1"
"plot.tskernel","closure","","TRUE","FALSE","(k) ","ts","1.1.1"
"predict.ar","closure","","TRUE","FALSE","(object, newdata, n.ahead = 1, se.fit = TRUE, ...) ","ts","1.1.1"
"predict.arima0","closure","","TRUE","FALSE","(object, n.ahead = 1, newxreg = NULL, se.fit = TRUE) ","ts","1.1.1"
"print.ar","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","ts","1.1.1"
"print.arima0","closure","","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), se = TRUE,     ...) ","ts","1.1.1"
"print.stl","closure","","TRUE","FALSE","(x, ...) ","ts","1.1.1"
"print.tskernel","closure","","TRUE","FALSE","(k, digits = max(3, getOption(""digits"") - 3)) ","ts","1.1.1"
"spec.ar","closure","","TRUE","FALSE","(x, n.freq, order = NULL, plot = TRUE, na.action = na.fail,     method = ""yule-walker"", ...) ","ts","1.1.1"
"spec.pgram","closure","","TRUE","FALSE","(x, spans = NULL, kernel = NULL, taper = 0.1, pad = 0,     fast = TRUE, demean = FALSE, detrend = TRUE, plot = TRUE,     na.action = na.fail, ...) ","ts","1.1.1"
"spec.taper","closure","","TRUE","FALSE","(x, p = 0.1) ","ts","1.1.1"
"spectrum","closure","","TRUE","FALSE","(..., method = c(""pgram"", ""ar"")) ","ts","1.1.1"
"stl","closure","","TRUE","FALSE","(x, s.window = NULL, s.degree = 0, t.window = NULL,     t.degree = 1, robust = FALSE, na.action = na.fail) ","ts","1.1.1"
"toeplitz","closure","","TRUE","FALSE","(x) ","ts","1.1.1"
"ts.intersect","closure","","TRUE","FALSE","(...) ","ts","1.1.1"
"ts.plot","closure","","TRUE","FALSE","(..., gpars = list()) ","ts","1.1.1"
"ts.union","closure","","TRUE","FALSE","(..., dframe = FALSE, union = TRUE) ","ts","1.1.1"
