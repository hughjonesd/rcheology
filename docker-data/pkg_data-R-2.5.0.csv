"name","type","class","exported","generic","args","package","priority","Rversion"
"bkde","closure","function","TRUE","FALSE","(x, kernel = ""normal"", canonical = FALSE, bandwidth,     gridsize = 401, range.x, truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"bkde2D","closure","function","TRUE","FALSE","(x, bandwidth, gridsize = c(51, 51), range.x, truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"bkfe","closure","function","TRUE","FALSE","(x, drv, bandwidth, gridsize = 401, range.x, binned = FALSE,     truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"dpih","closure","function","TRUE","FALSE","(x, scalest = ""minim"", level = 2, gridsize = 401, range.x = range(x),     truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"dpik","closure","function","TRUE","FALSE","(x, scalest = ""minim"", level = 2, kernel = ""normal"",     canonical = FALSE, gridsize = 401, range.x = range(x), truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"dpill","closure","function","TRUE","FALSE","(x, y, blockmax = 5, divisor = 20, trim = 0.01, proptrun = 0.05,     gridsize = 401, range.x = range(x), truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"locpoly","closure","function","TRUE","FALSE","(x, y, drv = 0, degree, kernel = ""normal"", bandwidth,     gridsize = 401, bwdisc = 25, range.x, binned = FALSE, truncate = TRUE) ","KernSmooth","recommended","2.5.0"
"Aids2","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Animals","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Boston","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Cars93","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Cushings","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"DDT","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"GAGurine","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Insurance","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Melanoma","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Null","closure","function","TRUE","FALSE","(M) ","MASS","recommended","2.5.0"
"OME","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Pima.te","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Pima.tr","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Pima.tr2","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Rabbit","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Rubber","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"SP500","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Shepard","closure","function","TRUE","FALSE","(d, x, p = 2) ","MASS","recommended","2.5.0"
"Sitka","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Sitka89","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Skye","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"Traffic","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"UScereal","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"UScrime","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"VA","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"abbey","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"accdeaths","double","ts","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"addterm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","2.5.0"
"anorexia","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"area","closure","function","TRUE","FALSE","(f, a, b, ..., fa = f(a, ...), fb = f(b, ...), limit = 10,     eps = 1e-05) ","MASS","recommended","2.5.0"
"as.fractions","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"bacteria","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"bandwidth.nrd","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"bcv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","MASS","recommended","2.5.0"
"beav1","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"beav2","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"biopsy","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"birthwt","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"boxcox","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","2.5.0"
"cabbages","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"caith","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"cats","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"cement","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"chem","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"con2tr","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","2.5.0"
"contr.sdif","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","MASS","recommended","2.5.0"
"coop","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"corresp","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","2.5.0"
"cov.mcd","closure","function","TRUE","FALSE","(...) ","MASS","recommended","2.5.0"
"cov.mve","closure","function","TRUE","FALSE","(...) ","MASS","recommended","2.5.0"
"cov.rob","closure","function","TRUE","FALSE","(x, cor = FALSE, quantile.used = floor((n + p + 1)/2),     method = c(""mve"", ""mcd"", ""classical""), nsamp = ""best"", seed) ","MASS","recommended","2.5.0"
"cov.trob","closure","function","TRUE","FALSE","(x, wt = rep(1, n), cor = FALSE, center = TRUE, nu = 5,     maxit = 25, tol = 0.01) ","MASS","recommended","2.5.0"
"cpus","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"crabs","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"deaths","double","ts","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"denumerate","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"denumerate.formula","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"dose.p","closure","function","TRUE","FALSE","(obj, cf = 1:2, p = 0.5) ","MASS","recommended","2.5.0"
"drivers","double","ts","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"dropterm","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","2.5.0"
"eagles","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"enlist","closure","function","TRUE","FALSE","(vec) ","MASS","recommended","2.5.0"
"epil","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"eqscplot","closure","function","TRUE","FALSE","(x, y, ratio = 1, tol = 0.04, uin, ...) ","MASS","recommended","2.5.0"
"farms","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"fbeta","closure","function","TRUE","FALSE","(x, alpha, beta) ","MASS","recommended","2.5.0"
"fgl","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"fitdistr","closure","function","TRUE","FALSE","(x, densfun, start, ...) ","MASS","recommended","2.5.0"
"forbes","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"fractions","closure","function","TRUE","FALSE","(x, cycles = 10, max.denominator = 2000, ...) ","MASS","recommended","2.5.0"
"frequency.polygon","closure","function","TRUE","FALSE","(x, nclass = nclass.freq(x), xlab = """", ylab = """", ...) ","MASS","recommended","2.5.0"
"galaxies","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"gamma.dispersion","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","2.5.0"
"gamma.shape","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","2.5.0"
"gehan","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"genotype","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"geyser","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"gilgais","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"ginv","closure","function","TRUE","FALSE","(X, tol = sqrt(.Machine$double.eps)) ","MASS","recommended","2.5.0"
"glm.convert","closure","function","TRUE","FALSE","(object) ","MASS","recommended","2.5.0"
"glm.nb","closure","function","TRUE","FALSE","(formula, data, weights, subset, na.action, start = NULL,     etastart, mustart, control = glm.control(...), method = ""glm.fit"",     model = TRUE, x = FALSE, y = TRUE, contrasts = NULL, ...,     init.theta, link = log) ","MASS","recommended","2.5.0"
"glmmPQL","closure","function","TRUE","FALSE","(fixed, random, family, data, correlation, weights,     control, niter = 10, verbose = TRUE, ...) ","MASS","recommended","2.5.0"
"hills","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"hist.FD","closure","function","TRUE","FALSE","(x, prob = TRUE, xlab = deparse(substitute(x)), ...) ","MASS","recommended","2.5.0"
"hist.scott","closure","function","TRUE","FALSE","(x, prob = TRUE, xlab = deparse(substitute(x)), ...) ","MASS","recommended","2.5.0"
"housing","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"huber","closure","function","TRUE","FALSE","(y, k = 1.5, tol = 1e-06) ","MASS","recommended","2.5.0"
"hubers","closure","function","TRUE","FALSE","(y, k = 1.5, mu, s, initmu = median(y), tol = 1e-06) ","MASS","recommended","2.5.0"
"immer","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"is.fractions","closure","function","TRUE","FALSE","(f) ","MASS","recommended","2.5.0"
"isoMDS","closure","function","TRUE","FALSE","(d, y = cmdscale(d, k), k = 2, maxit = 50, trace = TRUE,     tol = 0.001, p = 2) ","MASS","recommended","2.5.0"
"kde2d","closure","function","TRUE","FALSE","(x, y, h, n = 25, lims = c(range(x), range(y))) ","MASS","recommended","2.5.0"
"lda","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","2.5.0"
"ldahist","closure","function","TRUE","FALSE","(data, g, nbins = 25, h, x0 = -h/1000, breaks, xlim = range(breaks),     ymax = 0, width, type = c(""histogram"", ""density"", ""both""),     sep = (type != ""density""), col = 5, xlab = deparse(substitute(data)),     bty = ""n"", ...) ","MASS","recommended","2.5.0"
"leuk","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"lm.gls","closure","function","TRUE","FALSE","(formula, data, W, subset, na.action, inverse = FALSE,     method = ""qr"", model = FALSE, x = FALSE, y = FALSE, contrasts = NULL,     ...) ","MASS","recommended","2.5.0"
"lm.ridge","closure","function","TRUE","FALSE","(formula, data, subset, na.action, lambda = 0, model = FALSE,     x = FALSE, y = FALSE, contrasts = NULL, ...) ","MASS","recommended","2.5.0"
"lmsreg","closure","function","TRUE","FALSE","(...) ","MASS","recommended","2.5.0"
"lmwork","closure","function","TRUE","FALSE","(object) ","MASS","recommended","2.5.0"
"loglm","closure","function","TRUE","FALSE","(formula, data, subset, na.action, ...) ","MASS","recommended","2.5.0"
"loglm1","closure","function","TRUE","FALSE","(formula, data, ...) ","MASS","recommended","2.5.0"
"logtrans","closure","function","TRUE","FALSE","(object, ...) ","MASS","recommended","2.5.0"
"lqs","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","2.5.0"
"lqs.formula","closure","function","TRUE","FALSE","(formula, data, ..., method = c(""lts"", ""lqs"", ""lms"",     ""S"", ""model.frame""), subset, na.action, model = TRUE, x.ret = FALSE,     y.ret = FALSE, contrasts = NULL) ","MASS","recommended","2.5.0"
"ltsreg","closure","function","TRUE","FALSE","(...) ","MASS","recommended","2.5.0"
"mammals","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"mca","closure","function","TRUE","FALSE","(df, nf = 2, abbrev = FALSE) ","MASS","recommended","2.5.0"
"mcycle","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"menarche","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"michelson","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"minn38","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"motors","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"muscle","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"mvrnorm","closure","function","TRUE","FALSE","(n = 1, mu, Sigma, tol = 1e-06, empirical = FALSE) ","MASS","recommended","2.5.0"
"nclass.freq","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"neg.bin","closure","function","TRUE","FALSE","(theta = stop(""'theta' must be given"")) ","MASS","recommended","2.5.0"
"negative.binomial","closure","function","TRUE","FALSE","(theta = stop(""'theta' must be specified""), link = ""log"") ","MASS","recommended","2.5.0"
"negexp.SSival","closure","function","TRUE","FALSE","(mCall, data, LHS) ","MASS","recommended","2.5.0"
"newcomb","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"nlschools","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"npk","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"npr1","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"oats","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"painters","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"parcoord","closure","function","TRUE","FALSE","(x, col = 1, lty = 1, var.label = FALSE, ...) ","MASS","recommended","2.5.0"
"petrol","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"phones","list","list","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"polr","closure","function","TRUE","FALSE","(formula, data, weights, start, ..., subset, na.action,     contrasts = NULL, Hess = FALSE, model = TRUE, method = c(""logistic"",         ""probit"", ""cloglog"", ""cauchit"")) ","MASS","recommended","2.5.0"
"psi.bisquare","closure","function","TRUE","FALSE","(u, c = 4.685, deriv = 0) ","MASS","recommended","2.5.0"
"psi.hampel","closure","function","TRUE","FALSE","(u, a = 2, b = 4, c = 8, deriv = 0) ","MASS","recommended","2.5.0"
"psi.huber","closure","function","TRUE","FALSE","(u, k = 1.345, deriv = 0) ","MASS","recommended","2.5.0"
"qda","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","2.5.0"
"quine","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"rational","closure","function","TRUE","FALSE","(x, cycles = 10, max.denominator = 2000, ...) ","MASS","recommended","2.5.0"
"renumerate","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"renumerate.formula","closure","function","TRUE","FALSE","(x) ","MASS","recommended","2.5.0"
"rlm","closure","function","TRUE","FALSE","(x, ...) ","MASS","recommended","2.5.0"
"rms.curv","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","2.5.0"
"rnegbin","closure","function","TRUE","FALSE","(n, mu = n, theta = stop(""'theta' must be specified"")) ","MASS","recommended","2.5.0"
"road","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"rotifer","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"sammon","closure","function","TRUE","FALSE","(d, y = cmdscale(d, k), k = 2, niter = 100, trace = TRUE,     magic = 0.2, tol = 1e-04) ","MASS","recommended","2.5.0"
"select","closure","function","TRUE","FALSE","(obj) ","MASS","recommended","2.5.0"
"ships","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"shoes","list","list","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"shrimp","double","numeric","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"shuttle","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"snails","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"stdres","closure","function","TRUE","FALSE","(object) ","MASS","recommended","2.5.0"
"steam","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"stepAIC","closure","function","TRUE","FALSE","(object, scope, scale = 0, direction = c(""both"", ""backward"",     ""forward""), trace = 1, keep = NULL, steps = 1000, use.start = FALSE,     k = 2, ...) ","MASS","recommended","2.5.0"
"stormer","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"studres","closure","function","TRUE","FALSE","(object) ","MASS","recommended","2.5.0"
"survey","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"synth.te","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"synth.tr","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"theta.md","closure","function","TRUE","FALSE","(y, mu, dfr, weights, limit = 20, eps = .Machine$double.eps^0.25) ","MASS","recommended","2.5.0"
"theta.ml","closure","function","TRUE","FALSE","(y, mu, n = sum(weights), weights, limit = 10, eps = .Machine$double.eps^0.25,     trace = FALSE) ","MASS","recommended","2.5.0"
"theta.mm","closure","function","TRUE","FALSE","(y, mu, dfr, weights, limit = 10, eps = .Machine$double.eps^0.25) ","MASS","recommended","2.5.0"
"topo","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"truehist","closure","function","TRUE","FALSE","(data, nbins = ""Scott"", h, x0 = -h/1000, breaks, prob = TRUE,     xlim = range(breaks), ymax = max(est), col = 5, xlab = deparse(substitute(data)),     bty = ""n"", ...) ","MASS","recommended","2.5.0"
"ucv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","MASS","recommended","2.5.0"
"waders","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"whiteside","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"width.SJ","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax, method = c(""ste"",     ""dpi"")) ","MASS","recommended","2.5.0"
"write.matrix","closure","function","TRUE","FALSE","(x, file = """", sep = "" "", blocksize) ","MASS","recommended","2.5.0"
"wtloss","list","data.frame","FALSE","FALSE","NA","MASS","recommended","2.5.0"
"!","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"!=","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"$","special","function","TRUE","NA","","base","base","2.5.0"
"$.DLLInfo","closure","function","TRUE","FALSE","(x, name) ","base","base","2.5.0"
"$.package_version","closure","function","TRUE","FALSE","(x, name) ","base","base","2.5.0"
"$<-","special","function","TRUE","NA","","base","base","2.5.0"
"$<-.data.frame","closure","function","TRUE","FALSE","(x, i, value) ","base","base","2.5.0"
"%%","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"%*%","builtin","function","TRUE","NA","(a, b) ","base","base","2.5.0"
"%/%","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"%in%","closure","function","TRUE","FALSE","(x, table) ","base","base","2.5.0"
"%o%","closure","function","TRUE","FALSE","(X, Y) ","base","base","2.5.0"
"%x%","closure","function","TRUE","FALSE","(X, Y) ","base","base","2.5.0"
"&","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"&&","special","function","TRUE","NA","","base","base","2.5.0"
"(","builtin","function","TRUE","NA","","base","base","2.5.0"
"*","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"*.difftime","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"+","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"+.Date","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"+.POSIXt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"-","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"-.Date","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"-.POSIXt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
".Alias","closure","function","TRUE","FALSE","(expr) ","base","base","2.5.0"
".ArgsEnv","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
".AutoloadEnv","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
".BaseNamespaceEnv","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
".C","builtin","function","TRUE","NA","(name, ..., NAOK = FALSE, DUP = TRUE, PACKAGE, ENCODING) ","base","base","2.5.0"
".Call","builtin","function","TRUE","NA","(name, ..., PACKAGE) ","base","base","2.5.0"
".Call.graphics","builtin","function","TRUE","NA","(name, ..., PACKAGE) ","base","base","2.5.0"
".Defunct","closure","function","TRUE","FALSE","(new, package = NULL, msg) ","base","base","2.5.0"
".Deprecated","closure","function","TRUE","FALSE","(new, package = NULL, msg) ","base","base","2.5.0"
".Device","character","character","TRUE","FALSE","NA","base","base","2.5.0"
".Devices","pairlist","pairlist","TRUE","FALSE","NA","base","base","2.5.0"
".Export","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
".External","builtin","function","TRUE","NA","(name, ..., PACKAGE) ","base","base","2.5.0"
".External.graphics","builtin","function","TRUE","NA","(name, ..., PACKAGE) ","base","base","2.5.0"
".First.sys","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
".Fortran","builtin","function","TRUE","NA","(name, ..., NAOK = FALSE, DUP = TRUE, PACKAGE, ENCODING) ","base","base","2.5.0"
".GenericArgsEnv","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
".GlobalEnv","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
".Import","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
".ImportFrom","closure","function","TRUE","FALSE","(name, ...) ","base","base","2.5.0"
".Internal","special","function","TRUE","NA","(call) ","base","base","2.5.0"
".Last.value","character","character","TRUE","FALSE","NA","base","base","2.5.0"
".Library","character","character","TRUE","FALSE","NA","base","base","2.5.0"
".Library.site","character","character","TRUE","FALSE","NA","base","base","2.5.0"
".Machine","list","list","TRUE","FALSE","NA","base","base","2.5.0"
".NotYetImplemented","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
".NotYetUsed","closure","function","TRUE","FALSE","(arg, error = TRUE) ","base","base","2.5.0"
".OptRequireMethods","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
".Options","pairlist","pairlist","TRUE","FALSE","NA","base","base","2.5.0"
".Platform","list","list","TRUE","FALSE","NA","base","base","2.5.0"
".Primitive","builtin","function","TRUE","NA","(name) ","base","base","2.5.0"
".S3PrimitiveGenerics","character","character","TRUE","FALSE","NA","base","base","2.5.0"
".S3method","closure","function","TRUE","FALSE","(generic, class, method) ","base","base","2.5.0"
".Script","closure","function","TRUE","FALSE","(interpreter, script, args, ...) ","base","base","2.5.0"
".__H__.cbind","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","2.5.0"
".__H__.rbind","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","2.5.0"
".__S3MethodsTable__.","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
".decode_package_version","closure","function","TRUE","FALSE","(x, base = NULL) ","base","base","2.5.0"
".deparseOpts","closure","function","TRUE","FALSE","(control) ","base","base","2.5.0"
".doTrace","closure","function","TRUE","FALSE","(expr, msg) ","base","base","2.5.0"
".dynLibs","closure","function","TRUE","FALSE","(new) ","base","base","2.5.0"
".encode_package_version","closure","function","TRUE","FALSE","(x, base = NULL) ","base","base","2.5.0"
".find.package","closure","function","TRUE","FALSE","(package = NULL, lib.loc = NULL, quiet = FALSE, verbose = getOption(""verbose"")) ","base","base","2.5.0"
".getRequiredPackages","closure","function","TRUE","FALSE","(file = ""DESCRIPTION"", quietly = FALSE, useImports = FALSE) ","base","base","2.5.0"
".getRequiredPackages2","closure","function","TRUE","FALSE","(pkgInfo, quietly = FALSE, lib.loc = NULL, useImports = FALSE) ","base","base","2.5.0"
".handleSimpleError","closure","function","TRUE","FALSE","(h, msg, call) ","base","base","2.5.0"
".isMethodsDispatchOn","closure","function","TRUE","FALSE","(onOff = NULL) ","base","base","2.5.0"
".isOpen","closure","function","TRUE","FALSE","(srcfile) ","base","base","2.5.0"
".knownS3Generics","character","character","TRUE","FALSE","NA","base","base","2.5.0"
".leap.seconds","double","POSIXt/POSIXct","TRUE","FALSE","NA","base","base","2.5.0"
".libPaths","closure","function","TRUE","FALSE","(new) ","base","base","2.5.0"
".makeMessage","closure","function","TRUE","FALSE","(..., domain = NULL, appendLF = FALSE) ","base","base","2.5.0"
".mergeExportMethods","closure","function","TRUE","FALSE","(new, ns) ","base","base","2.5.0"
".mergeImportMethods","closure","function","TRUE","FALSE","(impenv, expenv, metaname) ","base","base","2.5.0"
".noGenerics","logical","logical","TRUE","FALSE","NA","base","base","2.5.0"
".packageStartupMessage","closure","function","TRUE","FALSE","(message, call = NULL) ","base","base","2.5.0"
".packages","closure","function","TRUE","FALSE","(all.available = FALSE, lib.loc = NULL) ","base","base","2.5.0"
".path.package","closure","function","TRUE","FALSE","(package = NULL, quiet = FALSE) ","base","base","2.5.0"
".primTrace","builtin","function","TRUE","NA","(obj) ","base","base","2.5.0"
".primUntrace","builtin","function","TRUE","NA","(obj) ","base","base","2.5.0"
".readRDS","closure","function","TRUE","FALSE","(file, refhook = NULL) ","base","base","2.5.0"
".row_names_info","closure","function","TRUE","FALSE","(x, type = 1L) ","base","base","2.5.0"
".saveRDS","closure","function","TRUE","FALSE","(object, file = """", ascii = FALSE, version = NULL, compress = TRUE,     refhook = NULL) ","base","base","2.5.0"
".set_row_names","closure","function","TRUE","FALSE","(n) ","base","base","2.5.0"
".signalSimpleWarning","closure","function","TRUE","FALSE","(msg, call) ","base","base","2.5.0"
".standard_regexps","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
".subset","builtin","function","TRUE","NA","(x, ...) ","base","base","2.5.0"
".subset2","builtin","function","TRUE","NA","(x, ...) ","base","base","2.5.0"
".userHooksEnv","environment","environment","TRUE","FALSE","NA","base","base","2.5.0"
"/","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"/.difftime","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
":","builtin","function","TRUE","NA","","base","base","2.5.0"
"::","closure","function","TRUE","FALSE","(pkg, name) ","base","base","2.5.0"
":::","closure","function","TRUE","FALSE","(pkg, name) ","base","base","2.5.0"
"<","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"<-","special","function","TRUE","NA","","base","base","2.5.0"
"<<-","special","function","TRUE","NA","","base","base","2.5.0"
"<=","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"=","special","function","TRUE","NA","","base","base","2.5.0"
"==","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
">","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
">=","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"@","special","function","TRUE","NA","","base","base","2.5.0"
"Arg","builtin","function","TRUE","NA","(z) ","base","base","2.5.0"
"Conj","builtin","function","TRUE","NA","(z) ","base","base","2.5.0"
"Cstack_info","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Encoding","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"Encoding<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"F","logical","logical","TRUE","FALSE","NA","base","base","2.5.0"
"I","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"ISOdate","closure","function","TRUE","FALSE","(year, month, day, hour = 12, min = 0, sec = 0, tz = ""GMT"") ","base","base","2.5.0"
"ISOdatetime","closure","function","TRUE","FALSE","(year, month, day, hour, min, sec, tz = """") ","base","base","2.5.0"
"Im","builtin","function","TRUE","NA","(z) ","base","base","2.5.0"
"LETTERS","character","character","TRUE","FALSE","NA","base","base","2.5.0"
"La.chol","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"La.chol2inv","closure","function","TRUE","FALSE","(x, size = ncol(x)) ","base","base","2.5.0"
"La.eigen","closure","function","TRUE","FALSE","(x, symmetric, only.values = FALSE, method = c(""dsyevr"",     ""dsyev"")) ","base","base","2.5.0"
"La.svd","closure","function","TRUE","FALSE","(x, nu = min(n, p), nv = min(n, p)) ","base","base","2.5.0"
"Machine","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Math.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"Math.POSIXt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"Math.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"Math.difftime","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"Math.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"Mod","builtin","function","TRUE","NA","(z) ","base","base","2.5.0"
"NCOL","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"NROW","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"NextMethod","closure","function","TRUE","FALSE","(generic = NULL, object = NULL, ...) ","base","base","2.5.0"
"Ops.Date","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"Ops.POSIXt","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"Ops.data.frame","closure","function","TRUE","FALSE","(e1, e2 = NULL) ","base","base","2.5.0"
"Ops.difftime","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"Ops.factor","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"Ops.ordered","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"Ops.package_version","closure","function","TRUE","FALSE","(e1, e2) ","base","base","2.5.0"
"Platform","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"R.Version","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"R.home","closure","function","TRUE","FALSE","(component = ""home"") ","base","base","2.5.0"
"R.version","list","simple.list","TRUE","FALSE","NA","base","base","2.5.0"
"R.version.string","character","character","TRUE","FALSE","NA","base","base","2.5.0"
"RNGkind","closure","function","TRUE","FALSE","(kind = NULL, normal.kind = NULL) ","base","base","2.5.0"
"RNGversion","closure","function","TRUE","FALSE","(vstr) ","base","base","2.5.0"
"Re","builtin","function","TRUE","NA","(z) ","base","base","2.5.0"
"Recall","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"Summary.Date","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Summary.POSIXct","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Summary.POSIXlt","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Summary.data.frame","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Summary.difftime","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Summary.factor","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Summary.package_version","closure","function","TRUE","FALSE","(..., na.rm) ","base","base","2.5.0"
"Sys.Date","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Sys.getenv","closure","function","TRUE","FALSE","(x = NULL, unset = """") ","base","base","2.5.0"
"Sys.getlocale","closure","function","TRUE","FALSE","(category = ""LC_ALL"") ","base","base","2.5.0"
"Sys.getpid","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Sys.glob","closure","function","TRUE","FALSE","(paths, dirmark = FALSE) ","base","base","2.5.0"
"Sys.info","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Sys.localeconv","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Sys.putenv","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"Sys.setenv","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"Sys.setlocale","closure","function","TRUE","FALSE","(category = ""LC_ALL"", locale = """") ","base","base","2.5.0"
"Sys.sleep","closure","function","TRUE","FALSE","(time) ","base","base","2.5.0"
"Sys.time","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Sys.timezone","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"Sys.unsetenv","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"T","logical","logical","TRUE","FALSE","NA","base","base","2.5.0"
"UseMethod","special","function","TRUE","NA","(generic, object) ","base","base","2.5.0"
"Vectorize","closure","function","TRUE","FALSE","(FUN, vectorize.args = arg.names, SIMPLIFY = TRUE, USE.NAMES = TRUE) ","base","base","2.5.0"
"Version","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"[","special","function","TRUE","NA","","base","base","2.5.0"
"[.AsIs","closure","function","TRUE","FALSE","(x, i, ...) ","base","base","2.5.0"
"[.Date","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","2.5.0"
"[.POSIXct","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","2.5.0"
"[.POSIXlt","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","2.5.0"
"[.data.frame","closure","function","TRUE","FALSE","(x, i, j, drop = if (missing(i)) TRUE else length(cols) ==     1) ","base","base","2.5.0"
"[.difftime","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","2.5.0"
"[.factor","closure","function","TRUE","FALSE","(x, ..., drop = FALSE) ","base","base","2.5.0"
"[.hexmode","closure","function","TRUE","FALSE","(x, i) ","base","base","2.5.0"
"[.noquote","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"[.octmode","closure","function","TRUE","FALSE","(x, i) ","base","base","2.5.0"
"[.package_version","closure","function","TRUE","FALSE","(x, i, j) ","base","base","2.5.0"
"[<-","special","function","TRUE","NA","","base","base","2.5.0"
"[<-.Date","closure","function","TRUE","FALSE","(x, ..., value) ","base","base","2.5.0"
"[<-.POSIXct","closure","function","TRUE","FALSE","(x, ..., value) ","base","base","2.5.0"
"[<-.POSIXlt","closure","function","TRUE","FALSE","(x, i, value) ","base","base","2.5.0"
"[<-.data.frame","closure","function","TRUE","FALSE","(x, i, j, value) ","base","base","2.5.0"
"[<-.factor","closure","function","TRUE","FALSE","(x, ..., value) ","base","base","2.5.0"
"[[","special","function","TRUE","NA","","base","base","2.5.0"
"[[.Date","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","2.5.0"
"[[.POSIXct","closure","function","TRUE","FALSE","(x, ..., drop = TRUE) ","base","base","2.5.0"
"[[.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"[[.factor","closure","function","TRUE","FALSE","(x, i) ","base","base","2.5.0"
"[[.package_version","closure","function","TRUE","FALSE","(x, i) ","base","base","2.5.0"
"[[<-","special","function","TRUE","NA","","base","base","2.5.0"
"[[<-.data.frame","closure","function","TRUE","FALSE","(x, i, j, value) ","base","base","2.5.0"
"^","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"abbreviate","closure","function","TRUE","FALSE","(names.arg, minlength = 4, use.classes = TRUE, dot = FALSE) ","base","base","2.5.0"
"abs","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"acos","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"acosh","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"addTaskCallback","closure","function","TRUE","FALSE","(f, data = NULL, name = character(0)) ","base","base","2.5.0"
"agrep","closure","function","TRUE","FALSE","(pattern, x, ignore.case = FALSE, value = FALSE, max.distance = 0.1) ","base","base","2.5.0"
"alist","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"all","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"all.equal","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","2.5.0"
"all.equal.POSIXct","closure","function","TRUE","FALSE","(target, current, ..., scale = 1) ","base","base","2.5.0"
"all.equal.character","closure","function","TRUE","FALSE","(target, current, check.attributes = TRUE, ...) ","base","base","2.5.0"
"all.equal.default","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","2.5.0"
"all.equal.factor","closure","function","TRUE","FALSE","(target, current, check.attributes = TRUE, ...) ","base","base","2.5.0"
"all.equal.formula","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","2.5.0"
"all.equal.language","closure","function","TRUE","FALSE","(target, current, ...) ","base","base","2.5.0"
"all.equal.list","closure","function","TRUE","FALSE","(target, current, check.attributes = TRUE, ...) ","base","base","2.5.0"
"all.equal.numeric","closure","function","TRUE","FALSE","(target, current, tolerance = .Machine$double.eps^0.5,     scale = NULL, check.attributes = TRUE, ...) ","base","base","2.5.0"
"all.equal.raw","closure","function","TRUE","FALSE","(target, current, check.attributes = TRUE, ...) ","base","base","2.5.0"
"all.names","closure","function","TRUE","FALSE","(expr, functions = TRUE, max.names = 200, unique = FALSE) ","base","base","2.5.0"
"all.vars","closure","function","TRUE","FALSE","(expr, functions = FALSE, max.names = 200, unique = TRUE) ","base","base","2.5.0"
"any","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"aperm","closure","function","TRUE","FALSE","(a, perm, resize = TRUE) ","base","base","2.5.0"
"append","closure","function","TRUE","FALSE","(x, values, after = length(x)) ","base","base","2.5.0"
"apply","closure","function","TRUE","FALSE","(X, MARGIN, FUN, ...) ","base","base","2.5.0"
"args","closure","function","TRUE","FALSE","(name) ","base","base","2.5.0"
"array","closure","function","TRUE","FALSE","(data = NA, dim = length(data), dimnames = NULL) ","base","base","2.5.0"
"as.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.Date.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.Date.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.Date.character","closure","function","TRUE","FALSE","(x, format = """", ...) ","base","base","2.5.0"
"as.Date.date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.Date.dates","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.Date.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.Date.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.POSIXct","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","2.5.0"
"as.POSIXct.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.POSIXct.POSIXlt","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","2.5.0"
"as.POSIXct.date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.POSIXct.dates","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.POSIXct.default","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","2.5.0"
"as.POSIXlt","closure","function","TRUE","FALSE","(x, tz = """") ","base","base","2.5.0"
"as.array","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.call","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"as.character","builtin","function","TRUE","NA","(x, ...) ","base","base","2.5.0"
"as.character.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.POSIXt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.condition","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.error","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.hexmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.octmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.package_version","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.character.srcref","closure","function","TRUE","FALSE","(x, useSource = TRUE, ...) ","base","base","2.5.0"
"as.complex","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.complex.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.data.frame","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.AsIs","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.Date","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.POSIXct","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.POSIXlt","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.array","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.character","closure","function","TRUE","FALSE","(x, ..., stringsAsFactors = default.stringsAsFactors()) ","base","base","2.5.0"
"as.data.frame.complex","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.data.frame","closure","function","TRUE","FALSE","(x, row.names = NULL, ...) ","base","base","2.5.0"
"as.data.frame.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.data.frame.difftime","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.factor","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.integer","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.list","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ..., stringsAsFactors = default.stringsAsFactors()) ","base","base","2.5.0"
"as.data.frame.logical","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.matrix","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ..., stringsAsFactors = default.stringsAsFactors()) ","base","base","2.5.0"
"as.data.frame.model.matrix","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.numeric","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.ordered","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.package_version","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.raw","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.data.frame.table","closure","function","TRUE","FALSE","(x, row.names = NULL, ..., responseName = ""Freq"") ","base","base","2.5.0"
"as.data.frame.ts","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.data.frame.vector","closure","function","TRUE","FALSE","(x, row.names = NULL, optional = FALSE, ...) ","base","base","2.5.0"
"as.difftime","closure","function","TRUE","FALSE","(tim, format = ""%X"", units = ""auto"") ","base","base","2.5.0"
"as.double","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.double.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.double.difftime","closure","function","TRUE","FALSE","(x, units = ""auto"", ...) ","base","base","2.5.0"
"as.environment","builtin","function","TRUE","NA","(object) ","base","base","2.5.0"
"as.expression","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.expression.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.factor","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.function","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.function.default","closure","function","TRUE","FALSE","(x, envir = parent.frame(), ...) ","base","base","2.5.0"
"as.integer","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.integer.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.list","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.list.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.list.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.list.environment","closure","function","TRUE","FALSE","(x, all.names = FALSE, ...) ","base","base","2.5.0"
"as.list.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.logical","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.logical.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.matrix","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.matrix.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.matrix.data.frame","closure","function","TRUE","FALSE","(x, rownames.force = NA, ...) ","base","base","2.5.0"
"as.matrix.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.matrix.noquote","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.name","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.null","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.null.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.numeric","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.numeric.POSIXlt","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.ordered","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.package_version","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.pairlist","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.qr","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.raw","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.real","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.single","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.single.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.symbol","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"as.table","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.table.default","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"as.vector","closure","function","TRUE","FALSE","(x, mode = ""any"") ","base","base","2.5.0"
"as.vector.factor","closure","function","TRUE","FALSE","(x, mode = ""any"") ","base","base","2.5.0"
"asNamespace","closure","function","TRUE","FALSE","(ns, base.OK = TRUE) ","base","base","2.5.0"
"asS4","closure","function","TRUE","FALSE","(object, value = TRUE) ","base","base","2.5.0"
"asin","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"asinh","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"assign","closure","function","TRUE","FALSE","(x, value, pos = -1, envir = as.environment(pos), inherits = FALSE,     immediate = TRUE) ","base","base","2.5.0"
"atan","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"atan2","closure","function","TRUE","FALSE","(y, x) ","base","base","2.5.0"
"atanh","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"attach","closure","function","TRUE","FALSE","(what, pos = 2, name = deparse(substitute(what)), warn.conflicts = TRUE) ","base","base","2.5.0"
"attachNamespace","closure","function","TRUE","FALSE","(ns, pos = 2, dataPath = NULL) ","base","base","2.5.0"
"attr","builtin","function","TRUE","NA","(x, which) ","base","base","2.5.0"
"attr.all.equal","closure","function","TRUE","FALSE","(target, current, check.attributes = TRUE, check.names = TRUE,     ...) ","base","base","2.5.0"
"attr<-","builtin","function","TRUE","NA","(x, which, value) ","base","base","2.5.0"
"attributes","builtin","function","TRUE","NA","(obj) ","base","base","2.5.0"
"attributes<-","builtin","function","TRUE","NA","(obj, value) ","base","base","2.5.0"
"autoload","closure","function","TRUE","FALSE","(name, package, reset = FALSE, ...) ","base","base","2.5.0"
"autoloader","closure","function","TRUE","FALSE","(name, package, ...) ","base","base","2.5.0"
"backsolve","closure","function","TRUE","FALSE","(r, x, k = ncol(r), upper.tri = TRUE, transpose = FALSE) ","base","base","2.5.0"
"baseenv","builtin","function","TRUE","NA","() ","base","base","2.5.0"
"basename","closure","function","TRUE","FALSE","(path) ","base","base","2.5.0"
"besselI","closure","function","TRUE","FALSE","(x, nu, expon.scaled = FALSE) ","base","base","2.5.0"
"besselJ","closure","function","TRUE","FALSE","(x, nu) ","base","base","2.5.0"
"besselK","closure","function","TRUE","FALSE","(x, nu, expon.scaled = FALSE) ","base","base","2.5.0"
"besselY","closure","function","TRUE","FALSE","(x, nu) ","base","base","2.5.0"
"beta","closure","function","TRUE","FALSE","(a, b) ","base","base","2.5.0"
"bindingIsActive","closure","function","TRUE","FALSE","(sym, env) ","base","base","2.5.0"
"bindingIsLocked","closure","function","TRUE","FALSE","(sym, env) ","base","base","2.5.0"
"bindtextdomain","closure","function","TRUE","FALSE","(domain, dirname = NULL) ","base","base","2.5.0"
"body","closure","function","TRUE","FALSE","(fun = sys.function(sys.parent())) ","base","base","2.5.0"
"body<-","closure","function","TRUE","TRUE","(fun, envir = environment(fun), value) ","base","base","2.5.0"
"bquote","closure","function","TRUE","FALSE","(expr, where = parent.frame()) ","base","base","2.5.0"
"break","special","function","TRUE","NA","","base","base","2.5.0"
"browser","special","function","TRUE","NA","() ","base","base","2.5.0"
"builtins","closure","function","TRUE","FALSE","(internal = FALSE) ","base","base","2.5.0"
"by","closure","function","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","base","2.5.0"
"by.data.frame","closure","function","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","base","2.5.0"
"by.default","closure","function","TRUE","FALSE","(data, INDICES, FUN, ...) ","base","base","2.5.0"
"bzfile","closure","function","TRUE","FALSE","(description, open = """", encoding = getOption(""encoding"")) ","base","base","2.5.0"
"c","special","function","TRUE","NA","(..., recursive = FALSE) ","base","base","2.5.0"
"c.Date","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","2.5.0"
"c.POSIXct","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","2.5.0"
"c.POSIXlt","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","2.5.0"
"c.noquote","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","2.5.0"
"c.package_version","closure","function","TRUE","FALSE","(..., recursive = FALSE) ","base","base","2.5.0"
"call","special","function","TRUE","NA","(name, ...) ","base","base","2.5.0"
"callCC","closure","function","TRUE","FALSE","(fun) ","base","base","2.5.0"
"capabilities","closure","function","TRUE","FALSE","(what = NULL) ","base","base","2.5.0"
"casefold","closure","function","TRUE","FALSE","(x, upper = FALSE) ","base","base","2.5.0"
"cat","closure","function","TRUE","FALSE","(..., file = """", sep = "" "", fill = FALSE, labels = NULL,     append = FALSE) ","base","base","2.5.0"
"category","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"cbind","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","2.5.0"
"cbind.data.frame","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","2.5.0"
"ceiling","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"char.expand","closure","function","TRUE","FALSE","(input, target, nomatch = stop(""no match"")) ","base","base","2.5.0"
"charToRaw","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"character","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"charmatch","closure","function","TRUE","FALSE","(x, table, nomatch = NA) ","base","base","2.5.0"
"chartr","closure","function","TRUE","FALSE","(old, new, x) ","base","base","2.5.0"
"check_tzones","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"chol","closure","function","TRUE","FALSE","(x, pivot = FALSE, LINPACK = pivot) ","base","base","2.5.0"
"chol2inv","closure","function","TRUE","FALSE","(x, size = NCOL(x), LINPACK = FALSE) ","base","base","2.5.0"
"choose","closure","function","TRUE","FALSE","(n, k) ","base","base","2.5.0"
"class","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"class<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"close","closure","function","TRUE","FALSE","(con, ...) ","base","base","2.5.0"
"close.connection","closure","function","TRUE","FALSE","(con, type = ""rw"", ...) ","base","base","2.5.0"
"close.srcfile","closure","function","TRUE","FALSE","(con, ...) ","base","base","2.5.0"
"closeAllConnections","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"codes","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"codes.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"codes.ordered","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"codes<-","closure","function","TRUE","FALSE","(x, ..., value) ","base","base","2.5.0"
"col","closure","function","TRUE","FALSE","(x, as.factor = FALSE) ","base","base","2.5.0"
"colMeans","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","2.5.0"
"colSums","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","2.5.0"
"colnames","closure","function","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""col"") ","base","base","2.5.0"
"colnames<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"commandArgs","closure","function","TRUE","FALSE","(trailingOnly = FALSE) ","base","base","2.5.0"
"comment","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"comment<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"complex","closure","function","TRUE","FALSE","(length.out = 0, real = numeric(), imaginary = numeric(),     modulus = 1, argument = 0) ","base","base","2.5.0"
"computeRestarts","closure","function","TRUE","FALSE","(cond = NULL) ","base","base","2.5.0"
"conditionCall","closure","function","TRUE","FALSE","(c) ","base","base","2.5.0"
"conditionCall.condition","closure","function","TRUE","FALSE","(c) ","base","base","2.5.0"
"conditionMessage","closure","function","TRUE","FALSE","(c) ","base","base","2.5.0"
"conditionMessage.condition","closure","function","TRUE","FALSE","(c) ","base","base","2.5.0"
"conflicts","closure","function","TRUE","FALSE","(where = search(), detail = FALSE) ","base","base","2.5.0"
"contributors","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"cos","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"cosh","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"crossprod","closure","function","TRUE","FALSE","(x, y = NULL) ","base","base","2.5.0"
"cummax","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"cummin","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"cumprod","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"cumsum","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"cut","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"cut.Date","closure","function","TRUE","FALSE","(x, breaks, labels = NULL, start.on.monday = TRUE, right = FALSE,     ...) ","base","base","2.5.0"
"cut.POSIXt","closure","function","TRUE","FALSE","(x, breaks, labels = NULL, start.on.monday = TRUE, right = FALSE,     ...) ","base","base","2.5.0"
"cut.default","closure","function","TRUE","FALSE","(x, breaks, labels = NULL, include.lowest = FALSE, right = TRUE,     dig.lab = 3, ordered_result = FALSE, ...) ","base","base","2.5.0"
"dQuote","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"data.class","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"data.frame","closure","function","TRUE","FALSE","(..., row.names = NULL, check.rows = FALSE, check.names = TRUE,     stringsAsFactors = default.stringsAsFactors()) ","base","base","2.5.0"
"data.matrix","closure","function","TRUE","FALSE","(frame, rownames.force = NA) ","base","base","2.5.0"
"date","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"debug","builtin","function","TRUE","NA","(fun) ","base","base","2.5.0"
"default.stringsAsFactors","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"delay","closure","function","TRUE","FALSE","(x, env = .GlobalEnv) ","base","base","2.5.0"
"delayedAssign","closure","function","TRUE","FALSE","(x, value, eval.env = parent.frame(1), assign.env = parent.frame(1)) ","base","base","2.5.0"
"deparse","closure","function","TRUE","FALSE","(expr, width.cutoff = 60, backtick = mode(expr) %in%     c(""call"", ""expression"", ""(""), control = c(""keepInteger"",     ""showAttributes"", ""keepNA"")) ","base","base","2.5.0"
"det","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"detach","closure","function","TRUE","FALSE","(name, pos = 2, version, unload = FALSE) ","base","base","2.5.0"
"determinant","closure","function","TRUE","FALSE","(x, logarithm = TRUE, ...) ","base","base","2.5.0"
"determinant.matrix","closure","function","TRUE","FALSE","(x, logarithm = TRUE, ...) ","base","base","2.5.0"
"dget","closure","function","TRUE","FALSE","(file) ","base","base","2.5.0"
"diag","closure","function","TRUE","FALSE","(x = 1, nrow, ncol = n) ","base","base","2.5.0"
"diag<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"diff","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"diff.Date","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","base","base","2.5.0"
"diff.POSIXt","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","base","base","2.5.0"
"diff.default","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","base","base","2.5.0"
"difftime","closure","function","TRUE","FALSE","(time1, time2, tz = """", units = c(""auto"", ""secs"", ""mins"",     ""hours"", ""days"", ""weeks"")) ","base","base","2.5.0"
"digamma","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"dim","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"dim.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"dim<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"dimnames","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"dimnames.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"dimnames<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"dimnames<-.data.frame","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"dir","closure","function","TRUE","FALSE","(path = ""."", pattern = NULL, all.files = FALSE, full.names = FALSE,     recursive = FALSE) ","base","base","2.5.0"
"dir.create","closure","function","TRUE","FALSE","(path, showWarnings = TRUE, recursive = FALSE) ","base","base","2.5.0"
"dirname","closure","function","TRUE","FALSE","(path) ","base","base","2.5.0"
"do.call","closure","function","TRUE","FALSE","(what, args, quote = FALSE, envir = parent.frame()) ","base","base","2.5.0"
"double","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"dput","closure","function","TRUE","FALSE","(x, file = """", control = c(""keepNA"", ""keepInteger"",     ""showAttributes"")) ","base","base","2.5.0"
"drop","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"dump","closure","function","TRUE","FALSE","(list, file = ""dumpdata.R"", append = FALSE, control = ""all"",     envir = parent.frame(), evaluate = TRUE) ","base","base","2.5.0"
"duplicated","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"duplicated.POSIXlt","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"duplicated.array","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","2.5.0"
"duplicated.data.frame","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"duplicated.default","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"duplicated.matrix","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","2.5.0"
"dyn.load","closure","function","TRUE","FALSE","(x, local = TRUE, now = TRUE) ","base","base","2.5.0"
"dyn.unload","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"eapply","closure","function","TRUE","FALSE","(env, FUN, ..., all.names = FALSE) ","base","base","2.5.0"
"eigen","closure","function","TRUE","FALSE","(x, symmetric, only.values = FALSE, EISPACK = FALSE) ","base","base","2.5.0"
"emptyenv","builtin","function","TRUE","NA","() ","base","base","2.5.0"
"encodeString","closure","function","TRUE","FALSE","(x, width = 0, quote = """", na.encode = TRUE, justify = c(""left"",     ""right"", ""centre"", ""none"")) ","base","base","2.5.0"
"env.profile","closure","function","TRUE","FALSE","(env) ","base","base","2.5.0"
"environment","closure","function","TRUE","FALSE","(fun = NULL) ","base","base","2.5.0"
"environment<-","builtin","function","TRUE","NA","(fun, value) ","base","base","2.5.0"
"environmentIsLocked","closure","function","TRUE","FALSE","(env) ","base","base","2.5.0"
"environmentName","closure","function","TRUE","FALSE","(env) ","base","base","2.5.0"
"eval","closure","function","TRUE","FALSE","(expr, envir = parent.frame(), enclos = if (is.list(envir) ||     is.pairlist(envir)) parent.frame() else baseenv()) ","base","base","2.5.0"
"eval.parent","closure","function","TRUE","FALSE","(expr, n = 1) ","base","base","2.5.0"
"evalq","closure","function","TRUE","FALSE","(expr, envir, enclos) ","base","base","2.5.0"
"exists","closure","function","TRUE","FALSE","(x, where = -1, envir = if (missing(frame)) as.environment(where) else sys.frame(frame),     frame, mode = ""any"", inherits = TRUE) ","base","base","2.5.0"
"exp","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"expand.grid","closure","function","TRUE","FALSE","(..., KEEP.OUT.ATTRS = TRUE) ","base","base","2.5.0"
"expm1","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"expression","special","function","TRUE","NA","(...) ","base","base","2.5.0"
"factor","closure","function","TRUE","FALSE","(x = character(), levels = sort(unique.default(x), na.last = TRUE),     labels = levels, exclude = NA, ordered = is.ordered(x)) ","base","base","2.5.0"
"factorial","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"fifo","closure","function","TRUE","FALSE","(description = """", open = """", blocking = FALSE, encoding = getOption(""encoding"")) ","base","base","2.5.0"
"file","closure","function","TRUE","FALSE","(description = """", open = """", blocking = TRUE, encoding = getOption(""encoding"")) ","base","base","2.5.0"
"file.access","closure","function","TRUE","FALSE","(names, mode = 0) ","base","base","2.5.0"
"file.append","closure","function","TRUE","FALSE","(file1, file2) ","base","base","2.5.0"
"file.choose","closure","function","TRUE","FALSE","(new = FALSE) ","base","base","2.5.0"
"file.copy","closure","function","TRUE","FALSE","(from, to, overwrite = FALSE) ","base","base","2.5.0"
"file.create","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"file.exists","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"file.info","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"file.path","closure","function","TRUE","FALSE","(..., fsep = .Platform$file.sep) ","base","base","2.5.0"
"file.remove","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"file.rename","closure","function","TRUE","FALSE","(from, to) ","base","base","2.5.0"
"file.show","closure","function","TRUE","FALSE","(..., header = rep("""", nfiles), title = ""R Information"",     delete.file = FALSE, pager = getOption(""pager""), encoding = """") ","base","base","2.5.0"
"file.symlink","closure","function","TRUE","FALSE","(from, to) ","base","base","2.5.0"
"findInterval","closure","function","TRUE","FALSE","(x, vec, rightmost.closed = FALSE, all.inside = FALSE) ","base","base","2.5.0"
"findRestart","closure","function","TRUE","FALSE","(name, cond = NULL) ","base","base","2.5.0"
"floor","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"flush","closure","function","TRUE","FALSE","(con) ","base","base","2.5.0"
"flush.connection","closure","function","TRUE","FALSE","(con) ","base","base","2.5.0"
"for","special","function","TRUE","NA","","base","base","2.5.0"
"force","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"formals","closure","function","TRUE","FALSE","(fun = sys.function(sys.parent())) ","base","base","2.5.0"
"formals<-","closure","function","TRUE","FALSE","(fun, envir = environment(fun), value) ","base","base","2.5.0"
"format","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"format.AsIs","closure","function","TRUE","FALSE","(x, width = 12, ...) ","base","base","2.5.0"
"format.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"format.POSIXct","closure","function","TRUE","FALSE","(x, format = """", tz = """", usetz = FALSE, ...) ","base","base","2.5.0"
"format.POSIXlt","closure","function","TRUE","FALSE","(x, format = """", usetz = FALSE, ...) ","base","base","2.5.0"
"format.char","closure","function","TRUE","FALSE","(x, width = NULL, flag = ""-"") ","base","base","2.5.0"
"format.data.frame","closure","function","TRUE","FALSE","(x, ..., justify = ""none"") ","base","base","2.5.0"
"format.default","closure","function","TRUE","FALSE","(x, trim = FALSE, digits = NULL, nsmall = 0, justify = c(""left"",     ""right"", ""centre"", ""none""), width = NULL, na.encode = TRUE,     scientific = NA, big.mark = """", big.interval = 3, small.mark = """",     small.interval = 5, decimal.mark = ""."", zero.print = NULL,     ...) ","base","base","2.5.0"
"format.difftime","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"format.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"format.hexmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"format.info","closure","function","TRUE","FALSE","(x, digits = NULL, nsmall = 0) ","base","base","2.5.0"
"format.octmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"format.pval","closure","function","TRUE","FALSE","(pv, digits = max(1, getOption(""digits"") - 2), eps = .Machine$double.eps,     na.form = ""NA"") ","base","base","2.5.0"
"formatC","closure","function","TRUE","FALSE","(x, digits = NULL, width = NULL, format = NULL, flag = """",     mode = NULL, big.mark = """", big.interval = 3, small.mark = """",     small.interval = 5, decimal.mark = ""."", preserve.width = ""individual"") ","base","base","2.5.0"
"formatDL","closure","function","TRUE","FALSE","(x, y, style = c(""table"", ""list""), width = 0.9 * getOption(""width""),     indent = NULL) ","base","base","2.5.0"
"forwardsolve","closure","function","TRUE","FALSE","(l, x, k = ncol(l), upper.tri = FALSE, transpose = FALSE) ","base","base","2.5.0"
"function","special","function","TRUE","NA","","base","base","2.5.0"
"gamma","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"gammaCody","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"gc","closure","function","TRUE","FALSE","(verbose = getOption(""verbose""), reset = FALSE) ","base","base","2.5.0"
"gc.time","builtin","function","TRUE","NA","(on = TRUE) ","base","base","2.5.0"
"gcinfo","closure","function","TRUE","FALSE","(verbose) ","base","base","2.5.0"
"gctorture","closure","function","TRUE","FALSE","(on = TRUE) ","base","base","2.5.0"
"get","closure","function","TRUE","FALSE","(x, pos = -1, envir = as.environment(pos), mode = ""any"",     inherits = TRUE) ","base","base","2.5.0"
"getAllConnections","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getCConverterDescriptions","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getCConverterStatus","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getCallingDLL","closure","function","TRUE","FALSE","(f = sys.function(-1), doStop = FALSE) ","base","base","2.5.0"
"getCallingDLLe","closure","function","TRUE","FALSE","(e) ","base","base","2.5.0"
"getConnection","closure","function","TRUE","FALSE","(what) ","base","base","2.5.0"
"getDLLRegisteredRoutines","closure","function","TRUE","FALSE","(dll, addNames = TRUE) ","base","base","2.5.0"
"getDLLRegisteredRoutines.DLLInfo","closure","function","TRUE","FALSE","(dll, addNames = TRUE) ","base","base","2.5.0"
"getDLLRegisteredRoutines.character","closure","function","TRUE","FALSE","(dll, addNames = TRUE) ","base","base","2.5.0"
"getExportedValue","closure","function","TRUE","FALSE","(ns, name) ","base","base","2.5.0"
"getHook","closure","function","TRUE","FALSE","(hookName) ","base","base","2.5.0"
"getLoadedDLLs","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getNamespace","closure","function","TRUE","FALSE","(name) ","base","base","2.5.0"
"getNamespaceExports","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"getNamespaceImports","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"getNamespaceInfo","closure","function","TRUE","FALSE","(ns, which) ","base","base","2.5.0"
"getNamespaceName","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"getNamespaceUsers","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"getNamespaceVersion","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"getNativeSymbolInfo","closure","function","TRUE","FALSE","(name, PACKAGE, unlist = TRUE, withRegistrationInfo = FALSE) ","base","base","2.5.0"
"getNumCConverters","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getOption","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"getRversion","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getSrcLines","closure","function","TRUE","FALSE","(srcfile, first, last) ","base","base","2.5.0"
"getTaskCallbackNames","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"getenv","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"geterrmessage","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"gettext","closure","function","TRUE","FALSE","(..., domain = NULL) ","base","base","2.5.0"
"gettextf","closure","function","TRUE","FALSE","(fmt, ..., domain = NULL) ","base","base","2.5.0"
"getwd","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"gl","closure","function","TRUE","FALSE","(n, k, length = n * k, labels = 1:n, ordered = FALSE) ","base","base","2.5.0"
"globalenv","builtin","function","TRUE","NA","() ","base","base","2.5.0"
"gregexpr","closure","function","TRUE","FALSE","(pattern, text, extended = TRUE, perl = FALSE, fixed = FALSE,     useBytes = FALSE) ","base","base","2.5.0"
"grep","closure","function","TRUE","FALSE","(pattern, x, ignore.case = FALSE, extended = TRUE, perl = FALSE,     value = FALSE, fixed = FALSE, useBytes = FALSE) ","base","base","2.5.0"
"gsub","closure","function","TRUE","FALSE","(pattern, replacement, x, ignore.case = FALSE, extended = TRUE,     perl = FALSE, fixed = FALSE, useBytes = FALSE) ","base","base","2.5.0"
"gzcon","closure","function","TRUE","FALSE","(con, level = 6, allowNonCompressed = TRUE) ","base","base","2.5.0"
"gzfile","closure","function","TRUE","FALSE","(description, open = """", encoding = getOption(""encoding""),     compression = 6) ","base","base","2.5.0"
"httpclient","closure","function","TRUE","FALSE","(url, port = 80, error.is.fatal = TRUE, check.MIME.type = TRUE,     file = tempfile(), drop.ctrl.z = TRUE) ","base","base","2.5.0"
"iconv","closure","function","TRUE","FALSE","(x, from = """", to = """", sub = NA) ","base","base","2.5.0"
"iconvlist","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"identical","closure","function","TRUE","FALSE","(x, y) ","base","base","2.5.0"
"if","special","function","TRUE","NA","","base","base","2.5.0"
"ifelse","closure","function","TRUE","FALSE","(test, yes, no) ","base","base","2.5.0"
"importIntoEnv","closure","function","TRUE","FALSE","(impenv, impnames, expenv, expnames) ","base","base","2.5.0"
"inherits","closure","function","TRUE","FALSE","(x, what, which = FALSE) ","base","base","2.5.0"
"intToBits","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"intToUtf8","closure","function","TRUE","FALSE","(x, multiple = FALSE) ","base","base","2.5.0"
"integer","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"interaction","closure","function","TRUE","FALSE","(..., drop = FALSE, sep = ""."", lex.order = FALSE) ","base","base","2.5.0"
"interactive","special","function","TRUE","NA","() ","base","base","2.5.0"
"intersect","closure","function","TRUE","FALSE","(x, y) ","base","base","2.5.0"
"inverse.rle","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"invisible","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"invokeRestart","closure","function","TRUE","FALSE","(r, ...) ","base","base","2.5.0"
"invokeRestartInteractively","closure","function","TRUE","FALSE","(r) ","base","base","2.5.0"
"is.R","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"is.array","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.atomic","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.call","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.character","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.complex","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.double","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.element","closure","function","TRUE","FALSE","(el, set) ","base","base","2.5.0"
"is.environment","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.expression","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.factor","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.finite","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.function","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.infinite","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.integer","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.language","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.list","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.loaded","closure","function","TRUE","FALSE","(symbol, PACKAGE = """", type = """") ","base","base","2.5.0"
"is.logical","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.matrix","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.na","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.na.POSIXlt","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.na.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.na<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"is.na<-.default","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"is.na<-.factor","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"is.name","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.nan","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.null","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.numeric","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.object","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.ordered","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.package_version","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.pairlist","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.primitive","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.qr","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.raw","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.real","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.recursive","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.single","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.symbol","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"is.table","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"is.unsorted","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","base","base","2.5.0"
"is.vector","closure","function","TRUE","FALSE","(x, mode = ""any"") ","base","base","2.5.0"
"isBaseNamespace","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"isIncomplete","closure","function","TRUE","FALSE","(con) ","base","base","2.5.0"
"isNamespace","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"isOpen","closure","function","TRUE","FALSE","(con, rw = """") ","base","base","2.5.0"
"isRestart","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"isS4","closure","function","TRUE","FALSE","(object) ","base","base","2.5.0"
"isSeekable","closure","function","TRUE","FALSE","(con) ","base","base","2.5.0"
"isSymmetric","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"isSymmetric.matrix","closure","function","TRUE","FALSE","(object, tol = 100 * .Machine$double.eps, ...) ","base","base","2.5.0"
"isTRUE","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"jitter","closure","function","TRUE","FALSE","(x, factor = 1, amount = NULL) ","base","base","2.5.0"
"julian","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"julian.Date","closure","function","TRUE","FALSE","(x, origin = as.Date(""1970-01-01""), ...) ","base","base","2.5.0"
"julian.POSIXt","closure","function","TRUE","FALSE","(x, origin = as.POSIXct(""1970-01-01"", tz = ""GMT""), ...) ","base","base","2.5.0"
"kappa","closure","function","TRUE","FALSE","(z, ...) ","base","base","2.5.0"
"kappa.default","closure","function","TRUE","FALSE","(z, exact = FALSE, ...) ","base","base","2.5.0"
"kappa.lm","closure","function","TRUE","FALSE","(z, ...) ","base","base","2.5.0"
"kappa.qr","closure","function","TRUE","FALSE","(z, ...) ","base","base","2.5.0"
"kappa.tri","closure","function","TRUE","FALSE","(z, exact = FALSE, ...) ","base","base","2.5.0"
"kronecker","closure","function","TRUE","FALSE","(X, Y, FUN = ""*"", make.dimnames = FALSE, ...) ","base","base","2.5.0"
"l10n_info","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"labels","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"labels.default","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"lapply","closure","function","TRUE","FALSE","(X, FUN, ...) ","base","base","2.5.0"
"lazyLoad","closure","function","TRUE","FALSE","(filebase, envir = parent.frame(), filter) ","base","base","2.5.0"
"lbeta","closure","function","TRUE","FALSE","(a, b) ","base","base","2.5.0"
"lchoose","closure","function","TRUE","FALSE","(n, k) ","base","base","2.5.0"
"length","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"length<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"length<-.factor","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"letters","character","character","TRUE","FALSE","NA","base","base","2.5.0"
"levels","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"levels<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"levels<-.factor","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"lfactorial","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"lgamma","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"library","closure","function","TRUE","FALSE","(package, help, pos = 2, lib.loc = NULL, character.only = FALSE,     logical.return = FALSE, warn.conflicts = TRUE, keep.source = getOption(""keep.source.pkgs""),     verbose = getOption(""verbose""), version) ","base","base","2.5.0"
"library.dynam","closure","function","TRUE","FALSE","(chname, package = NULL, lib.loc = NULL, verbose = getOption(""verbose""),     file.ext = .Platform$dynlib.ext, ...) ","base","base","2.5.0"
"library.dynam.unload","closure","function","TRUE","FALSE","(chname, libpath, verbose = getOption(""verbose""), file.ext = .Platform$dynlib.ext) ","base","base","2.5.0"
"licence","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"license","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"list","builtin","function","TRUE","NA","(...) ","base","base","2.5.0"
"list.files","closure","function","TRUE","FALSE","(path = ""."", pattern = NULL, all.files = FALSE, full.names = FALSE,     recursive = FALSE) ","base","base","2.5.0"
"load","closure","function","TRUE","FALSE","(file, envir = parent.frame()) ","base","base","2.5.0"
"loadNamespace","closure","function","TRUE","FALSE","(package, lib.loc = NULL, keep.source = getOption(""keep.source.pkgs""),     partial = FALSE, declarativeOnly = FALSE) ","base","base","2.5.0"
"loadURL","closure","function","TRUE","FALSE","(url, envir = parent.frame(), quiet = TRUE, ...) ","base","base","2.5.0"
"loadedNamespaces","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"loadingNamespaceInfo","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"local","closure","function","TRUE","FALSE","(expr, envir = new.env()) ","base","base","2.5.0"
"lockBinding","closure","function","TRUE","FALSE","(sym, env) ","base","base","2.5.0"
"lockEnvironment","closure","function","TRUE","FALSE","(env, bindings = FALSE) ","base","base","2.5.0"
"log","closure","function","TRUE","FALSE","(x, base = exp(1)) ","base","base","2.5.0"
"log10","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"log1p","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"log2","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"logb","closure","function","TRUE","FALSE","(x, base = exp(1)) ","base","base","2.5.0"
"logical","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"lower.tri","closure","function","TRUE","FALSE","(x, diag = FALSE) ","base","base","2.5.0"
"ls","closure","function","TRUE","FALSE","(name, pos = -1, envir = as.environment(pos), all.names = FALSE,     pattern) ","base","base","2.5.0"
"machine","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"make.names","closure","function","TRUE","FALSE","(names, unique = FALSE, allow_ = TRUE) ","base","base","2.5.0"
"make.unique","closure","function","TRUE","FALSE","(names, sep = ""."") ","base","base","2.5.0"
"makeActiveBinding","closure","function","TRUE","FALSE","(sym, fun, env) ","base","base","2.5.0"
"manglePackageName","closure","function","TRUE","FALSE","(pkgName, pkgVersion) ","base","base","2.5.0"
"mapply","closure","function","TRUE","FALSE","(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE) ","base","base","2.5.0"
"margin.table","closure","function","TRUE","FALSE","(x, margin = NULL) ","base","base","2.5.0"
"mat.or.vec","closure","function","TRUE","FALSE","(nr, nc) ","base","base","2.5.0"
"match","closure","function","TRUE","FALSE","(x, table, nomatch = NA, incomparables = FALSE) ","base","base","2.5.0"
"match.arg","closure","function","TRUE","FALSE","(arg, choices, several.ok = FALSE) ","base","base","2.5.0"
"match.call","closure","function","TRUE","FALSE","(definition = NULL, call = sys.call(sys.parent()), expand.dots = TRUE) ","base","base","2.5.0"
"match.fun","closure","function","TRUE","FALSE","(FUN, descend = TRUE) ","base","base","2.5.0"
"matrix","closure","function","TRUE","FALSE","(data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL) ","base","base","2.5.0"
"max","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"max.col","closure","function","TRUE","FALSE","(m, ties.method = c(""random"", ""first"", ""last"")) ","base","base","2.5.0"
"mean","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"mean.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"mean.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"mean.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"mean.data.frame","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"mean.default","closure","function","TRUE","FALSE","(x, trim = 0, na.rm = FALSE, ...) ","base","base","2.5.0"
"mean.difftime","closure","function","TRUE","FALSE","(x, ..., na.rm = FALSE) ","base","base","2.5.0"
"mem.limits","closure","function","TRUE","FALSE","(nsize = NA, vsize = NA) ","base","base","2.5.0"
"memory.profile","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"merge","closure","function","TRUE","FALSE","(x, y, ...) ","base","base","2.5.0"
"merge.data.frame","closure","function","TRUE","FALSE","(x, y, by = intersect(names(x), names(y)), by.x = by,     by.y = by, all = FALSE, all.x = all, all.y = all, sort = TRUE,     suffixes = c("".x"", "".y""), ...) ","base","base","2.5.0"
"merge.default","closure","function","TRUE","FALSE","(x, y, ...) ","base","base","2.5.0"
"message","closure","function","TRUE","FALSE","(..., domain = NULL, appendLF = TRUE) ","base","base","2.5.0"
"mget","closure","function","TRUE","FALSE","(x, envir, mode = ""any"", ifnotfound = list(function(x) stop(paste(""value for '"",     x, ""' not found"", sep = """"), call. = FALSE)), inherits = FALSE) ","base","base","2.5.0"
"min","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"missing","special","function","TRUE","NA","(x) ","base","base","2.5.0"
"mode","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"mode<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"month.abb","character","character","TRUE","FALSE","NA","base","base","2.5.0"
"month.name","character","character","TRUE","FALSE","NA","base","base","2.5.0"
"months","closure","function","TRUE","FALSE","(x, abbreviate) ","base","base","2.5.0"
"months.Date","closure","function","TRUE","FALSE","(x, abbreviate = FALSE) ","base","base","2.5.0"
"months.POSIXt","closure","function","TRUE","FALSE","(x, abbreviate = FALSE) ","base","base","2.5.0"
"mostattributes<-","closure","function","TRUE","FALSE","(obj, value) ","base","base","2.5.0"
"names","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"names<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"namespaceExport","closure","function","TRUE","FALSE","(ns, vars) ","base","base","2.5.0"
"namespaceImport","closure","function","TRUE","FALSE","(self, ...) ","base","base","2.5.0"
"namespaceImportClasses","closure","function","TRUE","FALSE","(self, ns, vars) ","base","base","2.5.0"
"namespaceImportFrom","closure","function","TRUE","FALSE","(self, ns, vars, generics, packages) ","base","base","2.5.0"
"namespaceImportMethods","closure","function","TRUE","FALSE","(self, ns, vars) ","base","base","2.5.0"
"nargs","special","function","TRUE","NA","() ","base","base","2.5.0"
"nchar","closure","function","TRUE","FALSE","(x, type = ""bytes"") ","base","base","2.5.0"
"ncol","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"new.env","closure","function","TRUE","FALSE","(hash = FALSE, parent = parent.frame(), size = 29L) ","base","base","2.5.0"
"next","special","function","TRUE","NA","","base","base","2.5.0"
"ngettext","closure","function","TRUE","FALSE","(n, msg1, msg2, domain = NULL) ","base","base","2.5.0"
"nlevels","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"noquote","closure","function","TRUE","FALSE","(obj) ","base","base","2.5.0"
"nrow","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"numeric","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"objects","closure","function","TRUE","FALSE","(name, pos = -1, envir = as.environment(pos), all.names = FALSE,     pattern) ","base","base","2.5.0"
"oldClass","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"oldClass<-","builtin","function","TRUE","NA","(x, value) ","base","base","2.5.0"
"on.exit","special","function","TRUE","NA","(expr, add = FALSE) ","base","base","2.5.0"
"open","closure","function","TRUE","FALSE","(con, ...) ","base","base","2.5.0"
"open.connection","closure","function","TRUE","FALSE","(con, open = ""r"", blocking = TRUE, ...) ","base","base","2.5.0"
"open.srcfile","closure","function","TRUE","FALSE","(con, line, ...) ","base","base","2.5.0"
"open.srcfilecopy","closure","function","TRUE","FALSE","(con, line, ...) ","base","base","2.5.0"
"options","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"order","closure","function","TRUE","FALSE","(..., na.last = TRUE, decreasing = FALSE) ","base","base","2.5.0"
"ordered","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"outer","closure","function","TRUE","FALSE","(X, Y, FUN = ""*"", ...) ","base","base","2.5.0"
"packBits","closure","function","TRUE","FALSE","(x, type = c(""raw"", ""integer"")) ","base","base","2.5.0"
"package.description","closure","function","TRUE","FALSE","(pkg, lib.loc = NULL, fields = NULL) ","base","base","2.5.0"
"packageEvent","closure","function","TRUE","FALSE","(pkgname, event = c(""onLoad"", ""attach"", ""detach"", ""onUnload"")) ","base","base","2.5.0"
"packageHasNamespace","closure","function","TRUE","FALSE","(package, package.lib) ","base","base","2.5.0"
"packageStartupMessage","closure","function","TRUE","FALSE","(..., domain = NULL, appendLF = TRUE) ","base","base","2.5.0"
"package_version","closure","function","TRUE","FALSE","(x, strict = TRUE) ","base","base","2.5.0"
"pairlist","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"parent.env","closure","function","TRUE","FALSE","(env) ","base","base","2.5.0"
"parent.env<-","closure","function","TRUE","FALSE","(env, value) ","base","base","2.5.0"
"parent.frame","closure","function","TRUE","FALSE","(n = 1) ","base","base","2.5.0"
"parse","closure","function","TRUE","FALSE","(file = """", n = NULL, text = NULL, prompt = ""?"", srcfile = NULL,     encoding = ""unknown"") ","base","base","2.5.0"
"parse.dcf","closure","function","TRUE","FALSE","(text = NULL, file = """", fields = NULL, versionfix = FALSE) ","base","base","2.5.0"
"parseNamespaceFile","closure","function","TRUE","FALSE","(package, package.lib, mustExist = TRUE) ","base","base","2.5.0"
"paste","closure","function","TRUE","FALSE","(..., sep = "" "", collapse = NULL) ","base","base","2.5.0"
"path.expand","closure","function","TRUE","FALSE","(path) ","base","base","2.5.0"
"pentagamma","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"pi","double","numeric","TRUE","FALSE","NA","base","base","2.5.0"
"pipe","closure","function","TRUE","FALSE","(description, open = """", encoding = getOption(""encoding"")) ","base","base","2.5.0"
"pmatch","closure","function","TRUE","FALSE","(x, table, nomatch = NA, duplicates.ok = FALSE) ","base","base","2.5.0"
"pmax","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"pmax.int","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"pmin","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"pmin.int","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"polyroot","closure","function","TRUE","FALSE","(z) ","base","base","2.5.0"
"pos.to.env","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"pretty","closure","function","TRUE","FALSE","(x, n = 5, min.n = n%/%3, shrink.sml = 0.75, high.u.bias = 1.5,     u5.bias = 0.5 + 1.5 * high.u.bias, eps.correct = 0) ","base","base","2.5.0"
"prettyNum","closure","function","TRUE","FALSE","(x, big.mark = """", big.interval = 3, small.mark = """",     small.interval = 5, decimal.mark = ""."", preserve.width = c(""common"",         ""individual"", ""none""), zero.print = NULL, ...) ","base","base","2.5.0"
"print","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.AsIs","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.DLLInfo","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.DLLInfoList","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.DLLRegisteredRoutines","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.NativeRoutineList","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.atomic","closure","function","TRUE","FALSE","(x, quote = TRUE, ...) ","base","base","2.5.0"
"print.by","closure","function","TRUE","FALSE","(x, ..., vsep) ","base","base","2.5.0"
"print.condition","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.connection","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.data.frame","closure","function","TRUE","FALSE","(x, ..., digits = NULL, quote = FALSE, right = TRUE) ","base","base","2.5.0"
"print.default","closure","function","TRUE","FALSE","(x, digits = NULL, quote = TRUE, na.print = NULL, print.gap = NULL,     right = FALSE, max = NULL, useSource = TRUE, ...) ","base","base","2.5.0"
"print.difftime","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","2.5.0"
"print.factor","closure","function","TRUE","FALSE","(x, quote = FALSE, max.levels = NULL, width = getOption(""width""),     ...) ","base","base","2.5.0"
"print.hexmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.libraryIQR","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.listof","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.noquote","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.octmode","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.packageInfo","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.package_version","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.proc_time","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.restart","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.rle","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","base","base","2.5.0"
"print.simple.list","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.srcfile","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"print.srcref","closure","function","TRUE","FALSE","(x, useSource = TRUE, ...) ","base","base","2.5.0"
"print.summary.table","closure","function","TRUE","FALSE","(x, digits = max(1, getOption(""digits"") - 3), ...) ","base","base","2.5.0"
"print.table","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), quote = FALSE, na.print = """",     zero.print = ""0"", justify = ""none"", ...) ","base","base","2.5.0"
"print.warnings","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"printNoClass","closure","function","TRUE","FALSE","(x, digits = NULL, quote = TRUE, na.print = NULL, print.gap = NULL,     right = FALSE, ...) ","base","base","2.5.0"
"prmatrix","closure","function","TRUE","FALSE","(x, rowlab = dn[[1]], collab = dn[[2]], quote = TRUE,     right = FALSE, na.print = NULL, ...) ","base","base","2.5.0"
"proc.time","builtin","function","TRUE","NA","() ","base","base","2.5.0"
"prod","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"prop.table","closure","function","TRUE","FALSE","(x, margin = NULL) ","base","base","2.5.0"
"provide","closure","function","TRUE","FALSE","(package) ","base","base","2.5.0"
"psigamma","closure","function","TRUE","FALSE","(x, deriv = 0) ","base","base","2.5.0"
"pushBack","closure","function","TRUE","FALSE","(data, connection, newLine = TRUE) ","base","base","2.5.0"
"pushBackLength","closure","function","TRUE","FALSE","(connection) ","base","base","2.5.0"
"q","closure","function","TRUE","FALSE","(save = ""default"", status = 0, runLast = TRUE) ","base","base","2.5.0"
"qr","closure","function","TRUE","FALSE","(x, tol = 1e-07, LAPACK = FALSE) ","base","base","2.5.0"
"qr.Q","closure","function","TRUE","FALSE","(qr, complete = FALSE, Dvec = rep.int(if (cmplx) 1 +     (0+0i) else 1, if (complete) dqr[1] else min(dqr))) ","base","base","2.5.0"
"qr.R","closure","function","TRUE","FALSE","(qr, complete = FALSE) ","base","base","2.5.0"
"qr.X","closure","function","TRUE","FALSE","(qr, complete = FALSE, ncol = if (complete) nrow(R) else min(dim(R))) ","base","base","2.5.0"
"qr.coef","closure","function","TRUE","FALSE","(qr, y) ","base","base","2.5.0"
"qr.fitted","closure","function","TRUE","FALSE","(qr, y, k = qr$rank) ","base","base","2.5.0"
"qr.qty","closure","function","TRUE","FALSE","(qr, y) ","base","base","2.5.0"
"qr.qy","closure","function","TRUE","FALSE","(qr, y) ","base","base","2.5.0"
"qr.resid","closure","function","TRUE","FALSE","(qr, y) ","base","base","2.5.0"
"qr.solve","closure","function","TRUE","FALSE","(a, b, tol = 1e-07) ","base","base","2.5.0"
"quarters","closure","function","TRUE","FALSE","(x, abbreviate) ","base","base","2.5.0"
"quarters.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"quarters.POSIXt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"quit","closure","function","TRUE","FALSE","(save = ""default"", status = 0, runLast = TRUE) ","base","base","2.5.0"
"quote","special","function","TRUE","NA","(expr) ","base","base","2.5.0"
"range","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"range.default","closure","function","TRUE","FALSE","(..., na.rm = FALSE, finite = FALSE) ","base","base","2.5.0"
"rank","closure","function","TRUE","FALSE","(x, na.last = TRUE, ties.method = c(""average"", ""first"",     ""random"", ""max"", ""min"")) ","base","base","2.5.0"
"rapply","closure","function","TRUE","FALSE","(object, f, classes = ""ANY"", deflt = NULL, how = c(""unlist"",     ""replace"", ""list""), ...) ","base","base","2.5.0"
"raw","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"rawShift","closure","function","TRUE","FALSE","(x, n) ","base","base","2.5.0"
"rawToBits","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"rawToChar","closure","function","TRUE","FALSE","(x, multiple = FALSE) ","base","base","2.5.0"
"rbind","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","2.5.0"
"rbind.data.frame","closure","function","TRUE","FALSE","(..., deparse.level = 1) ","base","base","2.5.0"
"read.dcf","closure","function","TRUE","FALSE","(file, fields = NULL) ","base","base","2.5.0"
"read.table.url","closure","function","TRUE","FALSE","(url, method, ...) ","base","base","2.5.0"
"readBin","closure","function","TRUE","FALSE","(con, what, n = 1, size = NA, signed = TRUE, endian = .Platform$endian) ","base","base","2.5.0"
"readChar","closure","function","TRUE","FALSE","(con, nchars) ","base","base","2.5.0"
"readLines","closure","function","TRUE","FALSE","(con = stdin(), n = -1, ok = TRUE, warn = TRUE, encoding = ""unknown"") ","base","base","2.5.0"
"readline","closure","function","TRUE","FALSE","(prompt = """") ","base","base","2.5.0"
"real","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"reg.finalizer","closure","function","TRUE","FALSE","(e, f, onexit = FALSE) ","base","base","2.5.0"
"regexpr","closure","function","TRUE","FALSE","(pattern, text, extended = TRUE, perl = FALSE, fixed = FALSE,     useBytes = FALSE) ","base","base","2.5.0"
"registerS3method","closure","function","TRUE","FALSE","(genname, class, method, envir = parent.frame()) ","base","base","2.5.0"
"registerS3methods","closure","function","TRUE","FALSE","(info, package, env) ","base","base","2.5.0"
"remove","closure","function","TRUE","FALSE","(..., list = character(0), pos = -1, envir = as.environment(pos),     inherits = FALSE) ","base","base","2.5.0"
"removeCConverter","closure","function","TRUE","FALSE","(id) ","base","base","2.5.0"
"removeTaskCallback","closure","function","TRUE","FALSE","(id) ","base","base","2.5.0"
"rep","special","function","TRUE","NA","(x, ...) ","base","base","2.5.0"
"rep.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"rep.POSIXct","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"rep.POSIXlt","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"rep.factor","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"rep.int","closure","function","TRUE","FALSE","(x, times) ","base","base","2.5.0"
"repeat","special","function","TRUE","NA","","base","base","2.5.0"
"replace","closure","function","TRUE","FALSE","(x, list, values) ","base","base","2.5.0"
"replicate","closure","function","TRUE","FALSE","(n, expr, simplify = TRUE) ","base","base","2.5.0"
"require","closure","function","TRUE","FALSE","(package, lib.loc = NULL, quietly = FALSE, warn.conflicts = TRUE,     keep.source = getOption(""keep.source.pkgs""), character.only = FALSE,     version, save = TRUE) ","base","base","2.5.0"
"restart","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"restartDescription","closure","function","TRUE","FALSE","(r) ","base","base","2.5.0"
"restartFormals","closure","function","TRUE","FALSE","(r) ","base","base","2.5.0"
"retracemem","builtin","function","TRUE","NA","(x, previous = NULL) ","base","base","2.5.0"
"return","special","function","TRUE","NA","","base","base","2.5.0"
"rev","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"rev.default","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"rle","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"rm","closure","function","TRUE","FALSE","(..., list = character(0), pos = -1, envir = as.environment(pos),     inherits = FALSE) ","base","base","2.5.0"
"round","closure","function","TRUE","FALSE","(x, digits = 0) ","base","base","2.5.0"
"round.Date","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"round.POSIXt","closure","function","TRUE","FALSE","(x, units = c(""secs"", ""mins"", ""hours"", ""days"")) ","base","base","2.5.0"
"round.difftime","closure","function","TRUE","FALSE","(x, digits = 0, ...) ","base","base","2.5.0"
"row","closure","function","TRUE","FALSE","(x, as.factor = FALSE) ","base","base","2.5.0"
"row.names","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"row.names.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"row.names.default","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"row.names<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"row.names<-.data.frame","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"row.names<-.default","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"rowMeans","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","2.5.0"
"rowSums","closure","function","TRUE","FALSE","(x, na.rm = FALSE, dims = 1) ","base","base","2.5.0"
"rownames","closure","function","TRUE","FALSE","(x, do.NULL = TRUE, prefix = ""row"") ","base","base","2.5.0"
"rownames<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"rowsum","closure","function","TRUE","FALSE","(x, group, reorder = TRUE, ...) ","base","base","2.5.0"
"rowsum.data.frame","closure","function","TRUE","FALSE","(x, group, reorder = TRUE, na.rm = FALSE, ...) ","base","base","2.5.0"
"rowsum.default","closure","function","TRUE","FALSE","(x, group, reorder = TRUE, na.rm = FALSE, ...) ","base","base","2.5.0"
"sQuote","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"sample","closure","function","TRUE","FALSE","(x, size, replace = FALSE, prob = NULL) ","base","base","2.5.0"
"sapply","closure","function","TRUE","FALSE","(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE) ","base","base","2.5.0"
"save","closure","function","TRUE","FALSE","(..., list = character(0), file = stop(""'file' must be specified""),     ascii = FALSE, version = NULL, envir = parent.frame(), compress = !ascii,     eval.promises = TRUE) ","base","base","2.5.0"
"save.image","closure","function","TRUE","FALSE","(file = "".RData"", version = NULL, ascii = FALSE, compress = !ascii,     safe = TRUE) ","base","base","2.5.0"
"saveNamespaceImage","closure","function","TRUE","FALSE","(package, rdafile, lib.loc = NULL, keep.source = getOption(""keep.source.pkgs""),     compress = TRUE) ","base","base","2.5.0"
"scale","closure","function","TRUE","FALSE","(x, center = TRUE, scale = TRUE) ","base","base","2.5.0"
"scale.default","closure","function","TRUE","FALSE","(x, center = TRUE, scale = TRUE) ","base","base","2.5.0"
"scan","closure","function","TRUE","FALSE","(file = """", what = double(0), nmax = -1, n = -1, sep = """",     quote = if (identical(sep, ""\n"")) """" else ""'\"""", dec = ""."",     skip = 0, nlines = 0, na.strings = ""NA"", flush = FALSE, fill = FALSE,     strip.white = FALSE, quiet = FALSE, blank.lines.skip = TRUE,     multi.line = TRUE, comment.char = """", allowEscapes = FALSE,     encoding = ""unknown"") ","base","base","2.5.0"
"scan.url","closure","function","TRUE","FALSE","(url, file = tempfile(), method, ...) ","base","base","2.5.0"
"search","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"searchpaths","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"seek","closure","function","TRUE","FALSE","(con, ...) ","base","base","2.5.0"
"seek.connection","closure","function","TRUE","FALSE","(con, where = NA, origin = ""start"", rw = """", ...) ","base","base","2.5.0"
"seq","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"seq.Date","closure","function","TRUE","FALSE","(from, to, by, length.out = NULL, along.with = NULL,     ...) ","base","base","2.5.0"
"seq.POSIXt","closure","function","TRUE","FALSE","(from, to, by, length.out = NULL, along.with = NULL,     ...) ","base","base","2.5.0"
"seq.default","closure","function","TRUE","FALSE","(from = 1, to = 1, by = ((to - from)/(length.out - 1)),     length.out = NULL, along.with = NULL, ...) ","base","base","2.5.0"
"seq.int","special","function","TRUE","NA","(from, to, by, length.out, along.with, ...) ","base","base","2.5.0"
"seq_along","builtin","function","TRUE","NA","(along.with) ","base","base","2.5.0"
"seq_len","builtin","function","TRUE","NA","(length.out) ","base","base","2.5.0"
"sequence","closure","function","TRUE","FALSE","(nvec) ","base","base","2.5.0"
"serialize","closure","function","TRUE","FALSE","(object, connection, ascii = FALSE, refhook = NULL) ","base","base","2.5.0"
"set.seed","closure","function","TRUE","FALSE","(seed, kind = NULL) ","base","base","2.5.0"
"setCConverterStatus","closure","function","TRUE","FALSE","(id, status) ","base","base","2.5.0"
"setHook","closure","function","TRUE","FALSE","(hookName, value, action = c(""append"", ""prepend"", ""replace"")) ","base","base","2.5.0"
"setNamespaceInfo","closure","function","TRUE","FALSE","(ns, which, val) ","base","base","2.5.0"
"setdiff","closure","function","TRUE","FALSE","(x, y) ","base","base","2.5.0"
"setequal","closure","function","TRUE","FALSE","(x, y) ","base","base","2.5.0"
"setwd","closure","function","TRUE","FALSE","(dir) ","base","base","2.5.0"
"shQuote","closure","function","TRUE","FALSE","(string, type = c(""sh"", ""csh"", ""cmd"")) ","base","base","2.5.0"
"showConnections","closure","function","TRUE","FALSE","(all = FALSE) ","base","base","2.5.0"
"sign","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"signalCondition","closure","function","TRUE","FALSE","(cond) ","base","base","2.5.0"
"signif","closure","function","TRUE","FALSE","(x, digits = 6) ","base","base","2.5.0"
"simpleCondition","closure","function","TRUE","FALSE","(message, call = NULL) ","base","base","2.5.0"
"simpleError","closure","function","TRUE","FALSE","(message, call = NULL) ","base","base","2.5.0"
"simpleMessage","closure","function","TRUE","FALSE","(message, call = NULL) ","base","base","2.5.0"
"simpleWarning","closure","function","TRUE","FALSE","(message, call = NULL) ","base","base","2.5.0"
"sin","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"single","closure","function","TRUE","FALSE","(length = 0) ","base","base","2.5.0"
"sinh","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"sink","closure","function","TRUE","FALSE","(file = NULL, append = FALSE, type = c(""output"", ""message""),     split = FALSE) ","base","base","2.5.0"
"sink.number","closure","function","TRUE","FALSE","(type = c(""output"", ""message"")) ","base","base","2.5.0"
"slice.index","closure","function","TRUE","FALSE","(x, MARGIN) ","base","base","2.5.0"
"socketConnection","closure","function","TRUE","FALSE","(host = ""localhost"", port, server = FALSE, blocking = FALSE,     open = ""a+"", encoding = getOption(""encoding"")) ","base","base","2.5.0"
"socketSelect","closure","function","TRUE","FALSE","(socklist, write = FALSE, timeout = NULL) ","base","base","2.5.0"
"solve","closure","function","TRUE","FALSE","(a, b, ...) ","base","base","2.5.0"
"solve.default","closure","function","TRUE","FALSE","(a, b, tol = ifelse(LINPACK, 1e-07, .Machine$double.eps),     LINPACK = FALSE, ...) ","base","base","2.5.0"
"solve.qr","closure","function","TRUE","FALSE","(a, b, ...) ","base","base","2.5.0"
"sort","closure","function","TRUE","FALSE","(x, decreasing = FALSE, ...) ","base","base","2.5.0"
"sort.POSIXlt","closure","function","TRUE","FALSE","(x, decreasing = FALSE, na.last = NA, ...) ","base","base","2.5.0"
"sort.default","closure","function","TRUE","FALSE","(x, decreasing = FALSE, na.last = NA, ...) ","base","base","2.5.0"
"sort.int","closure","function","TRUE","FALSE","(x, partial = NULL, na.last = NA, decreasing = FALSE,     method = c(""shell"", ""quick""), index.return = FALSE) ","base","base","2.5.0"
"sort.list","closure","function","TRUE","FALSE","(x, partial = NULL, na.last = TRUE, decreasing = FALSE,     method = c(""shell"", ""quick"", ""radix"")) ","base","base","2.5.0"
"source","closure","function","TRUE","FALSE","(file, local = FALSE, echo = verbose, print.eval = echo,     verbose = getOption(""verbose""), prompt.echo = getOption(""prompt""),     max.deparse.length = 150, chdir = FALSE, encoding = getOption(""encoding""),     continue.echo = getOption(""continue""), skip.echo = 0) ","base","base","2.5.0"
"source.url","closure","function","TRUE","FALSE","(url, file = tempfile(), method, ...) ","base","base","2.5.0"
"split","closure","function","TRUE","FALSE","(x, f, drop = FALSE, ...) ","base","base","2.5.0"
"split.data.frame","closure","function","TRUE","FALSE","(x, f, drop = FALSE, ...) ","base","base","2.5.0"
"split.default","closure","function","TRUE","FALSE","(x, f, drop = FALSE, ...) ","base","base","2.5.0"
"split<-","closure","function","TRUE","FALSE","(x, f, drop = FALSE, ..., value) ","base","base","2.5.0"
"split<-.data.frame","closure","function","TRUE","FALSE","(x, f, drop = FALSE, ..., value) ","base","base","2.5.0"
"split<-.default","closure","function","TRUE","FALSE","(x, f, drop = FALSE, ..., value) ","base","base","2.5.0"
"sprintf","closure","function","TRUE","FALSE","(fmt, ...) ","base","base","2.5.0"
"sqrt","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"srcfile","closure","function","TRUE","FALSE","(filename, encoding = getOption(""encoding"")) ","base","base","2.5.0"
"srcfilecopy","closure","function","TRUE","FALSE","(filename, lines) ","base","base","2.5.0"
"srcref","closure","function","TRUE","FALSE","(srcfile, lloc) ","base","base","2.5.0"
"standardGeneric","builtin","function","TRUE","NA","(f) ","base","base","2.5.0"
"stderr","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"stdin","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"stdout","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"stop","closure","function","TRUE","FALSE","(..., call. = TRUE, domain = NULL) ","base","base","2.5.0"
"stopifnot","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"storage.mode","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"storage.mode<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"strftime","closure","function","TRUE","FALSE","(x, format = """", usetz = FALSE, ...) ","base","base","2.5.0"
"strptime","closure","function","TRUE","FALSE","(x, format, tz = """") ","base","base","2.5.0"
"strsplit","closure","function","TRUE","FALSE","(x, split, extended = TRUE, fixed = FALSE, perl = FALSE) ","base","base","2.5.0"
"strtrim","closure","function","TRUE","FALSE","(x, width) ","base","base","2.5.0"
"structure","closure","function","TRUE","FALSE","(.Data, ...) ","base","base","2.5.0"
"strwrap","closure","function","TRUE","FALSE","(x, width = 0.9 * getOption(""width""), indent = 0, exdent = 0,     prefix = """", simplify = TRUE) ","base","base","2.5.0"
"sub","closure","function","TRUE","FALSE","(pattern, replacement, x, ignore.case = FALSE, extended = TRUE,     perl = FALSE, fixed = FALSE, useBytes = FALSE) ","base","base","2.5.0"
"subset","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"subset.data.frame","closure","function","TRUE","FALSE","(x, subset, select, drop = FALSE, ...) ","base","base","2.5.0"
"subset.default","closure","function","TRUE","FALSE","(x, subset, ...) ","base","base","2.5.0"
"subset.matrix","closure","function","TRUE","FALSE","(x, subset, select, drop = FALSE, ...) ","base","base","2.5.0"
"substitute","special","function","TRUE","NA","(expr, env) ","base","base","2.5.0"
"substr","closure","function","TRUE","FALSE","(x, start, stop) ","base","base","2.5.0"
"substr<-","closure","function","TRUE","FALSE","(x, start, stop, value) ","base","base","2.5.0"
"substring","closure","function","TRUE","FALSE","(text, first, last = 1e+06) ","base","base","2.5.0"
"substring<-","closure","function","TRUE","FALSE","(text, first, last = 1e+06, value) ","base","base","2.5.0"
"sum","closure","function","TRUE","FALSE","(..., na.rm = FALSE) ","base","base","2.5.0"
"summary","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"summary.Date","closure","function","TRUE","FALSE","(object, digits = 12, ...) ","base","base","2.5.0"
"summary.POSIXct","closure","function","TRUE","FALSE","(object, digits = 15, ...) ","base","base","2.5.0"
"summary.POSIXlt","closure","function","TRUE","FALSE","(object, digits = 15, ...) ","base","base","2.5.0"
"summary.connection","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"summary.data.frame","closure","function","TRUE","FALSE","(object, maxsum = 7, digits = max(3, getOption(""digits"") -     3), ...) ","base","base","2.5.0"
"summary.default","closure","function","TRUE","FALSE","(object, ..., digits = max(3, getOption(""digits"") -     3)) ","base","base","2.5.0"
"summary.factor","closure","function","TRUE","FALSE","(object, maxsum = 100, ...) ","base","base","2.5.0"
"summary.matrix","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"summary.table","closure","function","TRUE","FALSE","(object, ...) ","base","base","2.5.0"
"suppressMessages","closure","function","TRUE","FALSE","(expr) ","base","base","2.5.0"
"suppressPackageStartupMessages","closure","function","TRUE","FALSE","(expr) ","base","base","2.5.0"
"suppressWarnings","closure","function","TRUE","FALSE","(expr) ","base","base","2.5.0"
"svd","closure","function","TRUE","FALSE","(x, nu = min(n, p), nv = min(n, p), LINPACK = FALSE) ","base","base","2.5.0"
"sweep","closure","function","TRUE","FALSE","(x, MARGIN, STATS, FUN = ""-"", ...) ","base","base","2.5.0"
"switch","closure","function","TRUE","FALSE","(EXPR, ...) ","base","base","2.5.0"
"symbol.C","closure","function","TRUE","FALSE","(name) ","base","base","2.5.0"
"symbol.For","closure","function","TRUE","FALSE","(name) ","base","base","2.5.0"
"sys.call","closure","function","TRUE","FALSE","(which = 0) ","base","base","2.5.0"
"sys.calls","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"sys.frame","closure","function","TRUE","FALSE","(which = 0) ","base","base","2.5.0"
"sys.frames","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"sys.function","closure","function","TRUE","FALSE","(which = 0) ","base","base","2.5.0"
"sys.load.image","closure","function","TRUE","FALSE","(name, quiet) ","base","base","2.5.0"
"sys.nframe","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"sys.on.exit","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"sys.parent","closure","function","TRUE","FALSE","(n = 1) ","base","base","2.5.0"
"sys.parents","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"sys.save.image","closure","function","TRUE","FALSE","(name) ","base","base","2.5.0"
"sys.source","closure","function","TRUE","FALSE","(file, envir = baseenv(), chdir = FALSE, keep.source = getOption(""keep.source.pkgs"")) ","base","base","2.5.0"
"sys.status","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"system","closure","function","TRUE","FALSE","(command, intern = FALSE, ignore.stderr = FALSE, wait = TRUE,     input = NULL, show.output.on.console = TRUE, minimized = FALSE,     invisible = TRUE) ","base","base","2.5.0"
"system.file","closure","function","TRUE","FALSE","(..., package = ""base"", lib.loc = NULL) ","base","base","2.5.0"
"system.time","closure","function","TRUE","FALSE","(expr, gcFirst = TRUE) ","base","base","2.5.0"
"t","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"t.data.frame","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"t.default","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"table","closure","function","TRUE","FALSE","(..., exclude = c(NA, NaN), dnn = list.names(...), deparse.level = 1) ","base","base","2.5.0"
"tabulate","closure","function","TRUE","FALSE","(bin, nbins = max(1L, bin)) ","base","base","2.5.0"
"tan","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"tanh","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"tapply","closure","function","TRUE","FALSE","(X, INDEX, FUN = NULL, ..., simplify = TRUE) ","base","base","2.5.0"
"taskCallbackManager","closure","function","TRUE","FALSE","(handlers = list(), registered = FALSE, verbose = FALSE) ","base","base","2.5.0"
"tcrossprod","closure","function","TRUE","FALSE","(x, y = NULL) ","base","base","2.5.0"
"tempdir","closure","function","TRUE","FALSE","() ","base","base","2.5.0"
"tempfile","closure","function","TRUE","FALSE","(pattern = ""file"", tmpdir = tempdir()) ","base","base","2.5.0"
"testPlatformEquivalence","closure","function","TRUE","FALSE","(built, run) ","base","base","2.5.0"
"tetragamma","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"textConnection","closure","function","TRUE","FALSE","(object, open = ""r"", local = FALSE) ","base","base","2.5.0"
"textConnectionValue","closure","function","TRUE","FALSE","(con) ","base","base","2.5.0"
"toString","closure","function","TRUE","FALSE","(x, ...) ","base","base","2.5.0"
"toString.default","closure","function","TRUE","FALSE","(x, width = NULL, ...) ","base","base","2.5.0"
"tolower","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"topenv","closure","function","TRUE","FALSE","(envir = parent.frame(), matchThisEnv = getOption(""topLevelEnvironment"")) ","base","base","2.5.0"
"toupper","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"trace","closure","function","TRUE","FALSE","(what, tracer, exit, at, print, signature, where = topenv(parent.frame()),     edit = FALSE) ","base","base","2.5.0"
"traceback","closure","function","TRUE","FALSE","(x = NULL, max.lines = getOption(""deparse.max.lines"")) ","base","base","2.5.0"
"tracemem","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"tracingState","closure","function","TRUE","FALSE","(on = NULL) ","base","base","2.5.0"
"transform","closure","function","TRUE","FALSE","(""_data"", ...) ","base","base","2.5.0"
"transform.data.frame","closure","function","TRUE","FALSE","(""_data"", ...) ","base","base","2.5.0"
"transform.default","closure","function","TRUE","FALSE","(""_data"", ...) ","base","base","2.5.0"
"trigamma","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"trunc","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"trunc.Date","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"trunc.POSIXt","closure","function","TRUE","FALSE","(x, units = c(""secs"", ""mins"", ""hours"", ""days"")) ","base","base","2.5.0"
"truncate","closure","function","TRUE","FALSE","(con, ...) ","base","base","2.5.0"
"truncate.connection","closure","function","TRUE","FALSE","(con, ...) ","base","base","2.5.0"
"try","closure","function","TRUE","FALSE","(expr, silent = FALSE) ","base","base","2.5.0"
"tryCatch","closure","function","TRUE","FALSE","(expr, ..., finally) ","base","base","2.5.0"
"typeof","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"unclass","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"undebug","builtin","function","TRUE","NA","(fun) ","base","base","2.5.0"
"union","closure","function","TRUE","FALSE","(x, y) ","base","base","2.5.0"
"unique","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"unique.POSIXlt","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"unique.array","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","2.5.0"
"unique.data.frame","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"unique.default","closure","function","TRUE","FALSE","(x, incomparables = FALSE, ...) ","base","base","2.5.0"
"unique.matrix","closure","function","TRUE","FALSE","(x, incomparables = FALSE, MARGIN = 1, ...) ","base","base","2.5.0"
"units","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"units.difftime","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"units<-","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"units<-.difftime","closure","function","TRUE","FALSE","(x, value) ","base","base","2.5.0"
"unix","closure","function","TRUE","FALSE","(call, intern = FALSE) ","base","base","2.5.0"
"unix.time","closure","function","TRUE","FALSE","(expr, gcFirst = TRUE) ","base","base","2.5.0"
"unlink","closure","function","TRUE","FALSE","(x, recursive = FALSE) ","base","base","2.5.0"
"unlist","closure","function","TRUE","FALSE","(x, recursive = TRUE, use.names = TRUE) ","base","base","2.5.0"
"unloadNamespace","closure","function","TRUE","FALSE","(ns) ","base","base","2.5.0"
"unlockBinding","closure","function","TRUE","FALSE","(sym, env) ","base","base","2.5.0"
"unname","closure","function","TRUE","FALSE","(obj, force = FALSE) ","base","base","2.5.0"
"unserialize","closure","function","TRUE","FALSE","(connection, refhook = NULL) ","base","base","2.5.0"
"unsplit","closure","function","TRUE","FALSE","(value, f, drop = FALSE) ","base","base","2.5.0"
"untrace","closure","function","TRUE","FALSE","(what, signature = NULL, where = topenv(parent.frame())) ","base","base","2.5.0"
"untracemem","builtin","function","TRUE","NA","(x) ","base","base","2.5.0"
"unz","closure","function","TRUE","FALSE","(description, filename, open = """", encoding = getOption(""encoding"")) ","base","base","2.5.0"
"upper.tri","closure","function","TRUE","FALSE","(x, diag = FALSE) ","base","base","2.5.0"
"url","closure","function","TRUE","FALSE","(description, open = """", blocking = TRUE, encoding = getOption(""encoding"")) ","base","base","2.5.0"
"utf8ToInt","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"vector","closure","function","TRUE","FALSE","(mode = ""logical"", length = 0) ","base","base","2.5.0"
"version","list","simple.list","TRUE","FALSE","NA","base","base","2.5.0"
"warning","closure","function","TRUE","FALSE","(..., call. = TRUE, immediate. = FALSE, domain = NULL) ","base","base","2.5.0"
"warnings","closure","function","TRUE","FALSE","(...) ","base","base","2.5.0"
"weekdays","closure","function","TRUE","FALSE","(x, abbreviate) ","base","base","2.5.0"
"weekdays.Date","closure","function","TRUE","FALSE","(x, abbreviate = FALSE) ","base","base","2.5.0"
"weekdays.POSIXt","closure","function","TRUE","FALSE","(x, abbreviate = FALSE) ","base","base","2.5.0"
"which","closure","function","TRUE","FALSE","(x, arr.ind = FALSE) ","base","base","2.5.0"
"which.max","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"which.min","closure","function","TRUE","FALSE","(x) ","base","base","2.5.0"
"while","special","function","TRUE","NA","","base","base","2.5.0"
"with","closure","function","TRUE","FALSE","(data, expr, ...) ","base","base","2.5.0"
"with.default","closure","function","TRUE","FALSE","(data, expr, ...) ","base","base","2.5.0"
"withCallingHandlers","closure","function","TRUE","FALSE","(expr, ...) ","base","base","2.5.0"
"withRestarts","closure","function","TRUE","FALSE","(expr, ...) ","base","base","2.5.0"
"write","closure","function","TRUE","FALSE","(x, file = ""data"", ncolumns = if (is.character(x)) 1 else 5,     append = FALSE, sep = "" "") ","base","base","2.5.0"
"write.dcf","closure","function","TRUE","FALSE","(x, file = """", append = FALSE, indent = 0.1 * getOption(""width""),     width = 0.9 * getOption(""width"")) ","base","base","2.5.0"
"write.table0","closure","function","TRUE","FALSE","(x, file = """", append = FALSE, quote = TRUE, sep = "" "",     eol = ""\n"", na = ""NA"", dec = ""."", row.names = TRUE, col.names = TRUE,     qmethod = c(""escape"", ""double"")) ","base","base","2.5.0"
"writeBin","closure","function","TRUE","FALSE","(object, con, size = NA, endian = .Platform$endian) ","base","base","2.5.0"
"writeChar","closure","function","TRUE","FALSE","(object, con, nchars = nchar(object, type = ""chars""),     eos = """") ","base","base","2.5.0"
"writeLines","closure","function","TRUE","FALSE","(text, con = stdout(), sep = ""\n"") ","base","base","2.5.0"
"xor","closure","function","TRUE","FALSE","(x, y) ","base","base","2.5.0"
"xpdrows.data.frame","closure","function","TRUE","FALSE","(x, old.rows, new.rows) ","base","base","2.5.0"
"zapsmall","closure","function","TRUE","FALSE","(x, digits = getOption(""digits"")) ","base","base","2.5.0"
"{","special","function","TRUE","NA","","base","base","2.5.0"
"|","builtin","function","TRUE","NA","(e1, e2) ","base","base","2.5.0"
"||","special","function","TRUE","NA","","base","base","2.5.0"
"~","special","function","TRUE","NA","","base","base","2.5.0"
"EEF.profile","closure","function","TRUE","FALSE","(y, tmin = min(y) + 0.1, tmax = max(y) - 0.1, n.t = 25,     u = function(y, t) ","boot","recommended","2.5.0"
"EL.profile","closure","function","TRUE","FALSE","(y, tmin = min(y) + 0.1, tmax = max(y) - 0.1, n.t = 25,     u = function(y, t) y - t) ","boot","recommended","2.5.0"
"abc.ci","closure","function","TRUE","FALSE","(data, statistic, index = 1, strata = rep(1, n), conf = 0.95,     eps = 0.001/n, ...) ","boot","recommended","2.5.0"
"acme","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"aids","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"aircondit","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"aircondit7","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"amis","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"aml","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"beaver","double","mts/ts","FALSE","FALSE","NA","boot","recommended","2.5.0"
"bigcity","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"boot","closure","function","TRUE","FALSE","(data, statistic, R, sim = ""ordinary"", stype = ""i"",     strata = rep(1, n), L = NULL, m = 0, weights = NULL, ran.gen = function(d,         p) d, mle = NULL, ...) ","boot","recommended","2.5.0"
"boot.array","closure","function","TRUE","FALSE","(boot.out, indices = FALSE) ","boot","recommended","2.5.0"
"boot.ci","closure","function","TRUE","FALSE","(boot.out, conf = 0.95, type = ""all"", index = 1:min(2,     length(boot.out$t0)), var.t0 = NULL, var.t = NULL, t0 = NULL,     t = NULL, L = NULL, h = function(t) t, hdot = function(t) rep(1,         length(t)), hinv = function(t) t, ...) ","boot","recommended","2.5.0"
"brambles","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"breslow","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"calcium","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"cane","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"capability","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"catsM","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"cav","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"cd4","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"cd4.nested","list","boot","FALSE","FALSE","NA","boot","recommended","2.5.0"
"censboot","closure","function","TRUE","FALSE","(data, statistic, R, F.surv, G.surv, strata = matrix(1,     n, 2), sim = ""ordinary"", cox = NULL, index = c(1, 2), ...) ","boot","recommended","2.5.0"
"channing","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"city","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"claridge","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"cloth","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"co.transfer","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"coal","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"control","closure","function","TRUE","FALSE","(boot.out, L = NULL, distn = NULL, index = 1, t0 = NULL,     t = NULL, bias.adj = FALSE, alpha = NULL, ...) ","boot","recommended","2.5.0"
"corr","closure","function","TRUE","FALSE","(d, w = rep(1, nrow(d))/nrow(d)) ","boot","recommended","2.5.0"
"cum3","closure","function","TRUE","FALSE","(a, b = a, c = a, unbiased = TRUE) ","boot","recommended","2.5.0"
"cv.glm","closure","function","TRUE","FALSE","(data, glmfit, cost = function(y, yhat) mean((y - yhat)^2),     K = n) ","boot","recommended","2.5.0"
"darwin","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"dogs","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"downs.bc","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"ducks","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"empinf","closure","function","TRUE","FALSE","(boot.out = NULL, data = NULL, statistic = NULL, type = NULL,     stype = NULL, index = 1, t = NULL, strata = rep(1, n), eps = 0.001,     ...) ","boot","recommended","2.5.0"
"envelope","closure","function","TRUE","FALSE","(boot.out = NULL, mat = NULL, level = 0.95, index = 1:ncol(mat)) ","boot","recommended","2.5.0"
"exp.tilt","closure","function","TRUE","FALSE","(L, theta = NULL, t0 = 0, lambda = NULL, strata = rep(1,     length(L))) ","boot","recommended","2.5.0"
"fir","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"freq.array","closure","function","TRUE","FALSE","(i.array) ","boot","recommended","2.5.0"
"frets","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"glm.diag","closure","function","TRUE","FALSE","(glmfit) ","boot","recommended","2.5.0"
"glm.diag.plots","closure","function","TRUE","FALSE","(glmfit, glmdiag = glm.diag(glmfit), subset = NULL,     iden = FALSE, labels = NULL, ret = FALSE) ","boot","recommended","2.5.0"
"grav","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"gravity","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"hirose","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"imp.moments","closure","function","TRUE","FALSE","(boot.out = NULL, index = 1, t = boot.out$t[, index],     w = NULL, def = TRUE, q = NULL) ","boot","recommended","2.5.0"
"imp.prob","closure","function","TRUE","FALSE","(boot.out = NULL, index = 1, t0 = boot.out$t0[index],     t = boot.out$t[, index], w = NULL, def = TRUE, q = NULL) ","boot","recommended","2.5.0"
"imp.quantile","closure","function","TRUE","FALSE","(boot.out = NULL, alpha = NULL, index = 1, t = boot.out$t[,     index], w = NULL, def = TRUE, q = NULL) ","boot","recommended","2.5.0"
"imp.weights","closure","function","TRUE","FALSE","(boot.out, def = TRUE, q = NULL) ","boot","recommended","2.5.0"
"inv.logit","closure","function","TRUE","FALSE","(x) ","boot","recommended","2.5.0"
"islay","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"jack.after.boot","closure","function","TRUE","FALSE","(boot.out, index = 1, t = NULL, L = NULL, useJ = TRUE,     stinf = TRUE, alpha = NULL, main = """", ylab = NULL, ...) ","boot","recommended","2.5.0"
"k3.linear","closure","function","TRUE","FALSE","(L, strata = NULL) ","boot","recommended","2.5.0"
"lik.CI","closure","function","TRUE","FALSE","(like, lim) ","boot","recommended","2.5.0"
"linear.approx","closure","function","TRUE","FALSE","(boot.out, L = NULL, index = 1, type = NULL, t0 = NULL,     t = NULL, ...) ","boot","recommended","2.5.0"
"logit","closure","function","TRUE","FALSE","(p) ","boot","recommended","2.5.0"
"manaus","double","ts","FALSE","FALSE","NA","boot","recommended","2.5.0"
"melanoma","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"motor","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"nested.corr","closure","function","TRUE","FALSE","(data, w, t0, M) ","boot","recommended","2.5.0"
"neuro","double","matrix","FALSE","FALSE","NA","boot","recommended","2.5.0"
"nitrofen","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"nodal","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"norm.ci","closure","function","TRUE","FALSE","(boot.out = NULL, conf = 0.95, index = 1, var.t0 = NULL,     t0 = NULL, t = NULL, L = NULL, h = function(t) t, hdot = function(t) 1,     hinv = function(t) t) ","boot","recommended","2.5.0"
"nuclear","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"paulsen","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"poisons","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"polar","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"remission","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"saddle","closure","function","TRUE","FALSE","(A = NULL, u = NULL, wdist = ""m"", type = ""simp"", d = NULL,     d1 = 1, init = rep(0.1, d), mu = rep(0.5, n), LR = FALSE,     strata = NULL, K.adj = NULL, K2 = NULL) ","boot","recommended","2.5.0"
"saddle.distn","closure","function","TRUE","FALSE","(A, u = NULL, alpha = NULL, wdist = ""m"", type = ""simp"",     npts = 20, t = NULL, t0 = NULL, init = rep(0.1, d), mu = rep(0.5,         n), LR = FALSE, strata = NULL, ...) ","boot","recommended","2.5.0"
"salinity","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"simplex","closure","function","TRUE","FALSE","(a, A1 = NULL, b1 = NULL, A2 = NULL, b2 = NULL, A3 = NULL,     b3 = NULL, maxi = FALSE, n.iter = n + 2 * m, eps = 1e-10) ","boot","recommended","2.5.0"
"smooth.f","closure","function","TRUE","FALSE","(theta, boot.out, index = 1, t = boot.out$t[, index],     width = 0.5) ","boot","recommended","2.5.0"
"survival","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"tau","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"tilt.boot","closure","function","TRUE","FALSE","(data, statistic, R, sim = ""ordinary"", stype = ""i"",     strata = rep(1, n), L = NULL, theta = NULL, alpha = c(0.025,         0.975), tilt = TRUE, width = 0.5, index = 1, ...) ","boot","recommended","2.5.0"
"tsboot","closure","function","TRUE","FALSE","(tseries, statistic, R, l = NULL, sim = ""model"", endcorr = TRUE,     n.sim = NROW(tseries), orig.t = TRUE, ran.gen = function(tser,         n.sim, args) tser, ran.args = NULL, norm = TRUE, ...) ","boot","recommended","2.5.0"
"tuna","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"urine","list","data.frame","FALSE","FALSE","NA","boot","recommended","2.5.0"
"var.linear","closure","function","TRUE","FALSE","(L, strata = NULL) ","boot","recommended","2.5.0"
"wool","double","ts","FALSE","FALSE","NA","boot","recommended","2.5.0"
"SOM","closure","function","TRUE","FALSE","(data, grid = somgrid(), rlen = 10000, alpha = seq(0.05,     0, len = rlen), radii = seq(4, 1, len = rlen), init) ","class","recommended","2.5.0"
"batchSOM","closure","function","TRUE","FALSE","(data, grid = somgrid(), radii, init) ","class","recommended","2.5.0"
"condense","closure","function","TRUE","FALSE","(train, class, store = sample(seq(n), 1), trace = TRUE) ","class","recommended","2.5.0"
"knn","closure","function","TRUE","FALSE","(train, test, cl, k = 1, l = 0, prob = FALSE, use.all = TRUE) ","class","recommended","2.5.0"
"knn.cv","closure","function","TRUE","FALSE","(train, cl, k = 1, l = 0, prob = FALSE, use.all = TRUE) ","class","recommended","2.5.0"
"knn1","closure","function","TRUE","FALSE","(train, test, cl) ","class","recommended","2.5.0"
"lvq1","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 100 * nrow(codebk$x), alpha = 0.03) ","class","recommended","2.5.0"
"lvq2","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 100 * nrow(codebk$x), alpha = 0.03,     win = 0.3) ","class","recommended","2.5.0"
"lvq3","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 100 * nrow(codebk$x), alpha = 0.03,     win = 0.3, epsilon = 0.1) ","class","recommended","2.5.0"
"lvqinit","closure","function","TRUE","FALSE","(x, cl, size, prior, k = 5) ","class","recommended","2.5.0"
"lvqtest","closure","function","TRUE","FALSE","(codebk, test) ","class","recommended","2.5.0"
"multiedit","closure","function","TRUE","FALSE","(x, class, k = 1, V = 3, I = 5, trace = TRUE) ","class","recommended","2.5.0"
"olvq1","closure","function","TRUE","FALSE","(x, cl, codebk, niter = 40 * nrow(codebk$x), alpha = 0.3) ","class","recommended","2.5.0"
"reduce.nn","closure","function","TRUE","FALSE","(train, ind, class) ","class","recommended","2.5.0"
"somgrid","closure","function","TRUE","FALSE","(xdim = 8, ydim = 6, topo = c(""rectangular"", ""hexagonal"")) ","class","recommended","2.5.0"
"agnes","closure","function","TRUE","FALSE","(x, diss = inherits(x, ""dist""), metric = ""euclidean"",     stand = FALSE, method = ""average"", par.method, keep.diss = n <         100, keep.data = !diss) ","cluster","recommended","2.5.0"
"agriculture","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"animals","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"bannerplot","closure","function","TRUE","FALSE","(x, w = rev(x$height), fromLeft = TRUE, main = NULL,     sub = NULL, xlab = ""Height"", adj = 0, col = c(2, 0), border = 0,     axes = TRUE, frame.plot = axes, rev.xax = !fromLeft, xax.pretty = TRUE,     labels = NULL, nmax.lab = 35, max.strlen = 5, yax.do = axes &&         length(x$order) <= nmax.lab, yaxRight = fromLeft, y.mar = 2.4 +         max.strlen/2.5, ...) ","cluster","recommended","2.5.0"
"chorSub","integer","matrix","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"clara","closure","function","TRUE","FALSE","(x, k, metric = ""euclidean"", stand = FALSE, samples = 5,     sampsize = min(n, 40 + 2 * k), trace = 0, medoids.x = TRUE,     keep.data = medoids.x, rngR = FALSE) ","cluster","recommended","2.5.0"
"clusplot","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","2.5.0"
"coef.hclust","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","2.5.0"
"daisy","closure","function","TRUE","FALSE","(x, metric = c(""euclidean"", ""manhattan"", ""gower""), stand = FALSE,     type = list()) ","cluster","recommended","2.5.0"
"diana","closure","function","TRUE","FALSE","(x, diss = inherits(x, ""dist""), metric = ""euclidean"",     stand = FALSE, keep.diss = n < 100, keep.data = !diss) ","cluster","recommended","2.5.0"
"ellipsoidPoints","closure","function","TRUE","FALSE","(A, d2, loc, n.half = 201) ","cluster","recommended","2.5.0"
"ellipsoidhull","closure","function","TRUE","FALSE","(x, tol = 0.01, maxit = 5000, ret.wt = FALSE, ret.sqdist = FALSE,     ret.pr = FALSE) ","cluster","recommended","2.5.0"
"fanny","closure","function","TRUE","FALSE","(x, k, diss = inherits(x, ""dist""), memb.exp = 2, metric = c(""euclidean"",     ""manhattan"", ""SqEuclidean""), stand = FALSE, iniMem.p = NULL,     cluster.only = FALSE, keep.diss = !diss && !cluster.only &&         n < 100, keep.data = !diss && !cluster.only, maxit = 500,     tol = 1e-15, trace.lev = 0) ","cluster","recommended","2.5.0"
"flower","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"lower.to.upper.tri.inds","closure","function","TRUE","FALSE","(n) ","cluster","recommended","2.5.0"
"meanabsdev","closure","function","TRUE","FALSE","(y) ","cluster","recommended","2.5.0"
"mona","closure","function","TRUE","FALSE","(x) ","cluster","recommended","2.5.0"
"pam","closure","function","TRUE","FALSE","(x, k, diss = inherits(x, ""dist""), metric = ""euclidean"",     medoids = NULL, stand = FALSE, cluster.only = FALSE, keep.diss = !diss &&         !cluster.only && n < 100, keep.data = !diss && !cluster.only,     trace.lev = 0) ","cluster","recommended","2.5.0"
"plantTraits","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"pltree","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","2.5.0"
"pluton","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"predict.ellipsoid","closure","function","TRUE","FALSE","(object, n.out = 201, ...) ","cluster","recommended","2.5.0"
"ruspini","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"silhouette","closure","function","TRUE","FALSE","(x, ...) ","cluster","recommended","2.5.0"
"sizeDiss","closure","function","TRUE","FALSE","(d) ","cluster","recommended","2.5.0"
"sortSilhouette","closure","function","TRUE","FALSE","(object, ...) ","cluster","recommended","2.5.0"
"upper.to.lower.tri.inds","closure","function","TRUE","FALSE","(n) ","cluster","recommended","2.5.0"
"volume","closure","function","TRUE","FALSE","(object) ","cluster","recommended","2.5.0"
"votes.repub","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"xclara","list","data.frame","FALSE","FALSE","NA","cluster","recommended","2.5.0"
"checkUsage","closure","function","TRUE","FALSE","(fun, name = ""<anonymous>"", report = cat, all = FALSE,     suppressLocal = FALSE, suppressParamAssigns = !all, suppressParamUnused = !all,     suppressFundefMismatch = FALSE, suppressLocalUnused = FALSE,     suppressNoLocalFun = !all, skipWith = FALSE, suppressUndefined = dfltSuppressUndefined) ","codetools","recommended","2.5.0"
"checkUsageEnv","closure","function","TRUE","FALSE","(env, ...) ","codetools","recommended","2.5.0"
"checkUsagePackage","closure","function","TRUE","FALSE","(pack, ...) ","codetools","recommended","2.5.0"
"collectLocals","closure","function","TRUE","FALSE","(e, collect) ","codetools","recommended","2.5.0"
"collectUsage","closure","function","TRUE","FALSE","(fun, name = ""<anonymous>"", ...) ","codetools","recommended","2.5.0"
"constantFold","closure","function","TRUE","FALSE","(e, env = NULL, fail = NULL) ","codetools","recommended","2.5.0"
"findFuncLocals","closure","function","TRUE","FALSE","(formals, body) ","codetools","recommended","2.5.0"
"findGlobals","closure","function","TRUE","FALSE","(fun, merge = TRUE) ","codetools","recommended","2.5.0"
"findLocals","closure","function","TRUE","FALSE","(e, envir = .BaseEnv) ","codetools","recommended","2.5.0"
"findLocalsList","closure","function","TRUE","FALSE","(elist, envir = .BaseEnv) ","codetools","recommended","2.5.0"
"flattenAssignment","closure","function","TRUE","FALSE","(e) ","codetools","recommended","2.5.0"
"getAssignedVar","closure","function","TRUE","FALSE","(e) ","codetools","recommended","2.5.0"
"isConstantValue","closure","function","TRUE","FALSE","(v, w) ","codetools","recommended","2.5.0"
"makeCodeWalker","closure","function","TRUE","FALSE","(..., handler = function(v, w) NULL, call = function(e,     w) for (ee in as.list(e)) if (!missing(ee)) walkCode(ee,     w), leaf = function(e, w) print(e)) ","codetools","recommended","2.5.0"
"makeConstantFolder","closure","function","TRUE","FALSE","(..., leaf = foldLeaf, handler = function(v, w) if (w$foldable(v,     w)) foldCall, call = function(e, w) exitFolder(e, w), exit = function(e,     w) stop0(paste(""not a foldable expression:"", deparse(e, width = 500))),     isLocal = function(v, w) FALSE, foldable = isFoldable, isConstant = isConstantValue,     signal = function(e, msg, w) warning0(msg)) ","codetools","recommended","2.5.0"
"makeLocalsCollector","closure","function","TRUE","FALSE","(..., leaf = function(e, w) character(0), handler = getCollectLocalsHandler,     isLocal = function(v, w) FALSE, exit = function(e, msg, w) stop0(msg),     collect = function(v, e, w) print(v)) ","codetools","recommended","2.5.0"
"makeUsageCollector","closure","function","TRUE","FALSE","(fun, ..., name = NULL, enterLocal = doNothing, enterGlobal = doNothing,     enterInternal = doNothing, startCollectLocals = doNothing,     finishCollectLocals = doNothing, warn = warning0, signal = signalUsageIssue) ","codetools","recommended","2.5.0"
"showTree","closure","function","TRUE","FALSE","(e, write = cat) ","codetools","recommended","2.5.0"
"walkCode","closure","function","TRUE","FALSE","(e, w = makeCodeWalker()) ","codetools","recommended","2.5.0"
".First.lib","closure","function","NA","FALSE","(...) ","datasets","base","2.5.0"
".noGenerics","logical","logical","NA","FALSE","NA","datasets","base","2.5.0"
".packageName","character","character","NA","FALSE","NA","datasets","base","2.5.0"
"AirPassengers","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"BJsales","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"BJsales.lead","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"BOD","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"CO2","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"ChickWeight","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"DNase","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"EuStockMarkets","double","mts/ts","NA","FALSE","NA","datasets","base","2.5.0"
"Formaldehyde","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"HairEyeColor","double","table","NA","FALSE","NA","datasets","base","2.5.0"
"Harman23.cor","list","list","NA","FALSE","NA","datasets","base","2.5.0"
"Harman74.cor","list","list","NA","FALSE","NA","datasets","base","2.5.0"
"Indometh","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"InsectSprays","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"JohnsonJohnson","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"LakeHuron","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"LifeCycleSavings","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"Loblolly","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"Nile","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"Orange","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"OrchardSprays","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"PlantGrowth","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"Puromycin","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"Seatbelts","double","mts/ts","NA","FALSE","NA","datasets","base","2.5.0"
"Theoph","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"Titanic","double","table","NA","FALSE","NA","datasets","base","2.5.0"
"ToothGrowth","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"UCBAdmissions","double","table","NA","FALSE","NA","datasets","base","2.5.0"
"UKDriverDeaths","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"UKgas","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"USAccDeaths","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"USArrests","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"USJudgeRatings","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"USPersonalExpenditure","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"VADeaths","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"WWWusage","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"WorldPhones","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"ability.cov","list","list","NA","FALSE","NA","datasets","base","2.5.0"
"airmiles","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"airquality","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"anscombe","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"attenu","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"attitude","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"austres","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"beaver1","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"beaver2","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"cars","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"chickwts","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"co2","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"crimtab","integer","table","NA","FALSE","NA","datasets","base","2.5.0"
"discoveries","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"esoph","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"euro","double","numeric","NA","FALSE","NA","datasets","base","2.5.0"
"euro.cross","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"eurodist","double","dist","NA","FALSE","NA","datasets","base","2.5.0"
"faithful","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"fdeaths","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"freeny","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"freeny.x","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"freeny.y","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"infert","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"iris","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"iris3","double","array","NA","FALSE","NA","datasets","base","2.5.0"
"islands","double","numeric","NA","FALSE","NA","datasets","base","2.5.0"
"ldeaths","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"lh","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"longley","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"lynx","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"mdeaths","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"morley","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"mtcars","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"nhtemp","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"nottem","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"precip","double","numeric","NA","FALSE","NA","datasets","base","2.5.0"
"presidents","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"pressure","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"quakes","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"randu","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"rivers","double","numeric","NA","FALSE","NA","datasets","base","2.5.0"
"rock","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"sleep","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"stack.loss","double","numeric","NA","FALSE","NA","datasets","base","2.5.0"
"stack.x","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"stackloss","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"state.abb","character","character","NA","FALSE","NA","datasets","base","2.5.0"
"state.area","double","numeric","NA","FALSE","NA","datasets","base","2.5.0"
"state.center","list","list","NA","FALSE","NA","datasets","base","2.5.0"
"state.division","integer","factor","NA","FALSE","NA","datasets","base","2.5.0"
"state.name","character","character","NA","FALSE","NA","datasets","base","2.5.0"
"state.region","integer","factor","NA","FALSE","NA","datasets","base","2.5.0"
"state.x77","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"sunspot.month","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"sunspot.year","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"sunspots","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"swiss","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"treering","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"trees","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"uspop","double","ts","NA","FALSE","NA","datasets","base","2.5.0"
"volcano","double","matrix","NA","FALSE","NA","datasets","base","2.5.0"
"warpbreaks","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"women","list","data.frame","NA","FALSE","NA","datasets","base","2.5.0"
"data.restore","closure","function","TRUE","FALSE","(file, print = FALSE, verbose = FALSE, env = .GlobalEnv) ","foreign","recommended","2.5.0"
"lookup.xport","closure","function","TRUE","FALSE","(file) ","foreign","recommended","2.5.0"
"read.S","closure","function","TRUE","FALSE","(file) ","foreign","recommended","2.5.0"
"read.arff","closure","function","TRUE","FALSE","(file) ","foreign","recommended","2.5.0"
"read.dbf","closure","function","TRUE","FALSE","(file, as.is = FALSE) ","foreign","recommended","2.5.0"
"read.dta","closure","function","TRUE","FALSE","(file, convert.dates = TRUE, tz = NULL, convert.factors = TRUE,     missing.type = FALSE, convert.underscore = TRUE, warn.missing.labels = TRUE) ","foreign","recommended","2.5.0"
"read.epiinfo","closure","function","TRUE","FALSE","(file, read.deleted = FALSE, guess.broken.dates = FALSE,     thisyear = NULL, lower.case.names = FALSE) ","foreign","recommended","2.5.0"
"read.mtp","closure","function","TRUE","FALSE","(file) ","foreign","recommended","2.5.0"
"read.octave","closure","function","TRUE","FALSE","(file) ","foreign","recommended","2.5.0"
"read.spss","closure","function","TRUE","FALSE","(file, use.value.labels = TRUE, to.data.frame = FALSE,     max.value.labels = Inf, trim.factor.names = FALSE) ","foreign","recommended","2.5.0"
"read.ssd","closure","function","TRUE","FALSE","(libname, sectionnames, tmpXport = tempfile(), tmpProgLoc = tempfile(),     sascmd = ""sas"") ","foreign","recommended","2.5.0"
"read.systat","closure","function","TRUE","FALSE","(file, to.data.frame = TRUE) ","foreign","recommended","2.5.0"
"read.xport","closure","function","TRUE","FALSE","(file) ","foreign","recommended","2.5.0"
"write.arff","closure","function","TRUE","FALSE","(x, file, eol = ""\n"") ","foreign","recommended","2.5.0"
"write.dbf","closure","function","TRUE","FALSE","(dataframe, file, factor2char = TRUE, max_nchar = 254) ","foreign","recommended","2.5.0"
"write.dta","closure","function","TRUE","FALSE","(dataframe, file, version = 6, convert.dates = TRUE,     tz = ""GMT"", convert.factors = c(""labels"", ""string"", ""numeric"",         ""codes"")) ","foreign","recommended","2.5.0"
"write.foreign","closure","function","TRUE","FALSE","(df, datafile, codefile, package = c(""SPSS"", ""Stata"",     ""SAS""), ...) ","foreign","recommended","2.5.0"
"CIDFont","closure","function","TRUE","FALSE","(family, cmap, cmapEncoding, pdfresource = """") ","grDevices","base","2.5.0"
"Hershey","list","list","TRUE","FALSE","NA","grDevices","base","2.5.0"
"Type1Font","closure","function","TRUE","FALSE","(family, metrics, encoding = ""default"") ","grDevices","base","2.5.0"
"X11","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12,     gamma = getOption(""gamma""), colortype = getOption(""X11colortype""),     maxcubesize = 256, bg = ""transparent"", canvas = ""white"",     fonts = getOption(""X11fonts""), xpos = NA, ypos = NA) ","grDevices","base","2.5.0"
"X11Font","closure","function","TRUE","FALSE","(font) ","grDevices","base","2.5.0"
"X11Fonts","closure","function","TRUE","FALSE","(...) ","grDevices","base","2.5.0"
"as.graphicsAnnot","closure","function","TRUE","FALSE","(x) ","grDevices","base","2.5.0"
"bitmap","closure","function","TRUE","FALSE","(file, type = ""png256"", height = 6, width = 6, res = 72,     pointsize, ...) ","grDevices","base","2.5.0"
"boxplot.stats","closure","function","TRUE","FALSE","(x, coef = 1.5, do.conf = TRUE, do.out = TRUE) ","grDevices","base","2.5.0"
"check.options","closure","function","TRUE","FALSE","(new, name.opt, reset = FALSE, assign.opt = FALSE, envir = .GlobalEnv,     check.attributes = c(""mode"", ""length""), override.check = FALSE) ","grDevices","base","2.5.0"
"chull","closure","function","TRUE","FALSE","(x, y = NULL) ","grDevices","base","2.5.0"
"cm","closure","function","TRUE","FALSE","(x) ","grDevices","base","2.5.0"
"cm.colors","closure","function","TRUE","FALSE","(n, alpha = 1) ","grDevices","base","2.5.0"
"col2rgb","closure","function","TRUE","FALSE","(col, alpha = FALSE) ","grDevices","base","2.5.0"
"colorConverter","closure","function","TRUE","FALSE","(toXYZ, fromXYZ, name, white = NULL) ","grDevices","base","2.5.0"
"colorRamp","closure","function","TRUE","FALSE","(colors, bias = 1, space = c(""rgb"", ""Lab""), interpolate = c(""linear"",     ""spline"")) ","grDevices","base","2.5.0"
"colorRampPalette","closure","function","TRUE","FALSE","(colors, ...) ","grDevices","base","2.5.0"
"colors","closure","function","TRUE","FALSE","() ","grDevices","base","2.5.0"
"colorspaces","list","list","TRUE","FALSE","NA","grDevices","base","2.5.0"
"colours","closure","function","TRUE","FALSE","() ","grDevices","base","2.5.0"
"contourLines","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, nlevels = 10, levels = pretty(range(z, na.rm = TRUE),         nlevels)) ","grDevices","base","2.5.0"
"convertColor","closure","function","TRUE","FALSE","(color, from, to, from.ref.white = NULL, to.ref.white = NULL,     scale.in = 1, scale.out = 1, clip = TRUE) ","grDevices","base","2.5.0"
"dev.control","closure","function","TRUE","FALSE","(displaylist = c(""inhibit"", ""enable"")) ","grDevices","base","2.5.0"
"dev.copy","closure","function","TRUE","FALSE","(device, ..., which = dev.next()) ","grDevices","base","2.5.0"
"dev.copy2eps","closure","function","TRUE","FALSE","(...) ","grDevices","base","2.5.0"
"dev.cur","closure","function","TRUE","FALSE","() ","grDevices","base","2.5.0"
"dev.interactive","closure","function","TRUE","FALSE","(orNone = FALSE) ","grDevices","base","2.5.0"
"dev.list","closure","function","TRUE","FALSE","() ","grDevices","base","2.5.0"
"dev.next","closure","function","TRUE","FALSE","(which = dev.cur()) ","grDevices","base","2.5.0"
"dev.off","closure","function","TRUE","FALSE","(which = dev.cur()) ","grDevices","base","2.5.0"
"dev.prev","closure","function","TRUE","FALSE","(which = dev.cur()) ","grDevices","base","2.5.0"
"dev.print","closure","function","TRUE","FALSE","(device = postscript, ...) ","grDevices","base","2.5.0"
"dev.set","closure","function","TRUE","FALSE","(which = dev.next()) ","grDevices","base","2.5.0"
"dev2bitmap","closure","function","TRUE","FALSE","(file, type = ""png256"", height = 6, width = 6, res = 72,     pointsize, ...) ","grDevices","base","2.5.0"
"embedFonts","closure","function","TRUE","FALSE","(file, format, outfile = file, fontpaths = """", options = """") ","grDevices","base","2.5.0"
"extendrange","closure","function","TRUE","FALSE","(x, r = range(x, na.rm = TRUE), f = 0.05) ","grDevices","base","2.5.0"
"getGraphicsEvent","closure","function","TRUE","FALSE","(prompt = ""Waiting for input"", onMouseDown = NULL, onMouseMove = NULL,     onMouseUp = NULL, onKeybd = NULL) ","grDevices","base","2.5.0"
"graphics.off","closure","function","TRUE","FALSE","() ","grDevices","base","2.5.0"
"gray","closure","function","TRUE","FALSE","(level) ","grDevices","base","2.5.0"
"gray.colors","closure","function","TRUE","FALSE","(n, start = 0.3, end = 0.9, gamma = 2.2) ","grDevices","base","2.5.0"
"grey","closure","function","TRUE","FALSE","(level) ","grDevices","base","2.5.0"
"grey.colors","closure","function","TRUE","FALSE","(n, start = 0.3, end = 0.9, gamma = 2.2) ","grDevices","base","2.5.0"
"hcl","closure","function","TRUE","FALSE","(h = 0, c = 35, l = 85, alpha = 1, fixup = TRUE) ","grDevices","base","2.5.0"
"heat.colors","closure","function","TRUE","FALSE","(n, alpha = 1) ","grDevices","base","2.5.0"
"hsv","closure","function","TRUE","FALSE","(h = 1, s = 1, v = 1, gamma = 1, alpha = 1) ","grDevices","base","2.5.0"
"jpeg","closure","function","TRUE","FALSE","(filename = ""Rplot%03d.jpeg"", width = 480, height = 480,     pointsize = 12, quality = 75, bg = ""white"", res = NA, ...) ","grDevices","base","2.5.0"
"make.rgb","closure","function","TRUE","FALSE","(red, green, blue, name = NULL, white = ""D65"", gamma = 2.2) ","grDevices","base","2.5.0"
"n2mfrow","closure","function","TRUE","FALSE","(nr.plots) ","grDevices","base","2.5.0"
"nclass.FD","closure","function","TRUE","FALSE","(x) ","grDevices","base","2.5.0"
"nclass.Sturges","closure","function","TRUE","FALSE","(x) ","grDevices","base","2.5.0"
"nclass.scott","closure","function","TRUE","FALSE","(x) ","grDevices","base","2.5.0"
"palette","closure","function","TRUE","FALSE","(value) ","grDevices","base","2.5.0"
"pdf","closure","function","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.pdf"", ""Rplot%03d.pdf""),     width = 6, height = 6, onefile = TRUE, family = ""Helvetica"",     title = ""R Graphics Output"", fonts = NULL, version = ""1.1"",     paper = ""special"", encoding, bg, fg, pointsize, pagecentre) ","grDevices","base","2.5.0"
"pdfFonts","closure","function","TRUE","FALSE","(...) ","grDevices","base","2.5.0"
"pictex","closure","function","TRUE","FALSE","(file = ""Rplots.tex"", width = 5, height = 4, debug = FALSE,     bg = ""white"", fg = ""black"") ","grDevices","base","2.5.0"
"png","closure","function","TRUE","FALSE","(filename = ""Rplot%03d.png"", width = 480, height = 480,     pointsize = 12, bg = ""white"", res = NA, ...) ","grDevices","base","2.5.0"
"postscript","closure","function","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.ps"", ""Rplot%03d.ps""),     onefile = TRUE, family, title = ""R Graphics Output"", fonts = NULL,     encoding, bg, fg, width, height, horizontal, pointsize, paper,     pagecentre, print.it, command, colormodel) ","grDevices","base","2.5.0"
"postscriptFont","closure","function","TRUE","FALSE","(family, metrics, encoding = ""default"") ","grDevices","base","2.5.0"
"postscriptFonts","closure","function","TRUE","FALSE","(...) ","grDevices","base","2.5.0"
"ps.options","closure","function","TRUE","FALSE","(..., reset = FALSE, override.check = FALSE) ","grDevices","base","2.5.0"
"quartz","closure","function","TRUE","FALSE","(display = """", width = 5, height = 5, pointsize = 12,     family = ""Helvetica"", antialias = TRUE, autorefresh = TRUE) ","grDevices","base","2.5.0"
"quartzFont","closure","function","TRUE","FALSE","(family) ","grDevices","base","2.5.0"
"quartzFonts","closure","function","TRUE","FALSE","(...) ","grDevices","base","2.5.0"
"rainbow","closure","function","TRUE","FALSE","(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n,     gamma = 1, alpha = 1) ","grDevices","base","2.5.0"
"recordGraphics","closure","function","TRUE","FALSE","(expr, list, env) ","grDevices","base","2.5.0"
"recordPlot","closure","function","TRUE","FALSE","() ","grDevices","base","2.5.0"
"replayPlot","closure","function","TRUE","FALSE","(x) ","grDevices","base","2.5.0"
"rgb","closure","function","TRUE","FALSE","(red, green, blue, alpha, names = NULL, maxColorValue = 1) ","grDevices","base","2.5.0"
"rgb2hsv","closure","function","TRUE","FALSE","(r, g = NULL, b = NULL, gamma = 1, maxColorValue = 255) ","grDevices","base","2.5.0"
"terrain.colors","closure","function","TRUE","FALSE","(n, alpha = 1) ","grDevices","base","2.5.0"
"topo.colors","closure","function","TRUE","FALSE","(n, alpha = 1) ","grDevices","base","2.5.0"
"trans3d","closure","function","TRUE","FALSE","(x, y, z, pmat) ","grDevices","base","2.5.0"
"x11","closure","function","TRUE","FALSE","(display = """", width = 7, height = 7, pointsize = 12,     gamma = getOption(""gamma""), colortype = getOption(""X11colortype""),     maxcubesize = 256, bg = ""transparent"", canvas = ""white"",     fonts = getOption(""X11fonts""), xpos = NA, ypos = NA) ","grDevices","base","2.5.0"
"xfig","closure","function","TRUE","FALSE","(file = ifelse(onefile, ""Rplots.fig"", ""Rplot%03d.fig""),     onefile = FALSE, encoding = ""none"", ...) ","grDevices","base","2.5.0"
"xy.coords","closure","function","TRUE","FALSE","(x, y = NULL, xlab = NULL, ylab = NULL, log = NULL,     recycle = FALSE) ","grDevices","base","2.5.0"
"xyz.coords","closure","function","TRUE","FALSE","(x, y = NULL, z = NULL, xlab = NULL, ylab = NULL, zlab = NULL,     log = NULL, recycle = FALSE) ","grDevices","base","2.5.0"
"Axis","closure","function","TRUE","FALSE","(x = NULL, at = NULL, ..., side, labels = NULL) ","graphics","base","2.5.0"
"abline","closure","function","TRUE","FALSE","(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,     coef = NULL, untf = FALSE, ...) ","graphics","base","2.5.0"
"arrows","closure","function","TRUE","FALSE","(x0, y0, x1, y1, length = 0.25, angle = 30, code = 2,     col = par(""fg""), lty = par(""lty""), lwd = par(""lwd""), ...) ","graphics","base","2.5.0"
"assocplot","closure","function","TRUE","FALSE","(x, col = c(""black"", ""red""), space = 0.3, main = NULL,     xlab = NULL, ylab = NULL) ","graphics","base","2.5.0"
"axTicks","closure","function","TRUE","FALSE","(side, axp = NULL, usr = NULL, log = NULL) ","graphics","base","2.5.0"
"axis","closure","function","TRUE","FALSE","(side, at = NULL, labels = TRUE, tick = TRUE, line = NA,     pos = NA, outer = FALSE, font = NA, lty = ""solid"", lwd = 1,     col = NULL, hadj = NA, padj = NA, ...) ","graphics","base","2.5.0"
"axis.Date","closure","function","TRUE","FALSE","(side, x, at, format, labels = TRUE, ...) ","graphics","base","2.5.0"
"axis.POSIXct","closure","function","TRUE","FALSE","(side, x, at, format, labels = TRUE, ...) ","graphics","base","2.5.0"
"barplot","closure","function","TRUE","FALSE","(height, ...) ","graphics","base","2.5.0"
"barplot.default","closure","function","TRUE","FALSE","(height, width = 1, space = NULL, names.arg = NULL,     legend.text = NULL, beside = FALSE, horiz = FALSE, density = NULL,     angle = 45, col = NULL, border = par(""fg""), main = NULL,     sub = NULL, xlab = NULL, ylab = NULL, xlim = NULL, ylim = NULL,     xpd = TRUE, log = """", axes = TRUE, axisnames = TRUE, cex.axis = par(""cex.axis""),     cex.names = par(""cex.axis""), inside = TRUE, plot = TRUE,     axis.lty = 0, offset = 0, add = FALSE, ...) ","graphics","base","2.5.0"
"box","closure","function","TRUE","FALSE","(which = ""plot"", lty = ""solid"", ...) ","graphics","base","2.5.0"
"boxplot","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"boxplot.default","closure","function","TRUE","FALSE","(x, ..., range = 1.5, width = NULL, varwidth = FALSE,     notch = FALSE, outline = TRUE, names, plot = TRUE, border = par(""fg""),     col = NULL, log = """", pars = list(boxwex = 0.8, staplewex = 0.5,         outwex = 0.5), horizontal = FALSE, add = FALSE, at = NULL) ","graphics","base","2.5.0"
"bxp","closure","function","TRUE","FALSE","(z, notch = FALSE, width = NULL, varwidth = FALSE, outline = TRUE,     notch.frac = 0.5, log = """", border = par(""fg""), pars = NULL,     frame.plot = axes, horizontal = FALSE, add = FALSE, at = NULL,     show.names = NULL, ...) ","graphics","base","2.5.0"
"cdplot","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"close.screen","closure","function","TRUE","FALSE","(n, all.screens = FALSE) ","graphics","base","2.5.0"
"co.intervals","closure","function","TRUE","FALSE","(x, number = 6, overlap = 0.5) ","graphics","base","2.5.0"
"contour","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"contour.default","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, nlevels = 10, levels = pretty(zlim, nlevels), labels = NULL,     xlim = range(x, finite = TRUE), ylim = range(y, finite = TRUE),     zlim = range(z, finite = TRUE), labcex = 0.6, drawlabels = TRUE,     method = ""flattest"", vfont = c(""sans serif"", ""plain""), axes = TRUE,     frame.plot = axes, col = par(""fg""), lty = par(""lty""), lwd = par(""lwd""),     add = FALSE, ...) ","graphics","base","2.5.0"
"coplot","closure","function","TRUE","FALSE","(formula, data, given.values, panel = points, rows,     columns, show.given = TRUE, col = par(""fg""), pch = par(""pch""),     bar.bg = c(num = gray(0.8), fac = gray(0.95)), xlab = c(x.name,         paste(""Given :"", a.name)), ylab = c(y.name, paste(""Given :"",         b.name)), subscripts = FALSE, axlabels = function(f) abbreviate(levels(f)),     number = 6, overlap = 0.5, xlim, ylim, ...) ","graphics","base","2.5.0"
"curve","closure","function","TRUE","FALSE","(expr, from, to, n = 101, add = FALSE, type = ""l"", ylab = NULL,     log = NULL, xlim = NULL, ...) ","graphics","base","2.5.0"
"dotchart","closure","function","TRUE","FALSE","(x, labels = NULL, groups = NULL, gdata = NULL, cex = par(""cex""),     pch = 21, gpch = 21, bg = par(""bg""), color = par(""fg""), gcolor = par(""fg""),     lcolor = ""gray"", xlim = range(x[is.finite(x)]), main = NULL,     xlab = NULL, ylab = NULL, ...) ","graphics","base","2.5.0"
"erase.screen","closure","function","TRUE","FALSE","(n = cur.screen) ","graphics","base","2.5.0"
"filled.contour","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, xlim = range(x, finite = TRUE), ylim = range(y, finite = TRUE),     zlim = range(z, finite = TRUE), levels = pretty(zlim, nlevels),     nlevels = 20, color.palette = cm.colors, col = color.palette(length(levels) -         1), plot.title, plot.axes, key.title, key.axes, asp = NA,     xaxs = ""i"", yaxs = ""i"", las = 1, axes = TRUE, frame.plot = axes,     ...) ","graphics","base","2.5.0"
"fourfoldplot","closure","function","TRUE","FALSE","(x, color = c(""#99CCFF"", ""#6699CC""), conf.level = 0.95,     std = c(""margins"", ""ind.max"", ""all.max""), margin = c(1, 2),     space = 0.2, main = NULL, mfrow = NULL, mfcol = NULL) ","graphics","base","2.5.0"
"frame","closure","function","TRUE","FALSE","() ","graphics","base","2.5.0"
"grid","closure","function","TRUE","FALSE","(nx = NULL, ny = nx, col = ""lightgray"", lty = ""dotted"",     lwd = par(""lwd""), equilogs = TRUE) ","graphics","base","2.5.0"
"hist","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"hist.default","closure","function","TRUE","FALSE","(x, breaks = ""Sturges"", freq = NULL, probability = !freq,     include.lowest = TRUE, right = TRUE, density = NULL, angle = 45,     col = NULL, border = NULL, main = paste(""Histogram of"", xname),     xlim = range(breaks), ylim = NULL, xlab = xname, ylab, axes = TRUE,     plot = TRUE, labels = FALSE, nclass = NULL, ...) ","graphics","base","2.5.0"
"identify","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"image","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"image.default","closure","function","TRUE","FALSE","(x = seq(0, 1, len = nrow(z)), y = seq(0, 1, len = ncol(z)),     z, zlim = range(z[is.finite(z)]), xlim = range(x), ylim = range(y),     col = heat.colors(12), add = FALSE, xaxs = ""i"", yaxs = ""i"",     xlab, ylab, breaks, oldstyle = FALSE, ...) ","graphics","base","2.5.0"
"layout","closure","function","TRUE","FALSE","(mat, widths = rep(1, ncol(mat)), heights = rep(1, nrow(mat)),     respect = FALSE) ","graphics","base","2.5.0"
"layout.show","closure","function","TRUE","FALSE","(n = 1) ","graphics","base","2.5.0"
"lcm","closure","function","TRUE","FALSE","(x) ","graphics","base","2.5.0"
"legend","closure","function","TRUE","FALSE","(x, y = NULL, legend, fill = NULL, col = par(""col""),     lty, lwd, pch, angle = 45, density = NULL, bty = ""o"", bg = par(""bg""),     box.lwd = par(""lwd""), box.lty = par(""lty""), pt.bg = NA, cex = 1,     pt.cex = cex, pt.lwd = lwd, xjust = 0, yjust = 1, x.intersp = 1,     y.intersp = 1, adj = c(0, 0.5), text.width = NULL, text.col = par(""col""),     merge = do.lines && has.pch, trace = FALSE, plot = TRUE,     ncol = 1, horiz = FALSE, title = NULL, inset = 0) ","graphics","base","2.5.0"
"lines","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"lines.default","closure","function","TRUE","FALSE","(x, y = NULL, type = ""l"", ...) ","graphics","base","2.5.0"
"locator","closure","function","TRUE","FALSE","(n = 512, type = ""n"", ...) ","graphics","base","2.5.0"
"matlines","closure","function","TRUE","FALSE","(x, y, type = ""l"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     ...) ","graphics","base","2.5.0"
"matplot","closure","function","TRUE","FALSE","(x, y, type = ""p"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     cex = NULL, bg = NA, xlab = NULL, ylab = NULL, xlim = NULL,     ylim = NULL, ..., add = FALSE, verbose = getOption(""verbose"")) ","graphics","base","2.5.0"
"matpoints","closure","function","TRUE","FALSE","(x, y, type = ""p"", lty = 1:5, lwd = 1, pch = NULL, col = 1:6,     ...) ","graphics","base","2.5.0"
"mosaicplot","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"mtext","closure","function","TRUE","FALSE","(text, side = 3, line = 0, outer = FALSE, at = NA, adj = NA,     padj = NA, cex = NA, col = NA, font = NA, ...) ","graphics","base","2.5.0"
"pairs","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"pairs.default","closure","function","TRUE","FALSE","(x, labels, panel = points, ..., lower.panel = panel,     upper.panel = panel, diag.panel = NULL, text.panel = textPanel,     label.pos = 0.5 + has.diag/3, cex.labels = NULL, font.labels = 1,     row1attop = TRUE, gap = 1) ","graphics","base","2.5.0"
"panel.smooth","closure","function","TRUE","FALSE","(x, y, col = par(""col""), bg = NA, pch = par(""pch""),     cex = 1, col.smooth = ""red"", span = 2/3, iter = 3, ...) ","graphics","base","2.5.0"
"par","closure","function","TRUE","FALSE","(..., no.readonly = FALSE) ","graphics","base","2.5.0"
"persp","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"pie","closure","function","TRUE","FALSE","(x, labels = names(x), edges = 200, radius = 0.8, clockwise = FALSE,     init.angle = if (clockwise) 90 else 0, density = NULL, angle = 45,     col = NULL, border = NULL, lty = NULL, main = NULL, ...) ","graphics","base","2.5.0"
"piechart","closure","function","TRUE","FALSE","(x, labels = names(x), edges = 200, radius = 0.8, density = NULL,     angle = 45, col = NULL, main = NULL, ...) ","graphics","base","2.5.0"
"plot","closure","function","TRUE","FALSE","(x, y, ...) ","graphics","base","2.5.0"
"plot.default","closure","function","TRUE","FALSE","(x, y = NULL, type = ""p"", xlim = NULL, ylim = NULL,     log = """", main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     ann = par(""ann""), axes = TRUE, frame.plot = axes, panel.first = NULL,     panel.last = NULL, asp = NA, ...) ","graphics","base","2.5.0"
"plot.design","closure","function","TRUE","FALSE","(x, y = NULL, fun = mean, data = NULL, ..., ylim = NULL,     xlab = ""Factors"", ylab = NULL, main = NULL, ask = NULL, xaxt = par(""xaxt""),     axes = TRUE, xtick = FALSE) ","graphics","base","2.5.0"
"plot.new","closure","function","TRUE","FALSE","() ","graphics","base","2.5.0"
"plot.window","closure","function","TRUE","FALSE","(xlim, ylim, log = """", asp = NA, ...) ","graphics","base","2.5.0"
"plot.xy","closure","function","TRUE","FALSE","(xy, type, pch = par(""pch""), lty = par(""lty""), col = par(""col""),     bg = NA, cex = 1, lwd = par(""lwd""), ...) ","graphics","base","2.5.0"
"points","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"points.default","closure","function","TRUE","FALSE","(x, y = NULL, type = ""p"", ...) ","graphics","base","2.5.0"
"polygon","closure","function","TRUE","FALSE","(x, y = NULL, density = NULL, angle = 45, border = NULL,     col = NA, lty = par(""lty""), ...) ","graphics","base","2.5.0"
"rect","closure","function","TRUE","FALSE","(xleft, ybottom, xright, ytop, density = NULL, angle = 45,     col = NA, border = NULL, lty = par(""lty""), lwd = par(""lwd""),     ...) ","graphics","base","2.5.0"
"rug","closure","function","TRUE","FALSE","(x, ticksize = 0.03, side = 1, lwd = 0.5, col = par(""fg""),     quiet = getOption(""warn"") < 0, ...) ","graphics","base","2.5.0"
"screen","closure","function","TRUE","FALSE","(n = cur.screen, new = TRUE) ","graphics","base","2.5.0"
"segments","closure","function","TRUE","FALSE","(x0, y0, x1, y1, col = par(""fg""), lty = par(""lty""),     lwd = par(""lwd""), ...) ","graphics","base","2.5.0"
"spineplot","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"split.screen","closure","function","TRUE","FALSE","(figs, screen, erase = TRUE) ","graphics","base","2.5.0"
"stars","closure","function","TRUE","FALSE","(x, full = TRUE, scale = TRUE, radius = TRUE, labels = dimnames(x)[[1]],     locations = NULL, nrow = NULL, ncol = NULL, len = 1, key.loc = NULL,     key.labels = dimnames(x)[[2]], key.xpd = TRUE, xlim = NULL,     ylim = NULL, flip.labels = NULL, draw.segments = FALSE, col.segments = 1:n.seg,     col.stars = NA, axes = FALSE, frame.plot = axes, main = NULL,     sub = NULL, xlab = """", ylab = """", cex = 0.8, lwd = 0.25,     lty = par(""lty""), xpd = FALSE, mar = pmin(par(""mar""), 1.1 +         c(2 * axes + (xlab != """"), 2 * axes + (ylab != """"), 1,             0)), add = FALSE, plot = TRUE, ...) ","graphics","base","2.5.0"
"stem","closure","function","TRUE","FALSE","(x, scale = 1, width = 80, atom = 1e-08) ","graphics","base","2.5.0"
"strheight","closure","function","TRUE","FALSE","(s, units = ""user"", cex = NULL) ","graphics","base","2.5.0"
"stripchart","closure","function","TRUE","FALSE","(x, method = ""overplot"", jitter = 0.1, offset = 1/3,     vertical = FALSE, group.names, add = FALSE, at = NULL, xlim = NULL,     ylim = NULL, main = """", ylab = """", xlab = """", log = """", pch = 0,     col = par(""fg""), cex = par(""cex"")) ","graphics","base","2.5.0"
"strwidth","closure","function","TRUE","FALSE","(s, units = ""user"", cex = NULL) ","graphics","base","2.5.0"
"sunflowerplot","closure","function","TRUE","FALSE","(x, y = NULL, number, log = """", digits = 6, xlab = NULL,     ylab = NULL, xlim = NULL, ylim = NULL, add = FALSE, rotate = FALSE,     pch = 16, cex = 0.8, cex.fact = 1.5, col = par(""col""), bg = NA,     size = 1/8, seg.col = 2, seg.lwd = 1.5, ...) ","graphics","base","2.5.0"
"symbols","closure","function","TRUE","FALSE","(x, y = NULL, circles, squares, rectangles, stars, thermometers,     boxplots, inches = TRUE, add = FALSE, fg = par(""col""), bg = NA,     xlab = NULL, ylab = NULL, main = NULL, xlim = NULL, ylim = NULL,     ...) ","graphics","base","2.5.0"
"text","closure","function","TRUE","FALSE","(x, ...) ","graphics","base","2.5.0"
"text.default","closure","function","TRUE","FALSE","(x, y = NULL, labels = seq(along = x), adj = NULL, pos = NULL,     offset = 0.5, vfont = NULL, cex = 1, col = NULL, font = NULL,     ...) ","graphics","base","2.5.0"
"title","closure","function","TRUE","FALSE","(main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     line = NA, outer = FALSE, ...) ","graphics","base","2.5.0"
"xinch","closure","function","TRUE","FALSE","(x = 1, warn.log = TRUE) ","graphics","base","2.5.0"
"xyinch","closure","function","TRUE","FALSE","(xy = 1, warn.log = TRUE) ","graphics","base","2.5.0"
"yinch","closure","function","TRUE","FALSE","(y = 1, warn.log = TRUE) ","graphics","base","2.5.0"
"absolute.size","closure","function","TRUE","FALSE","(unit) ","grid","base","2.5.0"
"addGrob","closure","function","TRUE","FALSE","(gTree, child, gPath = NULL, strict = FALSE, grep = FALSE,     global = FALSE) ","grid","base","2.5.0"
"applyEdit","closure","function","TRUE","FALSE","(x, edit) ","grid","base","2.5.0"
"applyEdits","closure","function","TRUE","FALSE","(x, edits) ","grid","base","2.5.0"
"arcCurvature","closure","function","TRUE","FALSE","(theta) ","grid","base","2.5.0"
"arrow","closure","function","TRUE","FALSE","(angle = 30, length = unit(0.25, ""inches""), ends = ""last"",     type = ""open"") ","grid","base","2.5.0"
"arrowsGrob","closure","function","TRUE","FALSE","(x = c(0.25, 0.75), y = 0.5, default.units = ""npc"",     grob = NULL, angle = 30, length = unit(0.25, ""inches""), ends = ""last"",     type = ""open"", name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"childNames","closure","function","TRUE","FALSE","(gTree) ","grid","base","2.5.0"
"circleGrob","closure","function","TRUE","FALSE","(x = 0.5, y = 0.5, r = 0.5, default.units = ""npc"", name = NULL,     gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"clipGrob","closure","function","TRUE","FALSE","(x = unit(0.5, ""npc""), y = unit(0.5, ""npc""), width = unit(1,     ""npc""), height = unit(1, ""npc""), just = ""centre"", hjust = NULL,     vjust = NULL, default.units = ""npc"", name = NULL, vp = NULL) ","grid","base","2.5.0"
"convertHeight","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"convertNative","closure","function","TRUE","FALSE","(unit, dimension = ""x"", type = ""location"") ","grid","base","2.5.0"
"convertUnit","closure","function","TRUE","FALSE","(x, unitTo, axisFrom = ""x"", typeFrom = ""location"", axisTo = axisFrom,     typeTo = typeFrom, valueOnly = FALSE) ","grid","base","2.5.0"
"convertWidth","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"convertX","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"convertY","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"current.transform","closure","function","TRUE","FALSE","() ","grid","base","2.5.0"
"current.viewport","closure","function","TRUE","FALSE","(vp = NULL) ","grid","base","2.5.0"
"current.vpPath","closure","function","TRUE","FALSE","() ","grid","base","2.5.0"
"current.vpTree","closure","function","TRUE","FALSE","(all = TRUE) ","grid","base","2.5.0"
"curveGrob","closure","function","TRUE","FALSE","(x1, y1, x2, y2, default.units = ""npc"", curvature = 1,     angle = 90, ncp = 1, shape = 0.5, square = TRUE, squareShape = 1,     inflect = FALSE, arrow = NULL, open = TRUE, debug = FALSE,     name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"dataViewport","closure","function","TRUE","FALSE","(xData = NULL, yData = NULL, xscale = NULL, yscale = NULL,     extension = 0.05, ...) ","grid","base","2.5.0"
"downViewport","closure","function","TRUE","FALSE","(name, strict = FALSE, recording = TRUE) ","grid","base","2.5.0"
"draw.details","closure","function","TRUE","FALSE","(x, recording) ","grid","base","2.5.0"
"drawDetails","closure","function","TRUE","FALSE","(x, recording) ","grid","base","2.5.0"
"editDetails","closure","function","TRUE","FALSE","(x, specs) ","grid","base","2.5.0"
"editGrob","closure","function","TRUE","FALSE","(grob, gPath = NULL, ..., strict = FALSE, grep = FALSE,     global = FALSE) ","grid","base","2.5.0"
"engine.display.list","closure","function","TRUE","FALSE","(on = TRUE) ","grid","base","2.5.0"
"frameGrob","closure","function","TRUE","FALSE","(layout = NULL, name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"gEdit","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"gEditList","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"gList","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"gPath","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"gTree","closure","function","TRUE","FALSE","(..., name = NULL, gp = NULL, vp = NULL, children = NULL,     childrenvp = NULL, cl = NULL) ","grid","base","2.5.0"
"get.gpar","closure","function","TRUE","FALSE","(names = NULL) ","grid","base","2.5.0"
"getGrob","closure","function","TRUE","FALSE","(gTree, gPath, strict = FALSE, grep = FALSE, global = FALSE) ","grid","base","2.5.0"
"getNames","closure","function","TRUE","FALSE","() ","grid","base","2.5.0"
"gpar","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"grid.add","closure","function","TRUE","FALSE","(gPath, child, strict = FALSE, grep = FALSE, global = FALSE,     allDevices = FALSE, redraw = TRUE) ","grid","base","2.5.0"
"grid.arrows","closure","function","TRUE","FALSE","(x = c(0.25, 0.75), y = 0.5, default.units = ""npc"",     grob = NULL, angle = 30, length = unit(0.25, ""inches""), ends = ""last"",     type = ""open"", name = NULL, gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.circle","closure","function","TRUE","FALSE","(x = 0.5, y = 0.5, r = 0.5, default.units = ""npc"", name = NULL,     gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.clip","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"grid.collection","closure","function","TRUE","FALSE","(..., gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.convert","closure","function","TRUE","FALSE","(x, unitTo, axisFrom = ""x"", typeFrom = ""location"", axisTo = axisFrom,     typeTo = typeFrom, valueOnly = FALSE) ","grid","base","2.5.0"
"grid.convertHeight","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"grid.convertWidth","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"grid.convertX","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"grid.convertY","closure","function","TRUE","FALSE","(x, unitTo, valueOnly = FALSE) ","grid","base","2.5.0"
"grid.copy","closure","function","TRUE","FALSE","(grob) ","grid","base","2.5.0"
"grid.curve","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"grid.display.list","closure","function","TRUE","FALSE","(on = TRUE) ","grid","base","2.5.0"
"grid.draw","closure","function","TRUE","FALSE","(x, recording = TRUE) ","grid","base","2.5.0"
"grid.edit","closure","function","TRUE","FALSE","(gPath, ..., strict = FALSE, grep = FALSE, global = FALSE,     allDevices = FALSE, redraw = TRUE) ","grid","base","2.5.0"
"grid.frame","closure","function","TRUE","FALSE","(layout = NULL, name = NULL, gp = gpar(), vp = NULL,     draw = TRUE) ","grid","base","2.5.0"
"grid.get","closure","function","TRUE","FALSE","(gPath, strict = FALSE, grep = FALSE, global = FALSE,     allDevices = FALSE) ","grid","base","2.5.0"
"grid.grab","closure","function","TRUE","FALSE","(warn = 2, wrap = FALSE, ...) ","grid","base","2.5.0"
"grid.grabExpr","closure","function","TRUE","FALSE","(expr, warn = 2, wrap = FALSE, ...) ","grid","base","2.5.0"
"grid.grill","closure","function","TRUE","FALSE","(h = unit(seq(0.25, 0.75, 0.25), ""npc""), v = unit(seq(0.25,     0.75, 0.25), ""npc""), default.units = ""npc"", gp = gpar(col = ""grey""),     vp = NULL) ","grid","base","2.5.0"
"grid.grob","closure","function","TRUE","FALSE","(list.struct, cl = NULL, draw = TRUE) ","grid","base","2.5.0"
"grid.layout","closure","function","TRUE","FALSE","(nrow = 1, ncol = 1, widths = unit(rep(1, ncol), ""null""),     heights = unit(rep(1, nrow), ""null""), default.units = ""null"",     respect = FALSE, just = ""centre"") ","grid","base","2.5.0"
"grid.legend","closure","function","TRUE","FALSE","(pch, labels, frame = TRUE, hgap = unit(0.5, ""lines""),     vgap = unit(0.5, ""lines""), default.units = ""lines"", gp = gpar(),     draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.line.to","closure","function","TRUE","FALSE","(x = 1, y = 1, default.units = ""npc"", arrow = NULL,     name = NULL, gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.lines","closure","function","TRUE","FALSE","(x = unit(c(0, 1), ""npc""), y = unit(c(0, 1), ""npc""),     default.units = ""npc"", arrow = NULL, name = NULL, gp = gpar(),     draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.locator","closure","function","TRUE","FALSE","(unit = ""native"") ","grid","base","2.5.0"
"grid.move.to","closure","function","TRUE","FALSE","(x = 0, y = 0, default.units = ""npc"", name = NULL, draw = TRUE,     vp = NULL) ","grid","base","2.5.0"
"grid.multipanel","closure","function","TRUE","FALSE","(x = stats::runif(90), y = stats::runif(90), z = stats::runif(90),     nplots = 9, nrow = 5, ncol = 2, newpage = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.newpage","closure","function","TRUE","FALSE","(recording = TRUE) ","grid","base","2.5.0"
"grid.pack","closure","function","TRUE","FALSE","(gPath, grob, redraw = TRUE, side = NULL, row = NULL,     row.before = NULL, row.after = NULL, col = NULL, col.before = NULL,     col.after = NULL, width = NULL, height = NULL, force.width = FALSE,     force.height = FALSE, border = NULL, dynamic = FALSE) ","grid","base","2.5.0"
"grid.panel","closure","function","TRUE","FALSE","(x = stats::runif(10), y = stats::runif(10), zrange = c(0,     1), zbin = stats::runif(2), xscale = extendrange(x), yscale = extendrange(y),     axis.left = TRUE, axis.left.label = TRUE, axis.right = FALSE,     axis.right.label = TRUE, axis.bottom = TRUE, axis.bottom.label = TRUE,     axis.top = FALSE, axis.top.label = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.place","closure","function","TRUE","FALSE","(gPath, grob, row = 1, col = 1, redraw = TRUE) ","grid","base","2.5.0"
"grid.plot.and.legend","closure","function","TRUE","FALSE","() ","grid","base","2.5.0"
"grid.points","closure","function","TRUE","FALSE","(x = stats::runif(10), y = stats::runif(10), pch = 1,     size = unit(1, ""char""), default.units = ""native"", name = NULL,     gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.polygon","closure","function","TRUE","FALSE","(x = c(0, 0.5, 1, 0.5), y = c(0.5, 1, 0.5, 0), id = NULL,     id.lengths = NULL, default.units = ""npc"", name = NULL, gp = gpar(),     draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.polyline","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"grid.pretty","closure","function","TRUE","FALSE","(range) ","grid","base","2.5.0"
"grid.prompt","closure","function","TRUE","FALSE","(ask) ","grid","base","2.5.0"
"grid.record","closure","function","TRUE","FALSE","(expr, list, name = NULL, gp = NULL, vp = NULL) ","grid","base","2.5.0"
"grid.rect","closure","function","TRUE","FALSE","(x = unit(0.5, ""npc""), y = unit(0.5, ""npc""), width = unit(1,     ""npc""), height = unit(1, ""npc""), just = ""centre"", hjust = NULL,     vjust = NULL, default.units = ""npc"", name = NULL, gp = gpar(),     draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.refresh","closure","function","TRUE","FALSE","() ","grid","base","2.5.0"
"grid.remove","closure","function","TRUE","FALSE","(gPath, warn = TRUE, strict = FALSE, grep = FALSE, global = FALSE,     allDevices = FALSE, redraw = TRUE) ","grid","base","2.5.0"
"grid.segments","closure","function","TRUE","FALSE","(x0 = unit(0, ""npc""), y0 = unit(0, ""npc""), x1 = unit(1,     ""npc""), y1 = unit(1, ""npc""), default.units = ""npc"", arrow = NULL,     name = NULL, gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.set","closure","function","TRUE","FALSE","(gPath, newGrob, strict = FALSE, grep = FALSE, redraw = TRUE) ","grid","base","2.5.0"
"grid.show.layout","closure","function","TRUE","FALSE","(l, newpage = TRUE, bg = ""light grey"", cell.border = ""blue"",     cell.fill = ""light blue"", cell.label = TRUE, label.col = ""blue"",     unit.col = ""red"", vp = NULL) ","grid","base","2.5.0"
"grid.show.viewport","closure","function","TRUE","FALSE","(v, parent.layout = NULL, newpage = TRUE, border.fill = ""light grey"",     vp.col = ""blue"", vp.fill = ""light blue"", scale.col = ""red"",     vp = NULL) ","grid","base","2.5.0"
"grid.strip","closure","function","TRUE","FALSE","(label = ""whatever"", range.full = c(0, 1), range.thumb = c(0.3,     0.6), fill = ""#FFBF00"", thumb = ""#FF8000"", vp = NULL) ","grid","base","2.5.0"
"grid.text","closure","function","TRUE","FALSE","(label, x = unit(0.5, ""npc""), y = unit(0.5, ""npc""),     just = ""centre"", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,     default.units = ""npc"", name = NULL, gp = gpar(), draw = TRUE,     vp = NULL) ","grid","base","2.5.0"
"grid.xaxis","closure","function","TRUE","FALSE","(at = NULL, label = TRUE, main = TRUE, edits = NULL,     name = NULL, gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grid.xspline","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"grid.yaxis","closure","function","TRUE","FALSE","(at = NULL, label = TRUE, main = TRUE, edits = NULL,     name = NULL, gp = gpar(), draw = TRUE, vp = NULL) ","grid","base","2.5.0"
"grob","closure","function","TRUE","FALSE","(..., name = NULL, gp = NULL, vp = NULL, cl = NULL) ","grid","base","2.5.0"
"grobHeight","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"grobName","closure","function","TRUE","FALSE","(grob = NULL, prefix = ""GRID"") ","grid","base","2.5.0"
"grobWidth","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"grobX","closure","function","TRUE","FALSE","(x, theta) ","grid","base","2.5.0"
"grobY","closure","function","TRUE","FALSE","(x, theta) ","grid","base","2.5.0"
"heightDetails","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"is.unit","closure","function","TRUE","FALSE","(unit) ","grid","base","2.5.0"
"layout.heights","closure","function","TRUE","FALSE","(lay) ","grid","base","2.5.0"
"layout.torture","closure","function","TRUE","FALSE","() ","grid","base","2.5.0"
"layout.widths","closure","function","TRUE","FALSE","(lay) ","grid","base","2.5.0"
"layoutRegion","closure","function","TRUE","FALSE","(layout.pos.row = 1, layout.pos.col = 1) ","grid","base","2.5.0"
"lineToGrob","closure","function","TRUE","FALSE","(x = 1, y = 1, default.units = ""npc"", arrow = NULL,     name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"linesGrob","closure","function","TRUE","FALSE","(x = unit(c(0, 1), ""npc""), y = unit(c(0, 1), ""npc""),     default.units = ""npc"", arrow = NULL, name = NULL, gp = gpar(),     vp = NULL) ","grid","base","2.5.0"
"moveToGrob","closure","function","TRUE","FALSE","(x = 0, y = 0, default.units = ""npc"", name = NULL, vp = NULL) ","grid","base","2.5.0"
"packGrob","closure","function","TRUE","FALSE","(frame, grob, side = NULL, row = NULL, row.before = NULL,     row.after = NULL, col = NULL, col.before = NULL, col.after = NULL,     width = NULL, height = NULL, force.width = FALSE, force.height = FALSE,     border = NULL, dynamic = FALSE) ","grid","base","2.5.0"
"placeGrob","closure","function","TRUE","FALSE","(frame, grob, row = NULL, col = NULL) ","grid","base","2.5.0"
"plotViewport","closure","function","TRUE","FALSE","(margins = c(5.1, 4.1, 4.1, 2.1), ...) ","grid","base","2.5.0"
"pointsGrob","closure","function","TRUE","FALSE","(x = stats::runif(10), y = stats::runif(10), pch = 1,     size = unit(1, ""char""), default.units = ""native"", name = NULL,     gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"polygonGrob","closure","function","TRUE","FALSE","(x = c(0, 0.5, 1, 0.5), y = c(0.5, 1, 0.5, 0), id = NULL,     id.lengths = NULL, default.units = ""npc"", name = NULL, gp = gpar(),     vp = NULL) ","grid","base","2.5.0"
"polylineGrob","closure","function","TRUE","FALSE","(x = unit(c(0, 1), ""npc""), y = unit(c(0, 1), ""npc""),     id = NULL, id.lengths = NULL, default.units = ""npc"", arrow = NULL,     name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"pop.viewport","closure","function","TRUE","FALSE","(n = 1, recording = TRUE) ","grid","base","2.5.0"
"popViewport","closure","function","TRUE","FALSE","(n = 1, recording = TRUE) ","grid","base","2.5.0"
"postDrawDetails","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"preDrawDetails","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"push.viewport","closure","function","TRUE","FALSE","(..., recording = TRUE) ","grid","base","2.5.0"
"pushViewport","closure","function","TRUE","FALSE","(..., recording = TRUE) ","grid","base","2.5.0"
"rectGrob","closure","function","TRUE","FALSE","(x = unit(0.5, ""npc""), y = unit(0.5, ""npc""), width = unit(1,     ""npc""), height = unit(1, ""npc""), just = ""centre"", hjust = NULL,     vjust = NULL, default.units = ""npc"", name = NULL, gp = gpar(),     vp = NULL) ","grid","base","2.5.0"
"removeGrob","closure","function","TRUE","FALSE","(gTree, gPath, strict = FALSE, grep = FALSE, global = FALSE,     warn = TRUE) ","grid","base","2.5.0"
"seekViewport","closure","function","TRUE","FALSE","(name, recording = TRUE) ","grid","base","2.5.0"
"segmentsGrob","closure","function","TRUE","FALSE","(x0 = unit(0, ""npc""), y0 = unit(0, ""npc""), x1 = unit(1,     ""npc""), y1 = unit(1, ""npc""), default.units = ""npc"", arrow = NULL,     name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"setChildren","closure","function","TRUE","FALSE","(x, children) ","grid","base","2.5.0"
"setGrob","closure","function","TRUE","FALSE","(gTree, gPath, newGrob, strict = FALSE, grep = FALSE) ","grid","base","2.5.0"
"stringHeight","closure","function","TRUE","FALSE","(string) ","grid","base","2.5.0"
"stringWidth","closure","function","TRUE","FALSE","(string) ","grid","base","2.5.0"
"textGrob","closure","function","TRUE","FALSE","(label, x = unit(0.5, ""npc""), y = unit(0.5, ""npc""),     just = ""centre"", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,     default.units = ""npc"", name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"unit","closure","function","TRUE","FALSE","(x, units, data = NULL) ","grid","base","2.5.0"
"unit.c","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"unit.length","closure","function","TRUE","FALSE","(unit) ","grid","base","2.5.0"
"unit.pmax","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"unit.pmin","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"unit.rep","closure","function","TRUE","FALSE","(x, ...) ","grid","base","2.5.0"
"upViewport","closure","function","TRUE","FALSE","(n = 1, recording = TRUE) ","grid","base","2.5.0"
"validDetails","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"viewport","closure","function","TRUE","FALSE","(x = unit(0.5, ""npc""), y = unit(0.5, ""npc""), width = unit(1,     ""npc""), height = unit(1, ""npc""), default.units = ""npc"", just = ""centre"",     gp = gpar(), clip = ""inherit"", xscale = c(0, 1), yscale = c(0,         1), angle = 0, layout = NULL, layout.pos.row = NULL,     layout.pos.col = NULL, name = NULL) ","grid","base","2.5.0"
"viewport.layout","closure","function","TRUE","FALSE","(vp) ","grid","base","2.5.0"
"viewport.transform","closure","function","TRUE","FALSE","(vp) ","grid","base","2.5.0"
"vpList","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"vpPath","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"vpStack","closure","function","TRUE","FALSE","(...) ","grid","base","2.5.0"
"vpTree","closure","function","TRUE","FALSE","(parent, children) ","grid","base","2.5.0"
"widthDetails","closure","function","TRUE","FALSE","(x) ","grid","base","2.5.0"
"xDetails","closure","function","TRUE","FALSE","(x, theta) ","grid","base","2.5.0"
"xaxisGrob","closure","function","TRUE","FALSE","(at = NULL, label = TRUE, main = TRUE, edits = NULL,     name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"xsplineGrob","closure","function","TRUE","FALSE","(x = c(0, 0.5, 1, 0.5), y = c(0.5, 1, 0.5, 0), id = NULL,     id.lengths = NULL, default.units = ""npc"", shape = 0, open = TRUE,     arrow = NULL, repEnds = TRUE, name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"yDetails","closure","function","TRUE","FALSE","(x, theta) ","grid","base","2.5.0"
"yaxisGrob","closure","function","TRUE","FALSE","(at = NULL, label = TRUE, main = TRUE, edits = NULL,     name = NULL, gp = gpar(), vp = NULL) ","grid","base","2.5.0"
"Rows","closure","function","TRUE","FALSE","(x, which) ","lattice","recommended","2.5.0"
"as.factorOrShingle","closure","function","TRUE","FALSE","(x, subset = TRUE, drop = FALSE) ","lattice","recommended","2.5.0"
"as.shingle","closure","function","TRUE","FALSE","(x) ","lattice","recommended","2.5.0"
"axis.default","closure","function","TRUE","FALSE","(side = c(""top"", ""bottom"", ""left"", ""right""), scales,     components, as.table, labels = c(""default"", ""yes"", ""no""),     ticks = c(""default"", ""yes"", ""no""), ...) ","lattice","recommended","2.5.0"
"banking","closure","function","TRUE","FALSE","(dx, dy = 1) ","lattice","recommended","2.5.0"
"barchart","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"barley","list","data.frame","FALSE","FALSE","NA","lattice","recommended","2.5.0"
"bwplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"canonical.theme","closure","function","TRUE","FALSE","(name = .Device, color = name != ""postscript"") ","lattice","recommended","2.5.0"
"cloud","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"col.whitebg","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"contourplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"current.column","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"current.panel.limits","closure","function","TRUE","FALSE","(unit = ""native"") ","lattice","recommended","2.5.0"
"current.row","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"densityplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"diag.panel.splom","closure","function","TRUE","FALSE","(x = NULL, varname = NULL, limits, at = NULL, lab = NULL,     draw = TRUE, varname.col = add.text$col, varname.cex = add.text$cex,     varname.lineheight = add.text$lineheight, varname.font = add.text$font,     varname.fontfamily = add.text$fontfamily, varname.fontface = add.text$fontface,     axis.text.col = axis.text$col, axis.text.alpha = axis.text$alpha,     axis.text.cex = axis.text$cex, axis.text.font = axis.text$font,     axis.text.fontfamily = axis.text$fontfamily, axis.text.fontface = axis.text$fontface,     axis.line.col = axis.line$col, axis.line.alpha = axis.line$alpha,     axis.line.lty = axis.line$lty, axis.line.lwd = axis.line$lwd,     axis.line.tck = 1, ...) ","lattice","recommended","2.5.0"
"do.breaks","closure","function","TRUE","FALSE","(endpoints, nint) ","lattice","recommended","2.5.0"
"dotplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"draw.colorkey","closure","function","TRUE","FALSE","(key, draw = FALSE, vp = NULL) ","lattice","recommended","2.5.0"
"draw.key","closure","function","TRUE","FALSE","(key, draw = FALSE, vp = NULL) ","lattice","recommended","2.5.0"
"environmental","list","data.frame","FALSE","FALSE","NA","lattice","recommended","2.5.0"
"equal.count","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","2.5.0"
"ethanol","list","data.frame","FALSE","FALSE","NA","lattice","recommended","2.5.0"
"histogram","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"is.shingle","closure","function","TRUE","FALSE","(x) ","lattice","recommended","2.5.0"
"larrows","closure","function","TRUE","FALSE","(x0 = NULL, y0 = NULL, x1, y1, x2 = NULL, y2 = NULL,     angle = 30, code = 2, length = 0.25, unit = ""inches"", ends = switch(code,         ""first"", ""last"", ""both""), type = ""open"", col = add.line$col,     alpha = add.line$alpha, lty = add.line$lty, lwd = add.line$lwd,     fill = NULL, ...) ","lattice","recommended","2.5.0"
"lattice.getOption","closure","function","TRUE","FALSE","(name) ","lattice","recommended","2.5.0"
"lattice.options","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"latticeParseFormula","closure","function","TRUE","FALSE","(model, data, dimension = 2, subset = TRUE, groups = NULL,     multiple = FALSE, outer = FALSE, subscripts = FALSE, drop = NULL) ","lattice","recommended","2.5.0"
"levelplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"llines","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","2.5.0"
"lplot.xy","closure","function","TRUE","FALSE","(xy, type = c(""p"", ""l"", ""o"", ""b"", ""c"", ""s"", ""S"", ""h"",     ""H""), pch = 1, lty = 1, col = 1, cex = 1, lwd = 1, font = 1,     fontfamily = NULL, fontface = NULL, col.line = col, alpha = 0,     fill = NULL, origin = 0, ...) ","lattice","recommended","2.5.0"
"lpoints","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","2.5.0"
"lpolygon","closure","function","TRUE","FALSE","(x, y = NULL, border = ""black"", col = ""transparent"",     ...) ","lattice","recommended","2.5.0"
"lrect","closure","function","TRUE","FALSE","(xleft, ybottom, xright, ytop, x = (xleft + xright)/2,     y = (ybottom + ytop)/2, width = xright - xleft, height = ytop -         ybottom, col = ""transparent"", border = ""black"", lty = 1,     lwd = 1, alpha = 1, just = ""center"", hjust = NULL, vjust = NULL,     ...) ","lattice","recommended","2.5.0"
"lsegments","closure","function","TRUE","FALSE","(x0 = NULL, y0 = NULL, x1, y1, x2 = NULL, y2 = NULL,     col = add.line$col, alpha = add.line$alpha, lty = add.line$lty,     lwd = add.line$lwd, ...) ","lattice","recommended","2.5.0"
"ltext","closure","function","TRUE","FALSE","(x, ...) ","lattice","recommended","2.5.0"
"ltransform3dMatrix","closure","function","TRUE","FALSE","(screen, R.mat = diag(4)) ","lattice","recommended","2.5.0"
"ltransform3dto3d","closure","function","TRUE","FALSE","(x, R.mat, dist = 0) ","lattice","recommended","2.5.0"
"make.groups","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"melanoma","list","data.frame","FALSE","FALSE","NA","lattice","recommended","2.5.0"
"oneway","closure","function","TRUE","FALSE","(formula, data, location = mean, spread = function(x) sqrt(var(x))) ","lattice","recommended","2.5.0"
"packet.number","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"packet.panel.default","closure","function","TRUE","FALSE","(layout, condlevels, page, row, column, skip, all.pages.skip = TRUE) ","lattice","recommended","2.5.0"
"panel.3dscatter","closure","function","TRUE","FALSE","(x, y, z, rot.mat = diag(4), distance, groups = NULL,     type = ""p"", xlim.scaled, ylim.scaled, zlim.scaled, zero.scaled,     col, col.point = if (is.null(groups)) plot.symbol$col else superpose.symbol$col,     col.line = if (is.null(groups)) plot.line$col else superpose.line$col,     lty = if (is.null(groups)) plot.line$lty else superpose.line$lty,     lwd = if (is.null(groups)) plot.line$lwd else superpose.line$lwd,     cex = if (is.null(groups)) plot.symbol$cex else superpose.symbol$cex,     pch = if (is.null(groups)) ""+"" else superpose.symbol$pch,     cross, ..., subscripts = TRUE) ","lattice","recommended","2.5.0"
"panel.3dwire","closure","function","TRUE","FALSE","(x, y, z, rot.mat = diag(4), distance, shade = FALSE,     shade.colors.palette = trellis.par.get(""shade.colors"")$palette,     light.source = c(0, 0, 1000), xlim.scaled, ylim.scaled, zlim.scaled,     col = if (shade) ""transparent"" else ""black"", lty = 1, lwd = 1,     alpha, col.groups = superpose.polygon$col, polynum = 100,     ..., drape = FALSE, at, col.regions = regions$col, alpha.regions = regions$alpha) ","lattice","recommended","2.5.0"
"panel.abline","closure","function","TRUE","FALSE","(a = NULL, b = 0, h = NULL, v = NULL, reg = NULL, coef = NULL,     col, col.line = add.line$col, lty = add.line$lty, lwd = add.line$lwd,     type, ...) ","lattice","recommended","2.5.0"
"panel.arrows","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.axis","closure","function","TRUE","FALSE","(side = c(""bottom"", ""left"", ""top"", ""right""), at = pretty(scale.range),     labels = TRUE, draw.labels = TRUE, check.overlap = FALSE,     outside = FALSE, ticks = TRUE, half = !outside, which.half = switch(side,         bottom = ""lower"", left = ""upper"", top = ""upper"", right = ""lower""),     tck = as.numeric(ticks), rot = if (is.logical(labels)) 0 else c(90,         0), text.col = axis.text$col, text.alpha = axis.text$alpha,     text.cex = axis.text$cex, text.font = axis.text$font, text.fontfamily = axis.text$fontfamily,     text.fontface = axis.text$fontface, line.col = axis.line$col,     line.lty = axis.line$lty, line.lwd = axis.line$lwd, line.alpha = axis.line$alpha) ","lattice","recommended","2.5.0"
"panel.barchart","closure","function","TRUE","FALSE","(x, y, box.ratio = 1, horizontal = TRUE, origin = NULL,     reference = TRUE, stack = FALSE, groups = NULL, col = if (is.null(groups)) plot.polygon$col else superpose.polygon$col,     border = if (is.null(groups)) plot.polygon$border else superpose.polygon$border,     lty = if (is.null(groups)) plot.polygon$lty else superpose.polygon$lty,     lwd = if (is.null(groups)) plot.polygon$lwd else superpose.polygon$lwd,     ...) ","lattice","recommended","2.5.0"
"panel.bwplot","closure","function","TRUE","FALSE","(x, y, box.ratio = 1, horizontal = TRUE, pch = box.dot$pch,     col = box.dot$col, cex = box.dot$cex, font = box.dot$font,     fontfamily = box.dot$fontfamily, fontface = box.dot$fontface,     fill = box.rectangle$fill, varwidth = FALSE, ..., levels.fos = if (horizontal) sort(unique(y)) else sort(unique(x)),     stats = boxplot.stats, coef = 1.5, do.out = TRUE) ","lattice","recommended","2.5.0"
"panel.cloud","closure","function","TRUE","FALSE","(x, y, subscripts, z, groups = NULL, perspective = TRUE,     distance = if (perspective) 0.2 else 0, xlim, ylim, zlim,     panel.3d.cloud = ""panel.3dscatter"", panel.3d.wireframe = ""panel.3dwire"",     screen = list(z = 40, x = -60), R.mat = diag(4), aspect = c(1,         1), par.box = NULL, xlab, ylab, zlab, xlab.default, ylab.default,     zlab.default, scales.3d, proportion = 0.6, wireframe = FALSE,     scpos, ..., at) ","lattice","recommended","2.5.0"
"panel.contourplot","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.curve","closure","function","TRUE","FALSE","(expr, from, to, n = 101, curve.type = ""l"", col = add.line$col,     lty = add.line$lty, lwd = add.line$lwd, type, ...) ","lattice","recommended","2.5.0"
"panel.densityplot","closure","function","TRUE","FALSE","(x, darg = list(n = 30), plot.points = ""jitter"", ref = FALSE,     groups = NULL, jitter.amount = 0.01 * diff(current.panel.limits()$ylim),     type = ""p"", ...) ","lattice","recommended","2.5.0"
"panel.dotplot","closure","function","TRUE","FALSE","(x, y, horizontal = TRUE, pch = if (is.null(groups)) dot.symbol$pch else sup.symbol$pch,     col = if (is.null(groups)) dot.symbol$col else sup.symbol$col,     lty = dot.line$lty, lwd = dot.line$lwd, col.line = dot.line$col,     levels.fos = if (horizontal) unique(y) else unique(x), groups = NULL,     ...) ","lattice","recommended","2.5.0"
"panel.fill","closure","function","TRUE","FALSE","(col = trellis.par.get(""background"")$col, border = ""transparent"",     ...) ","lattice","recommended","2.5.0"
"panel.grid","closure","function","TRUE","FALSE","(h = 3, v = 3, col, col.line = reference.line$col, lty = reference.line$lty,     lwd = reference.line$lwd, ...) ","lattice","recommended","2.5.0"
"panel.histogram","closure","function","TRUE","FALSE","(x, breaks, equal.widths = TRUE, type = ""density"", nint = round(log2(length(x)) +     1), alpha = plot.polygon$alpha, col = plot.polygon$col, border = plot.polygon$border,     lty = plot.polygon$lty, lwd = plot.polygon$lwd, ...) ","lattice","recommended","2.5.0"
"panel.identify","closure","function","TRUE","FALSE","(x, y = NULL, subscripts = seq_along(x), labels = subscripts,     n = length(x), offset = 0.5, threshold = 18, panel.args = trellis.panelArgs(),     ...) ","lattice","recommended","2.5.0"
"panel.levelplot","closure","function","TRUE","FALSE","(x, y, z, subscripts, at = pretty(z), shrink, labels = NULL,     label.style = c(""mixed"", ""flat"", ""align""), contour = FALSE,     region = TRUE, col = add.line$col, lty = add.line$lty, lwd = add.line$lwd,     cex = add.text$cex, font = add.text$font, fontfamily = add.text$fontfamily,     fontface = add.text$fontface, col.text = add.text$col, ...,     col.regions = regions$col, alpha.regions = regions$alpha) ","lattice","recommended","2.5.0"
"panel.linejoin","closure","function","TRUE","FALSE","(x, y, fun = mean, horizontal = TRUE, lwd = reference.line$lwd,     lty = reference.line$lty, col, col.line = reference.line$col,     type, ...) ","lattice","recommended","2.5.0"
"panel.lines","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.lmline","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","2.5.0"
"panel.loess","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, lwd = plot.line$lwd, lty = plot.line$lty,     col, col.line = plot.line$col, type, ...) ","lattice","recommended","2.5.0"
"panel.mathdensity","closure","function","TRUE","FALSE","(dmath = dnorm, args = list(mean = 0, sd = 1), n = 50,     col, col.line = reference.line$col, lwd = reference.line$lwd,     lty = reference.line$lty, type, ...) ","lattice","recommended","2.5.0"
"panel.number","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"panel.pairs","closure","function","TRUE","FALSE","(z, panel = lattice.getOption(""panel.splom""), lower.panel = panel,     upper.panel = panel, diag.panel = ""diag.panel.splom"", as.matrix = FALSE,     groups = NULL, panel.subscripts, subscripts, pscales = 5,     prepanel.limits = function(x) if (is.factor(x)) levels(x) else extend.limits(range(as.numeric(x),         finite = TRUE)), varname.col = add.text$col, varname.cex = add.text$cex,     varname.font = add.text$font, varname.fontfamily = add.text$fontfamily,     varname.fontface = add.text$fontface, axis.text.col = axis.text$col,     axis.text.cex = axis.text$cex, axis.text.font = axis.text$font,     axis.text.fontfamily = axis.text$fontfamily, axis.text.fontface = axis.text$fontface,     axis.line.col = axis.line$col, axis.line.lty = axis.line$lty,     axis.line.lwd = axis.line$lwd, axis.line.alpha = axis.line$alpha,     axis.line.tck = 1, ...) ","lattice","recommended","2.5.0"
"panel.parallel","closure","function","TRUE","FALSE","(x, y, z, subscripts, groups = NULL, col = superpose.line$col,     lwd = superpose.line$lwd, lty = superpose.line$lty, alpha = superpose.line$alpha,     common.scale = FALSE, lower = sapply(z, function(x) min(as.numeric(x),         na.rm = TRUE)), upper = sapply(z, function(x) max(as.numeric(x),         na.rm = TRUE)), ...) ","lattice","recommended","2.5.0"
"panel.points","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.polygon","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.qq","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.qqmath","closure","function","TRUE","FALSE","(x, f.value = NULL, distribution = qnorm, qtype = 7,     groups = NULL, ...) ","lattice","recommended","2.5.0"
"panel.qqmathline","closure","function","TRUE","FALSE","(x, y = x, distribution = qnorm, p = c(0.25, 0.75),     qtype = 7, groups = NULL, ...) ","lattice","recommended","2.5.0"
"panel.rect","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.rug","closure","function","TRUE","FALSE","(x = NULL, y = NULL, regular = TRUE, start = if (regular) 0 else 0.97,     end = if (regular) 0.03 else 1, x.units = rep(""npc"", 2),     y.units = rep(""npc"", 2), col = plot.line$col, lty = plot.line$lty,     lwd = plot.line$lwd, alpha = plot.line$alpha, ...) ","lattice","recommended","2.5.0"
"panel.segments","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.splom","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.stripplot","closure","function","TRUE","FALSE","(x, y, jitter.data = FALSE, factor = 0.5, amount = NULL,     horizontal = TRUE, groups = NULL, ...) ","lattice","recommended","2.5.0"
"panel.superpose","closure","function","TRUE","FALSE","(x, y = NULL, subscripts, groups, panel.groups = ""panel.xyplot"",     col = NA, col.line = superpose.line$col, col.symbol = superpose.symbol$col,     pch = superpose.symbol$pch, cex = superpose.symbol$cex, fill = superpose.symbol$fill,     font = superpose.symbol$font, fontface = superpose.symbol$fontface,     fontfamily = superpose.symbol$fontfamily, lty = superpose.line$lty,     lwd = superpose.line$lwd, alpha = superpose.symbol$alpha,     type = ""p"", ..., distribute.type = FALSE) ","lattice","recommended","2.5.0"
"panel.superpose.2","closure","function","TRUE","FALSE","(..., distribute.type = TRUE) ","lattice","recommended","2.5.0"
"panel.text","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.tmd.default","closure","function","TRUE","FALSE","(x, y, groups = NULL, ...) ","lattice","recommended","2.5.0"
"panel.tmd.qqmath","closure","function","TRUE","FALSE","(x, f.value = NULL, distribution = qnorm, qtype = 7,     groups = NULL, subscripts, ...) ","lattice","recommended","2.5.0"
"panel.violin","closure","function","TRUE","FALSE","(x, y, box.ratio = 1, horizontal = TRUE, alpha = plot.polygon$alpha,     border = plot.polygon$border, lty = plot.polygon$lty, lwd = plot.polygon$lwd,     col = plot.polygon$col, varwidth = FALSE, bw = NULL, adjust = NULL,     kernel = NULL, window = NULL, width = NULL, n = 50, from = NULL,     to = NULL, cut = NULL, na.rm = TRUE, ...) ","lattice","recommended","2.5.0"
"panel.wireframe","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"panel.xyplot","closure","function","TRUE","FALSE","(x, y, type = ""p"", groups = NULL, pch = if (is.null(groups)) plot.symbol$pch else superpose.symbol$pch,     col, col.line = if (is.null(groups)) plot.line$col else superpose.line$col,     col.symbol = if (is.null(groups)) plot.symbol$col else superpose.symbol$col,     font = if (is.null(groups)) plot.symbol$font else superpose.symbol$font,     fontfamily = if (is.null(groups)) plot.symbol$fontfamily else superpose.symbol$fontfamily,     fontface = if (is.null(groups)) plot.symbol$fontface else superpose.symbol$fontface,     lty = if (is.null(groups)) plot.line$lty else superpose.line$lty,     cex = if (is.null(groups)) plot.symbol$cex else superpose.symbol$cex,     fill = if (is.null(groups)) plot.symbol$fill else superpose.symbol$fill,     lwd = if (is.null(groups)) plot.line$lwd else superpose.line$lwd,     horizontal = FALSE, ...) ","lattice","recommended","2.5.0"
"parallel","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"prepanel.default.bwplot","closure","function","TRUE","FALSE","(x, y, horizontal = TRUE, nlevels, origin = NULL, stack = FALSE,     ...) ","lattice","recommended","2.5.0"
"prepanel.default.cloud","closure","function","TRUE","FALSE","(perspective = TRUE, distance = if (perspective) 0.2 else 0,     xlim, ylim, zlim, screen = list(z = 40, x = -60), R.mat = diag(4),     aspect = c(1, 1), ..., zoom = 0.8) ","lattice","recommended","2.5.0"
"prepanel.default.densityplot","closure","function","TRUE","FALSE","(x, darg, groups = NULL, subscripts = TRUE, ...) ","lattice","recommended","2.5.0"
"prepanel.default.histogram","closure","function","TRUE","FALSE","(x, breaks, equal.widths = TRUE, type = ""density"", nint = round(log2(length(x)) +     1), ...) ","lattice","recommended","2.5.0"
"prepanel.default.levelplot","closure","function","TRUE","FALSE","(x, y, subscripts, ...) ","lattice","recommended","2.5.0"
"prepanel.default.parallel","closure","function","TRUE","FALSE","(x, y, z, ...) ","lattice","recommended","2.5.0"
"prepanel.default.qq","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","2.5.0"
"prepanel.default.qqmath","closure","function","TRUE","FALSE","(x, f.value = NULL, distribution = qnorm, qtype = 7,     groups = NULL, subscripts, ...) ","lattice","recommended","2.5.0"
"prepanel.default.splom","closure","function","TRUE","FALSE","(z, ...) ","lattice","recommended","2.5.0"
"prepanel.default.xyplot","closure","function","TRUE","FALSE","(x, y, type, subscripts, groups = NULL, ...) ","lattice","recommended","2.5.0"
"prepanel.lmline","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","2.5.0"
"prepanel.loess","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, ...) ","lattice","recommended","2.5.0"
"prepanel.qqmathline","closure","function","TRUE","FALSE","(x, y = x, distribution = qnorm, p = c(0.25, 0.75),     qtype = 7, groups = NULL, subscripts = TRUE, ...) ","lattice","recommended","2.5.0"
"prepanel.tmd.default","closure","function","TRUE","FALSE","(x, y, ...) ","lattice","recommended","2.5.0"
"prepanel.tmd.qqmath","closure","function","TRUE","FALSE","(x, f.value = NULL, distribution = qnorm, qtype = 7,     groups = NULL, subscripts, ...) ","lattice","recommended","2.5.0"
"qq","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"qqmath","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"rfs","closure","function","TRUE","FALSE","(model, layout = c(2, 1), xlab = ""f-value"", ylab = NULL,     distribution = qunif, panel = function(...) ","lattice","recommended","2.5.0"
"shingle","closure","function","TRUE","FALSE","(x, intervals = sort(unique(x))) ","lattice","recommended","2.5.0"
"show.settings","closure","function","TRUE","FALSE","(x = NULL) ","lattice","recommended","2.5.0"
"simpleKey","closure","function","TRUE","FALSE","(text, points = TRUE, rectangles = FALSE, lines = FALSE,     col = add.text$col, cex = add.text$cex, alpha = add.text$alpha,     font = add.text$font, fontface = add.text$fontface, fontfamily = add.text$fontfamily,     lineheight = add.text$lineheight, ...) ","lattice","recommended","2.5.0"
"singer","list","data.frame","FALSE","FALSE","NA","lattice","recommended","2.5.0"
"splom","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"strip.custom","closure","function","TRUE","FALSE","(...) ","lattice","recommended","2.5.0"
"strip.default","closure","function","TRUE","FALSE","(which.given, which.panel, var.name, factor.levels,     shingle.intervals = NULL, strip.names = c(FALSE, TRUE), strip.levels = c(TRUE,         FALSE), sep = "" : "", style = 1, horizontal = TRUE, bg = trellis.par.get(""strip.background"")$col[which.given],     fg = trellis.par.get(""strip.shingle"")$col[which.given], par.strip.text = trellis.par.get(""add.text"")) ","lattice","recommended","2.5.0"
"stripplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"tmd","closure","function","TRUE","FALSE","(object, ...) ","lattice","recommended","2.5.0"
"trellis.currentLayout","closure","function","TRUE","FALSE","(which = c(""packet"", ""panel"")) ","lattice","recommended","2.5.0"
"trellis.device","closure","function","TRUE","FALSE","(device = getOption(""device""), color = !(dev.name ==     ""postscript""), theme = lattice.getOption(""default.theme""),     new = TRUE, retain = FALSE, ...) ","lattice","recommended","2.5.0"
"trellis.focus","closure","function","TRUE","FALSE","(name, column = stop(""column must be specified""), row = stop(""row must be specified""),     side = NULL, clip.off = FALSE, highlight = interactive(),     ...) ","lattice","recommended","2.5.0"
"trellis.grobname","closure","function","TRUE","FALSE","(name, prefix = lattice.getStatus(""current.prefix"")) ","lattice","recommended","2.5.0"
"trellis.last.object","closure","function","TRUE","FALSE","(warn = TRUE, ...) ","lattice","recommended","2.5.0"
"trellis.panelArgs","closure","function","TRUE","FALSE","(x, packet.number) ","lattice","recommended","2.5.0"
"trellis.par.get","closure","function","TRUE","FALSE","(name = NULL) ","lattice","recommended","2.5.0"
"trellis.par.set","closure","function","TRUE","FALSE","(name, value, ..., theme, warn = TRUE, strict = FALSE) ","lattice","recommended","2.5.0"
"trellis.switchFocus","closure","function","TRUE","FALSE","(name, side = NULL, clip.off = FALSE, highlight, ...) ","lattice","recommended","2.5.0"
"trellis.unfocus","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"trellis.vpname","closure","function","TRUE","FALSE","(name = c(""position"", ""split"", ""split.location"", ""toplevel"",     ""panel"", ""strip"", ""strip.left"", ""legend"", ""main"", ""sub"",     ""xlab"", ""ylab"", ""page""), column = lattice.getStatus(""current.focus.column""),     row = lattice.getStatus(""current.focus.row""), side = c(""left"",         ""top"", ""right"", ""bottom"", ""inside""), clip.off = FALSE,     prefix = lattice.getStatus(""current.prefix"")) ","lattice","recommended","2.5.0"
"which.packet","closure","function","TRUE","FALSE","() ","lattice","recommended","2.5.0"
"wireframe","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"xscale.components.default","closure","function","TRUE","FALSE","(lim, packet.number = 0, packet.list = NULL, top = TRUE,     ...) ","lattice","recommended","2.5.0"
"xyplot","closure","function","TRUE","FALSE","(x, data, ...) ","lattice","recommended","2.5.0"
"yscale.components.default","closure","function","TRUE","FALSE","(lim, packet.number = 0, packet.list = NULL, right = TRUE,     ...) ","lattice","recommended","2.5.0"
".BasicClasses","character","character","TRUE","FALSE","NA","methods","base","2.5.0"
".BasicFunsList","list","list","TRUE","FALSE","NA","methods","base","2.5.0"
".EmptyPrimitiveSkeletons","list","list","TRUE","FALSE","NA","methods","base","2.5.0"
".Last.lib","closure","function","TRUE","FALSE","(libpath) ","methods","base","2.5.0"
".ShortPrimitiveSkeletons","list","list","TRUE","FALSE","NA","methods","base","2.5.0"
".TraceWithMethods","closure","function","TRUE","FALSE","(what, tracer = NULL, exit = NULL, at = numeric(), print = TRUE,     signature = NULL, where = .GlobalEnv, edit = FALSE, from = NULL,     untrace = FALSE) ","methods","base","2.5.0"
".__C__(","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__<-","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__ANY","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__ClassUnionRepresentation","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__EmptyMethodsList","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__LinearMethodsList","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__MethodDefinition","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__MethodDefinitionWithTrace","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__MethodWithNext","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__MethodWithNextWithTrace","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__MethodsList","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__NULL","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__ObjectsWithPackage","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__OptionalFunction","S4","ClassUnionRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__POSIXct","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__POSIXlt","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__POSIXt","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__PossibleMethod","S4","ClassUnionRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__SClassExtension","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__SealedMethodDefinition","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__VIRTUAL","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__anova","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__anova.glm","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__anova.glm.null","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__aov","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__array","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__call","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__character","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__classPrototypeDef","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__classRepresentation","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__complex","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__data.frame","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__density","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__derivedDefaultMethod","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__double","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__dump.frames","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__environment","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__expression","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__externalptr","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__factor","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__for","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__formula","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__function","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__functionWithTrace","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__genericFunction","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__genericFunctionWithTrace","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__glm","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__glm.null","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__groupGenericFunction","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__groupGenericFunctionWithTrace","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__hsearch","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__if","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__integer","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__integrate","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__language","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__libraryIQR","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__list","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__lm","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__logLik","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__logical","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__maov","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__matrix","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__missing","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__mlm","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__mtable","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__mts","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__name","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__nonstandardGeneric","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__nonstandardGenericFunction","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__nonstandardGroupGenericFunction","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__numeric","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__oldClass","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__ordered","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__packageIQR","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__packageInfo","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__raw","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__recordedplot","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__repeat","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__rle","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__signature","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__single","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__socket","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__standardGeneric","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__standardGenericWithTrace","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__structure","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__summary.table","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__table","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__traceable","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__ts","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__vector","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__while","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__C__{","S4","classRepresentation","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Arith:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Compare:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Complex:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Logic:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Math2:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Math:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Ops:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__Summary:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__addNextMethod:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__body<-:base","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__cbind2:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__coerce:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__coerce<-:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__initialize:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__loadMethod:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__rbind2:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__M__show:methods","S4","MethodsList","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Arith:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Compare:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Complex:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Logic:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Math2:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Math:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Ops:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__Summary:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__addNextMethod:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__body<-:base","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__cbind2:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__coerce:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__coerce<-:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__initialize:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__loadMethod:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__rbind2:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".__T__show:methods","environment","environment","TRUE","FALSE","NA","methods","base","2.5.0"
".doTracePrint","closure","function","TRUE","FALSE","(msg = """") ","methods","base","2.5.0"
".slotNames","closure","function","TRUE","FALSE","(x) ","methods","base","2.5.0"
".untracedFunction","closure","function","TRUE","FALSE","(f) ","methods","base","2.5.0"
".valueClassTest","closure","function","TRUE","FALSE","(object, classes, fname) ","methods","base","2.5.0"
"@<-","closure","function","TRUE","FALSE","(object, name, value) ","methods","base","2.5.0"
"Arith","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","2.5.0"
"Compare","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","2.5.0"
"Complex","closure","groupGenericFunction","TRUE","TRUE","(z) ","methods","base","2.5.0"
"Logic","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","2.5.0"
"Math","closure","groupGenericFunction","TRUE","TRUE","(x) ","methods","base","2.5.0"
"Math2","closure","groupGenericFunction","TRUE","TRUE","(x, digits) ","methods","base","2.5.0"
"MethodAddCoerce","closure","function","TRUE","FALSE","(method, argName, thisClass, methodClass) ","methods","base","2.5.0"
"MethodsList","closure","function","TRUE","FALSE","(.ArgName, ...) ","methods","base","2.5.0"
"MethodsListSelect","closure","function","TRUE","FALSE","(f, env, mlist = NULL, fEnv = if (is(fdef, ""genericFunction"")) environment(fdef) else baseenv(),     finalDefault = finalDefaultMethod(mlist, f), evalArgs = TRUE,     useInherited = TRUE, fdef = getGeneric(f, where = env), resetAllowed = TRUE) ","methods","base","2.5.0"
"Ops","closure","groupGenericFunction","TRUE","TRUE","(e1, e2) ","methods","base","2.5.0"
"Quote","special","function","TRUE","NA","(expr) ","methods","base","2.5.0"
"SignatureMethod","closure","function","TRUE","FALSE","(names, signature, definition) ","methods","base","2.5.0"
"Summary","closure","groupGenericFunction","TRUE","TRUE","(x, ..., na.rm = FALSE) ","methods","base","2.5.0"
"addNextMethod","closure","standardGeneric","TRUE","TRUE","(method, f = ""<unknown>"", mlist = getMethods(f), optional = FALSE,     envir) ","methods","base","2.5.0"
"allGenerics","closure","function","TRUE","FALSE","(where, searchForm = FALSE) ","methods","base","2.5.0"
"allNames","closure","function","TRUE","FALSE","(x) ","methods","base","2.5.0"
"as","closure","function","TRUE","FALSE","(object, Class, strict = TRUE, ext = possibleExtends(thisClass,     Class)) ","methods","base","2.5.0"
"as<-","closure","function","TRUE","FALSE","(object, Class, value) ","methods","base","2.5.0"
"asMethodDefinition","closure","function","TRUE","FALSE","(def, signature = list(), sealed = FALSE) ","methods","base","2.5.0"
"assignClassDef","closure","function","TRUE","FALSE","(Class, def, where = .GlobalEnv, force = FALSE) ","methods","base","2.5.0"
"assignMethodsMetaData","closure","function","TRUE","FALSE","(f, value, fdef, where, deflt = finalDefaultMethod(value)) ","methods","base","2.5.0"
"balanceMethodsList","closure","function","TRUE","FALSE","(mlist, args, check = TRUE) ","methods","base","2.5.0"
"body<-","closure","standardGeneric","TRUE","TRUE","(fun, envir = environment(fun), value) ","methods","base","2.5.0"
"cacheGenericsMetaData","closure","function","TRUE","FALSE","(f, fdef, attach = TRUE, where = topenv(parent.frame()),     package, methods) ","methods","base","2.5.0"
"cacheMetaData","closure","function","TRUE","FALSE","(where, attach = TRUE, searchWhere = as.environment(where)) ","methods","base","2.5.0"
"cacheMethod","closure","function","TRUE","FALSE","(f, sig, def, args = names(sig), fdef, inherited = FALSE) ","methods","base","2.5.0"
"callGeneric","closure","function","TRUE","FALSE","(...) ","methods","base","2.5.0"
"callNextMethod","closure","function","TRUE","FALSE","(...) ","methods","base","2.5.0"
"canCoerce","closure","function","TRUE","FALSE","(object, Class) ","methods","base","2.5.0"
"cbind2","closure","standardGeneric","TRUE","TRUE","(x, y) ","methods","base","2.5.0"
"checkSlotAssignment","closure","function","TRUE","FALSE","(obj, name, value) ","methods","base","2.5.0"
"classMetaName","closure","function","TRUE","FALSE","(name) ","methods","base","2.5.0"
"coerce","closure","standardGeneric","TRUE","TRUE","(from, to, strict = TRUE) ","methods","base","2.5.0"
"coerce<-","closure","standardGeneric","TRUE","TRUE","(from, to, value) ","methods","base","2.5.0"
"completeClassDefinition","closure","function","TRUE","FALSE","(Class, ClassDef = getClassDef(Class), where, doExtends = TRUE) ","methods","base","2.5.0"
"completeExtends","closure","function","TRUE","FALSE","(ClassDef, class2, extensionDef, where) ","methods","base","2.5.0"
"completeSubclasses","closure","function","TRUE","FALSE","(classDef, class2, extensionDef, where, classDef2 = getClassDef(class2,     where)) ","methods","base","2.5.0"
"conformMethod","closure","function","TRUE","FALSE","(signature, mnames, fnames, f = ""<unspecified>"") ","methods","base","2.5.0"
"defaultDumpName","closure","function","TRUE","FALSE","(generic, signature) ","methods","base","2.5.0"
"defaultPrototype","closure","function","TRUE","FALSE","() ","methods","base","2.5.0"
"doPrimitiveMethod","closure","function","TRUE","FALSE","(name, def, call = sys.call(sys.parent()), ev = sys.frame(sys.parent(2))) ","methods","base","2.5.0"
"dumpMethod","closure","function","TRUE","FALSE","(f, signature = character(), file = defaultDumpName(f,     signature), where = -1, def = getMethod(f, signature, where = where,     optional = TRUE)) ","methods","base","2.5.0"
"dumpMethods","closure","function","TRUE","FALSE","(f, file = """", signature = character(), methods, where = topenv(parent.frame())) ","methods","base","2.5.0"
"el","closure","function","TRUE","FALSE","(object, where) ","methods","base","2.5.0"
"el<-","special","function","TRUE","NA","","methods","base","2.5.0"
"elNamed","closure","function","TRUE","FALSE","(x, name, mustFind = FALSE) ","methods","base","2.5.0"
"elNamed<-","closure","function","TRUE","FALSE","(x, name, value) ","methods","base","2.5.0"
"empty.dump","closure","function","TRUE","FALSE","() ","methods","base","2.5.0"
"emptyMethodsList","closure","function","TRUE","FALSE","(mlist, thisClass = ""ANY"", sublist = list()) ","methods","base","2.5.0"
"existsFunction","closure","function","TRUE","FALSE","(f, generic = TRUE, where = topenv(parent.frame())) ","methods","base","2.5.0"
"existsMethod","closure","function","TRUE","FALSE","(f, signature = character(), where = topenv(parent.frame())) ","methods","base","2.5.0"
"extends","closure","function","TRUE","FALSE","(class1, class2, maybe = TRUE, fullInfo = FALSE) ","methods","base","2.5.0"
"finalDefaultMethod","closure","function","TRUE","FALSE","(mlist, fname = ""NULL"") ","methods","base","2.5.0"
"findClass","closure","function","TRUE","FALSE","(Class, where = topenv(parent.frame()), unique = """") ","methods","base","2.5.0"
"findFunction","closure","function","TRUE","FALSE","(f, generic = TRUE, where = topenv(parent.frame())) ","methods","base","2.5.0"
"findMethod","closure","function","TRUE","FALSE","(f, signature, where = topenv(parent.frame())) ","methods","base","2.5.0"
"findUnique","closure","function","TRUE","FALSE","(what, message, where = topenv(parent.frame())) ","methods","base","2.5.0"
"fixPre1.8","closure","function","TRUE","FALSE","(names, where = topenv(parent.frame())) ","methods","base","2.5.0"
"formalArgs","closure","function","TRUE","FALSE","(def) ","methods","base","2.5.0"
"functionBody","closure","function","TRUE","FALSE","(fun = sys.function(sys.parent())) ","methods","base","2.5.0"
"functionBody<-","closure","function","TRUE","FALSE","(fun, envir = environment(fun), value) ","methods","base","2.5.0"
"generic.skeleton","closure","function","TRUE","FALSE","(name, fdef, fdefault) ","methods","base","2.5.0"
"getAccess","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getAllMethods","closure","function","TRUE","FALSE","(f, fdef, where = topenv(parent.frame())) ","methods","base","2.5.0"
"getAllSuperClasses","closure","function","TRUE","FALSE","(ClassDef, simpleOnly = TRUE) ","methods","base","2.5.0"
"getClass","closure","function","TRUE","FALSE","(Class, .Force = FALSE, where = .classEnv(Class, topenv(parent.frame()),     FALSE)) ","methods","base","2.5.0"
"getClassDef","closure","function","TRUE","FALSE","(Class, where = topenv(parent.frame()), package = packageSlot(Class)) ","methods","base","2.5.0"
"getClassName","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getClassPackage","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getClasses","closure","function","TRUE","FALSE","(where = .externalCallerEnv(), inherits = missing(where)) ","methods","base","2.5.0"
"getDataPart","closure","function","TRUE","FALSE","(object) ","methods","base","2.5.0"
"getExtends","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getFunction","closure","function","TRUE","FALSE","(name, generic = TRUE, mustFind = TRUE, where = topenv(parent.frame())) ","methods","base","2.5.0"
"getGeneric","closure","function","TRUE","FALSE","(f, mustFind = FALSE, where = .genEnv(f, topenv(parent.frame()),     package), package = """") ","methods","base","2.5.0"
"getGenerics","closure","function","TRUE","FALSE","(where, searchForm = FALSE) ","methods","base","2.5.0"
"getGroup","closure","function","TRUE","FALSE","(fdef, recursive = FALSE, where = topenv(parent.frame())) ","methods","base","2.5.0"
"getGroupMembers","closure","function","TRUE","FALSE","(group, recursive = FALSE, character = TRUE) ","methods","base","2.5.0"
"getMethod","closure","function","TRUE","FALSE","(f, signature = character(), where = topenv(parent.frame()),     optional = FALSE, mlist, fdef = getGeneric(f, !optional,         where = where)) ","methods","base","2.5.0"
"getMethods","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame())) ","methods","base","2.5.0"
"getMethodsForDispatch","closure","function","TRUE","FALSE","(f, fdef) ","methods","base","2.5.0"
"getMethodsMetaData","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame())) ","methods","base","2.5.0"
"getPackageName","closure","function","TRUE","FALSE","(where = topenv(parent.frame())) ","methods","base","2.5.0"
"getProperties","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getPrototype","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getSlots","closure","function","TRUE","FALSE","(x) ","methods","base","2.5.0"
"getSubclasses","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getValidity","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"getVirtual","closure","function","TRUE","FALSE","(ClassDef) ","methods","base","2.5.0"
"hasArg","closure","function","TRUE","FALSE","(name) ","methods","base","2.5.0"
"hasMethod","closure","function","TRUE","FALSE","(f, signature = character(), where = .genEnv(f, topenv(parent.frame()))) ","methods","base","2.5.0"
"initialize","closure","nonstandardGenericFunction","TRUE","TRUE","(.Object, ...) ","methods","base","2.5.0"
"insertMethod","closure","function","TRUE","FALSE","(mlist, signature, args, def, cacheOnly = FALSE) ","methods","base","2.5.0"
"is","closure","function","TRUE","FALSE","(object, class2) ","methods","base","2.5.0"
"isClass","closure","function","TRUE","FALSE","(Class, formal = TRUE, where = topenv(parent.frame())) ","methods","base","2.5.0"
"isClassDef","closure","function","TRUE","FALSE","(object) ","methods","base","2.5.0"
"isClassUnion","closure","function","TRUE","FALSE","(Class) ","methods","base","2.5.0"
"isGeneric","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame()), fdef = NULL, getName = FALSE) ","methods","base","2.5.0"
"isGrammarSymbol","closure","function","TRUE","FALSE","(symbol) ","methods","base","2.5.0"
"isGroup","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame()), fdef = getGeneric(f,     where = where)) ","methods","base","2.5.0"
"isSealedClass","closure","function","TRUE","FALSE","(Class, where = topenv(parent.frame())) ","methods","base","2.5.0"
"isSealedMethod","closure","function","TRUE","FALSE","(f, signature, fdef = getGeneric(f, FALSE, where = where),     where = topenv(parent.frame())) ","methods","base","2.5.0"
"isVirtualClass","closure","function","TRUE","FALSE","(Class, where = topenv(parent.frame())) ","methods","base","2.5.0"
"languageEl","closure","function","TRUE","FALSE","(object, which) ","methods","base","2.5.0"
"languageEl<-","closure","function","TRUE","FALSE","(object, which, value) ","methods","base","2.5.0"
"linearizeMlist","closure","function","TRUE","FALSE","(mlist, inherited = TRUE) ","methods","base","2.5.0"
"listFromMethods","closure","function","TRUE","FALSE","(generic, where, table) ","methods","base","2.5.0"
"listFromMlist","closure","function","TRUE","FALSE","(mlist, prefix = list()) ","methods","base","2.5.0"
"loadMethod","closure","standardGeneric","TRUE","TRUE","(method, fname, envir) ","methods","base","2.5.0"
"makeClassRepresentation","closure","function","TRUE","FALSE","(name, slots = list(), superClasses = character(), prototype = NULL,     package, validity = NULL, access = list(), version = .newExternalptr(),     sealed = FALSE, virtual = NA, where) ","methods","base","2.5.0"
"makeExtends","closure","function","TRUE","FALSE","(Class, to, coerce = NULL, test = NULL, replace = NULL,     by = character(), package, slots = getSlots(classDef1), classDef1 = getClass(Class),     classDef2) ","methods","base","2.5.0"
"makeGeneric","closure","function","TRUE","FALSE","(f, fdef, fdefault, group = list(), valueClass = character(),     package, signature = NULL, genericFunction = NULL) ","methods","base","2.5.0"
"makeMethodsList","closure","function","TRUE","FALSE","(object, level = 1) ","methods","base","2.5.0"
"makePrototypeFromClassDef","closure","function","TRUE","FALSE","(slots, ClassDef, extends, where) ","methods","base","2.5.0"
"makeStandardGeneric","closure","function","TRUE","FALSE","(f, fdef) ","methods","base","2.5.0"
"matchSignature","closure","function","TRUE","FALSE","(signature, fun, where = baseenv()) ","methods","base","2.5.0"
"mergeMethods","closure","function","TRUE","FALSE","(m1, m2, genericLabel = character()) ","methods","base","2.5.0"
"metaNameUndo","closure","function","TRUE","FALSE","(strings, prefix = ""M"", searchForm = FALSE) ","methods","base","2.5.0"
"method.skeleton","closure","function","TRUE","FALSE","(generic, signature, file, external = FALSE) ","methods","base","2.5.0"
"methodSignatureMatrix","closure","function","TRUE","FALSE","(object, sigSlots = c(""target"", ""defined"")) ","methods","base","2.5.0"
"methodsPackageMetaName","closure","function","TRUE","FALSE","(prefix, name) ","methods","base","2.5.0"
"missingArg","closure","function","TRUE","FALSE","(symbol, envir = parent.frame(), eval = FALSE) ","methods","base","2.5.0"
"mlistMetaName","closure","function","TRUE","FALSE","(name = """", package = """") ","methods","base","2.5.0"
"new","closure","function","TRUE","FALSE","(Class, ...) ","methods","base","2.5.0"
"newBasic","closure","function","TRUE","FALSE","(Class, ...) ","methods","base","2.5.0"
"newClassRepresentation","closure","function","TRUE","FALSE","(...) ","methods","base","2.5.0"
"newEmptyObject","closure","function","TRUE","FALSE","() ","methods","base","2.5.0"
"packageSlot","closure","function","TRUE","FALSE","(object) ","methods","base","2.5.0"
"packageSlot<-","closure","function","TRUE","FALSE","(object, value) ","methods","base","2.5.0"
"possibleExtends","closure","function","TRUE","FALSE","(class1, class2, ClassDef1 = getClassDef(class1), ClassDef2 = getClassDef(class2,     where = .classEnv(ClassDef1))) ","methods","base","2.5.0"
"promptClass","closure","function","TRUE","FALSE","(clName, filename = NULL, type = ""class"", keywords = ""classes"",     where = topenv(parent.frame())) ","methods","base","2.5.0"
"promptMethods","closure","function","TRUE","FALSE","(f, filename = NULL, methods) ","methods","base","2.5.0"
"prototype","closure","function","TRUE","FALSE","(...) ","methods","base","2.5.0"
"rbind2","closure","standardGeneric","TRUE","TRUE","(x, y) ","methods","base","2.5.0"
"reconcilePropertiesAndPrototype","closure","function","TRUE","FALSE","(name, properties, prototype, superClasses, where) ","methods","base","2.5.0"
"rematchDefinition","closure","function","TRUE","FALSE","(definition, generic, mnames, fnames, signature) ","methods","base","2.5.0"
"removeClass","closure","function","TRUE","FALSE","(Class, where = topenv(parent.frame())) ","methods","base","2.5.0"
"removeGeneric","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame())) ","methods","base","2.5.0"
"removeMethod","closure","function","TRUE","FALSE","(f, signature = character(), where = topenv(parent.frame())) ","methods","base","2.5.0"
"removeMethods","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame()), all = TRUE) ","methods","base","2.5.0"
"removeMethodsObject","closure","function","TRUE","FALSE","(f, where = topenv(parent.frame())) ","methods","base","2.5.0"
"representation","closure","function","TRUE","FALSE","(...) ","methods","base","2.5.0"
"requireMethods","closure","function","TRUE","FALSE","(functions, signature, message = """", where = topenv(parent.frame())) ","methods","base","2.5.0"
"resetClass","closure","function","TRUE","FALSE","(Class, classDef, where) ","methods","base","2.5.0"
"resetGeneric","closure","function","TRUE","FALSE","(f, fdef = getGeneric(f, where = where), mlist = getMethodsForDispatch(f,     fdef), where = topenv(parent.frame()), deflt = finalDefaultMethod(mlist)) ","methods","base","2.5.0"
"sealClass","closure","function","TRUE","FALSE","(Class, where = topenv(parent.frame())) ","methods","base","2.5.0"
"seemsS4Object","closure","function","TRUE","FALSE","(object) ","methods","base","2.5.0"
"selectMethod","closure","function","TRUE","FALSE","(f, signature, optional = FALSE, useInherited = TRUE,     mlist = (if (is.null(fdef)) NULL else getMethodsForDispatch(f,         fdef)), fdef = getGeneric(f, !optional), verbose = FALSE) ","methods","base","2.5.0"
"sessionData","closure","function","TRUE","FALSE","() ","methods","base","2.5.0"
"setAs","closure","function","TRUE","FALSE","(from, to, def, replace = NULL, where = topenv(parent.frame())) ","methods","base","2.5.0"
"setClass","closure","function","TRUE","FALSE","(Class, representation = list(), prototype = NULL, contains = character(),     validity = NULL, access = list(), where = topenv(parent.frame()),     version = .newExternalptr(), sealed = FALSE, package = getPackageName(where)) ","methods","base","2.5.0"
"setClassUnion","closure","function","TRUE","FALSE","(name, members = character(), where = topenv(parent.frame())) ","methods","base","2.5.0"
"setDataPart","closure","function","TRUE","FALSE","(object, value) ","methods","base","2.5.0"
"setGeneric","closure","function","TRUE","FALSE","(name, def = NULL, group = list(), valueClass = character(),     where = topenv(parent.frame()), package = NULL, signature = NULL,     useAsDefault = NULL, genericFunction = NULL) ","methods","base","2.5.0"
"setGroupGeneric","closure","function","TRUE","FALSE","(name, def = NULL, group = list(), valueClass = character(),     knownMembers = list(), package = getPackageName(where), where = topenv(parent.frame())) ","methods","base","2.5.0"
"setIs","closure","function","TRUE","FALSE","(class1, class2, test = NULL, coerce = NULL, replace = NULL,     by = character(), where = topenv(parent.frame()), classDef = getClass(class1,         TRUE, where = where), extensionObject = NULL, doComplete = TRUE) ","methods","base","2.5.0"
"setMethod","closure","function","TRUE","FALSE","(f, signature = character(), definition, where = topenv(parent.frame()),     valueClass = NULL, sealed = FALSE) ","methods","base","2.5.0"
"setOldClass","closure","function","TRUE","FALSE","(Classes, prototype, where = topenv(parent.frame()),     test = FALSE) ","methods","base","2.5.0"
"setPackageName","closure","function","TRUE","FALSE","(pkg, env) ","methods","base","2.5.0"
"setPrimitiveMethods","closure","function","TRUE","FALSE","(f, fdef, code, generic, mlist = get("".Methods"", envir = environment(generic))) ","methods","base","2.5.0"
"setReplaceMethod","closure","function","TRUE","FALSE","(f, ..., where = topenv(parent.frame())) ","methods","base","2.5.0"
"setValidity","closure","function","TRUE","FALSE","(Class, method, where = topenv(parent.frame())) ","methods","base","2.5.0"
"show","closure","standardGeneric","TRUE","TRUE","(object) ","methods","base","2.5.0"
"showClass","closure","function","TRUE","FALSE","(Class, complete = TRUE, propertiesAreCalled = ""Slots"") ","methods","base","2.5.0"
"showDefault","closure","function","TRUE","FALSE","(object, oldMethods = TRUE) ","methods","base","2.5.0"
"showExtends","closure","function","TRUE","FALSE","(ext, printTo = stdout()) ","methods","base","2.5.0"
"showMethods","closure","function","TRUE","FALSE","(f = character(), where = topenv(parent.frame()), classes = NULL,     includeDefs = FALSE, inherited = TRUE, showEmpty, printTo = stdout()) ","methods","base","2.5.0"
"showMlist","closure","function","TRUE","FALSE","(mlist, includeDefs = TRUE, inherited = TRUE, classes = NULL,     useArgNames = TRUE, printTo = stdout()) ","methods","base","2.5.0"
"sigToEnv","closure","function","TRUE","FALSE","(signature, generic) ","methods","base","2.5.0"
"signature","closure","function","TRUE","FALSE","(...) ","methods","base","2.5.0"
"slot","closure","function","TRUE","FALSE","(object, name) ","methods","base","2.5.0"
"slot<-","closure","function","TRUE","FALSE","(object, name, check = TRUE, value) ","methods","base","2.5.0"
"slotNames","closure","function","TRUE","FALSE","(x) ","methods","base","2.5.0"
"substituteDirect","closure","function","TRUE","FALSE","(object, frame = parent.frame(), cleanFunction = TRUE) ","methods","base","2.5.0"
"substituteFunctionArgs","closure","function","TRUE","FALSE","(def, newArgs, args = formalArgs(def), silent = FALSE) ","methods","base","2.5.0"
"superClassDepth","closure","function","TRUE","FALSE","(ClassDef, soFar = ClassDef@className, simpleOnly = TRUE) ","methods","base","2.5.0"
"testVirtual","closure","function","TRUE","FALSE","(properties, extends, prototype, where) ","methods","base","2.5.0"
"traceOff","closure","function","TRUE","FALSE","(what) ","methods","base","2.5.0"
"traceOn","closure","function","TRUE","FALSE","(what, tracer = browseAll, exit = NULL) ","methods","base","2.5.0"
"tryNew","closure","function","TRUE","FALSE","(Class, where) ","methods","base","2.5.0"
"trySilent","closure","function","TRUE","FALSE","(expr) ","methods","base","2.5.0"
"unRematchDefinition","closure","function","TRUE","FALSE","(definition) ","methods","base","2.5.0"
"validObject","closure","function","TRUE","FALSE","(object, test = FALSE, complete = FALSE) ","methods","base","2.5.0"
"validSlotNames","closure","function","TRUE","FALSE","(names) ","methods","base","2.5.0"
"Dim.pdIdnot","closure","function","TRUE","FALSE","(object, ...) ","mgcv","recommended","2.5.0"
"Predict.matrix","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"Predict.matrix.cr.smooth","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"Predict.matrix.cs.smooth","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"Predict.matrix.cyclic.smooth","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"Predict.matrix.tensor.smooth","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"Predict.matrix.tprs.smooth","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"Predict.matrix.ts.smooth","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"PredictMat","closure","function","TRUE","FALSE","(object, data) ","mgcv","recommended","2.5.0"
"anova.gam","closure","function","TRUE","FALSE","(object, ..., dispersion = NULL, test = NULL) ","mgcv","recommended","2.5.0"
"coef.pdIdnot","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","mgcv","recommended","2.5.0"
"coef.pdTens","closure","function","TRUE","FALSE","(object, unconstrained = TRUE, ...) ","mgcv","recommended","2.5.0"
"corMatrix.pdIdnot","closure","function","TRUE","FALSE","(object, ...) ","mgcv","recommended","2.5.0"
"exclude.too.far","closure","function","TRUE","FALSE","(g1, g2, d1, d2, dist) ","mgcv","recommended","2.5.0"
"extract.lme.cov","closure","function","TRUE","FALSE","(b, data, start.level = 1) ","mgcv","recommended","2.5.0"
"extract.lme.cov2","closure","function","TRUE","FALSE","(b, data, start.level = 1) ","mgcv","recommended","2.5.0"
"fix.family.link","closure","function","TRUE","FALSE","(fam) ","mgcv","recommended","2.5.0"
"fix.family.var","closure","function","TRUE","FALSE","(fam) ","mgcv","recommended","2.5.0"
"fixDependence","closure","function","TRUE","FALSE","(X1, X2, tol = .Machine$double.eps^0.5) ","mgcv","recommended","2.5.0"
"formXtViX","closure","function","TRUE","FALSE","(V, X) ","mgcv","recommended","2.5.0"
"formula.gam","closure","function","TRUE","FALSE","(x, ...) ","mgcv","recommended","2.5.0"
"full.score","closure","function","TRUE","FALSE","(sp, G, family, control, gamma, pearson, ...) ","mgcv","recommended","2.5.0"
"gam","closure","function","TRUE","FALSE","(formula, family = gaussian(), data = list(), weights = NULL,     subset = NULL, na.action, offset = NULL, control = gam.control(),     method = gam.method(), scale = 0, knots = NULL, sp = NULL,     min.sp = NULL, H = NULL, gamma = 1, fit = TRUE, G = NULL,     in.out = NULL, ...) ","mgcv","recommended","2.5.0"
"gam.check","closure","function","TRUE","FALSE","(b) ","mgcv","recommended","2.5.0"
"gam.control","closure","function","TRUE","FALSE","(irls.reg = 0, epsilon = 1e-06, maxit = 100, globit = 20,     mgcv.tol = 1e-07, mgcv.half = 15, nb.theta.mult = 10000,     trace = FALSE, rank.tol = .Machine$double.eps^0.5, absorb.cons = TRUE,     max.tprs.knots = 5000, nlm = list(), optim = list(), newton = list(),     outerPIsteps = 1) ","mgcv","recommended","2.5.0"
"gam.fit","closure","function","TRUE","FALSE","(G, start = NULL, etastart = NULL, mustart = NULL, family = gaussian(),     control = gam.control(), gamma = 1, fixedSteps = (control$maxit +         control$globit + 1), ...) ","mgcv","recommended","2.5.0"
"gam.fit2","closure","function","TRUE","FALSE","(x, y, sp, S = list(), rS = list(), off, H = NULL, weights = rep(1,     nobs), start = NULL, etastart = NULL, mustart = NULL, offset = rep(0,     nobs), family = gaussian(), control = gam.control(), intercept = TRUE,     deriv = TRUE, gamma = 1, scale = 1, pearson = FALSE, printWarn = TRUE,     ...) ","mgcv","recommended","2.5.0"
"gam.fit3","closure","function","TRUE","FALSE","(x, y, sp, S = list(), rS = list(), off, H = NULL, weights = rep(1,     nobs), start = NULL, etastart = NULL, mustart = NULL, offset = rep(0,     nobs), family = gaussian(), control = gam.control(), intercept = TRUE,     deriv = 2, use.svd = TRUE, gamma = 1, scale = 1, printWarn = TRUE,     ...) ","mgcv","recommended","2.5.0"
"gam.method","closure","function","TRUE","FALSE","(am = ""magic"", gam = ""outer"", outer = ""newton"", gcv = ""deviance"",     family = NULL) ","mgcv","recommended","2.5.0"
"gam.outer","closure","function","TRUE","FALSE","(lsp, fscale, family, control, method, gamma, G, ...) ","mgcv","recommended","2.5.0"
"gam.setup","closure","function","TRUE","FALSE","(formula, pterms, data = stop(""No data supplied to gam.setup""),     knots = NULL, sp = NULL, min.sp = NULL, H = NULL, fit.method = ""magic"",     parametric.only = FALSE, absorb.cons = FALSE, max.tprs.knots = NULL) ","mgcv","recommended","2.5.0"
"gam.side","closure","function","TRUE","FALSE","(sm, tol = .Machine$double.eps^0.5) ","mgcv","recommended","2.5.0"
"gam2derivative","closure","function","TRUE","FALSE","(lsp, args, ...) ","mgcv","recommended","2.5.0"
"gam2objective","closure","function","TRUE","FALSE","(lsp, args, printWarn = FALSE, ...) ","mgcv","recommended","2.5.0"
"gam3objective","closure","function","TRUE","FALSE","(lsp, args, ...) ","mgcv","recommended","2.5.0"
"gamm","closure","function","TRUE","FALSE","(formula, random = NULL, correlation = NULL, family = gaussian(),     data = list(), weights = NULL, subset = NULL, na.action,     knots = NULL, control = nlme::lmeControl(niterEM = 0, optimMethod = ""L-BFGS-B""),     niterPQL = 20, verbosePQL = TRUE, method = ""ML"", ...) ","mgcv","recommended","2.5.0"
"gamm.setup","closure","function","TRUE","FALSE","(formula, pterms, data = stop(""No data supplied to gam.setup""),     knots = NULL, parametric.only = FALSE, absorb.cons = FALSE) ","mgcv","recommended","2.5.0"
"get.var","closure","function","TRUE","FALSE","(txt, data) ","mgcv","recommended","2.5.0"
"influence.gam","closure","function","TRUE","FALSE","(model, ...) ","mgcv","recommended","2.5.0"
"initial.sp","closure","function","TRUE","FALSE","(X, S, off, expensive = FALSE) ","mgcv","recommended","2.5.0"
"interpret.gam","closure","function","TRUE","FALSE","(gf) ","mgcv","recommended","2.5.0"
"logDet.pdIdnot","closure","function","TRUE","FALSE","(object, ...) ","mgcv","recommended","2.5.0"
"logLik.gam","closure","function","TRUE","FALSE","(object, ...) ","mgcv","recommended","2.5.0"
"magic","closure","function","TRUE","FALSE","(y, X, sp, S, off, rank = NULL, H = NULL, C = NULL,     w = NULL, gamma = 1, scale = 1, gcv = TRUE, ridge.parameter = NULL,     control = list(maxit = 50, tol = 1e-06, step.half = 25, rank.tol = .Machine$double.eps^0.5),     extra.rss = 0, n.score = length(y)) ","mgcv","recommended","2.5.0"
"magic.post.proc","closure","function","TRUE","FALSE","(X, object, w = NULL) ","mgcv","recommended","2.5.0"
"mgcv","closure","function","TRUE","FALSE","(y, X, sp, S, off, C = NULL, w = rep(1, length(y)),     H = NULL, scale = 1, gcv = TRUE, control = mgcv.control()) ","mgcv","recommended","2.5.0"
"mgcv.control","closure","function","TRUE","FALSE","(conv.tol = 1e-07, max.half = 20, target.edf = NULL,     min.edf = -1) ","mgcv","recommended","2.5.0"
"mgcv.find.theta","closure","function","TRUE","FALSE","(Theta, T.max, T.min, weights, good, mu, mu.eta.val,     G, tol) ","mgcv","recommended","2.5.0"
"mgcv.get.scale","closure","function","TRUE","FALSE","(Theta, weights, good, mu, mu.eta.val, G) ","mgcv","recommended","2.5.0"
"mono.con","closure","function","TRUE","FALSE","(x, up = TRUE, lower = NA, upper = NA) ","mgcv","recommended","2.5.0"
"mroot","closure","function","TRUE","FALSE","(A, rank = NULL, method = ""chol"") ","mgcv","recommended","2.5.0"
"new.name","closure","function","TRUE","FALSE","(proposed, old.names) ","mgcv","recommended","2.5.0"
"notExp","closure","function","TRUE","FALSE","(x) ","mgcv","recommended","2.5.0"
"notExp2","closure","function","TRUE","FALSE","(x, d = .Options$mgcv.vc.logrange, b = 1/d) ","mgcv","recommended","2.5.0"
"notLog","closure","function","TRUE","FALSE","(x) ","mgcv","recommended","2.5.0"
"notLog2","closure","function","TRUE","FALSE","(x, d = .Options$mgcv.vc.logrange, b = 1/d) ","mgcv","recommended","2.5.0"
"null.space.dimension","closure","function","TRUE","FALSE","(d, m) ","mgcv","recommended","2.5.0"
"pcls","closure","function","TRUE","FALSE","(M) ","mgcv","recommended","2.5.0"
"pdConstruct.pdIdnot","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = nlme::Names(object), data = sys.frame(sys.parent()),     ...) ","mgcv","recommended","2.5.0"
"pdConstruct.pdTens","closure","function","TRUE","FALSE","(object, value = numeric(0), form = formula(object),     nam = nlme::Names(object), data = sys.frame(sys.parent()),     ...) ","mgcv","recommended","2.5.0"
"pdFactor.pdIdnot","closure","function","TRUE","FALSE","(object) ","mgcv","recommended","2.5.0"
"pdFactor.pdTens","closure","function","TRUE","FALSE","(object) ","mgcv","recommended","2.5.0"
"pdIdnot","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","mgcv","recommended","2.5.0"
"pdMatrix.pdIdnot","closure","function","TRUE","FALSE","(object, factor = FALSE) ","mgcv","recommended","2.5.0"
"pdMatrix.pdTens","closure","function","TRUE","FALSE","(object, factor = FALSE) ","mgcv","recommended","2.5.0"
"pdTens","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","mgcv","recommended","2.5.0"
"place.knots","closure","function","TRUE","FALSE","(x, nk) ","mgcv","recommended","2.5.0"
"plot.gam","closure","function","TRUE","FALSE","(x, residuals = FALSE, rug = TRUE, se = TRUE, pages = 0,     select = NULL, scale = -1, n = 100, n2 = 40, pers = FALSE,     theta = 30, phi = 30, jit = FALSE, xlab = NULL, ylab = NULL,     main = NULL, ylim = NULL, xlim = NULL, too.far = 0.1, all.terms = FALSE,     shade = FALSE, shade.col = ""gray80"", shift = 0, trans = I,     ...) ","mgcv","recommended","2.5.0"
"predict.gam","closure","function","TRUE","FALSE","(object, newdata, type = ""link"", se.fit = FALSE, terms = NULL,     block.size = 1000, newdata.guaranteed = FALSE, na.action = na.pass,     ...) ","mgcv","recommended","2.5.0"
"print.anova.gam","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","mgcv","recommended","2.5.0"
"print.gam","closure","function","TRUE","FALSE","(x, ...) ","mgcv","recommended","2.5.0"
"print.summary.gam","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), signif.stars = getOption(""show.signif.stars""),     ...) ","mgcv","recommended","2.5.0"
"residuals.gam","closure","function","TRUE","FALSE","(object, type = c(""deviance"", ""pearson"", ""scaled.pearson"",     ""working"", ""response""), ...) ","mgcv","recommended","2.5.0"
"s","closure","function","TRUE","FALSE","(..., k = -1, fx = FALSE, bs = ""tp"", m = 0, by = NA) ","mgcv","recommended","2.5.0"
"smooth.construct","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smooth.construct.cc.smooth.spec","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smooth.construct.cr.smooth.spec","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smooth.construct.cs.smooth.spec","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smooth.construct.tensor.smooth.spec","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smooth.construct.tp.smooth.spec","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smooth.construct.ts.smooth.spec","closure","function","TRUE","FALSE","(object, data, knots) ","mgcv","recommended","2.5.0"
"smoothCon","closure","function","TRUE","FALSE","(object, data, knots, absorb.cons = FALSE, scale.penalty = TRUE) ","mgcv","recommended","2.5.0"
"solve.pdIdnot","closure","function","TRUE","FALSE","(a, b, ...) ","mgcv","recommended","2.5.0"
"summary.gam","closure","function","TRUE","FALSE","(object, dispersion = NULL, freq = TRUE, ...) ","mgcv","recommended","2.5.0"
"summary.pdIdnot","closure","function","TRUE","FALSE","(object, structName = ""Multiple of an Identity"", ...) ","mgcv","recommended","2.5.0"
"summary.pdTens","closure","function","TRUE","FALSE","(object, structName = ""Tensor product smooth term"",     ...) ","mgcv","recommended","2.5.0"
"te","closure","function","TRUE","FALSE","(..., k = NA, bs = ""cr"", m = 0, d = NA, by = NA, fx = FALSE,     mp = TRUE, np = TRUE) ","mgcv","recommended","2.5.0"
"tensor.prod.model.matrix","closure","function","TRUE","FALSE","(X) ","mgcv","recommended","2.5.0"
"tensor.prod.penalties","closure","function","TRUE","FALSE","(S) ","mgcv","recommended","2.5.0"
"uniquecombs","closure","function","TRUE","FALSE","(x) ","mgcv","recommended","2.5.0"
"vcov.gam","closure","function","TRUE","FALSE","(object, freq = TRUE, dispersion = NULL, ...) ","mgcv","recommended","2.5.0"
"vis.gam","closure","function","TRUE","FALSE","(x, view = NULL, cond = list(), n.grid = 30, too.far = 0,     col = NA, color = ""heat"", contour.col = NULL, se = -1, type = ""link"",     plot.type = ""persp"", zlim = NULL, nCol = 50, ...) ","mgcv","recommended","2.5.0"
"ACF","closure","function","TRUE","FALSE","(object, maxLag, ...) ","nlme","recommended","2.5.0"
"Alfalfa","list","nmGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Assay","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"BIC","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"BodyWeight","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Cefamandole","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Dialyzer","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Dim","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"Earthquake","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Fatigue","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Gasoline","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Glucose","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Glucose2","list","nmGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Gun","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"IGF","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Initialize","closure","function","TRUE","FALSE","(object, data, ...) ","nlme","recommended","2.5.0"
"LDEsysMat","closure","function","TRUE","FALSE","(pars, incidence) ","nlme","recommended","2.5.0"
"Machines","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"MathAchSchool","list","data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"MathAchieve","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Meat","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Milk","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Muscle","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Names","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"Names<-","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","2.5.0"
"Nitrendipene","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Oats","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Orthodont","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Ovary","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Oxboys","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Oxide","list","nmGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"PBG","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Phenobarb","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Pixel","list","nmGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Quinidine","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Rail","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"RatPupWeight","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Relaxin","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Remifentanil","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Soybean","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Spruce","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Tetracycline1","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Tetracycline2","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"VarCorr","closure","function","TRUE","FALSE","(x, sigma = 1, rdig = 3) ","nlme","recommended","2.5.0"
"Variogram","closure","function","TRUE","FALSE","(object, distance, ...) ","nlme","recommended","2.5.0"
"Wafer","list","nmGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Wheat","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"Wheat2","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"allCoef","closure","function","TRUE","FALSE","(..., extract = coef) ","nlme","recommended","2.5.0"
"anova.lme","closure","function","TRUE","FALSE","(object, ..., test = TRUE, type = c(""sequential"", ""marginal""),     adjustSigma = TRUE, Terms, L, verbose = FALSE) ","nlme","recommended","2.5.0"
"asOneFormula","closure","function","TRUE","FALSE","(..., omit = c(""."", ""pi"")) ","nlme","recommended","2.5.0"
"asTable","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"augPred","closure","function","TRUE","FALSE","(object, primary = NULL, minimum = min(primary), maximum = max(primary),     length.out = 51, ...) ","nlme","recommended","2.5.0"
"balancedGrouped","closure","function","TRUE","FALSE","(form, data, labels = NULL, units = NULL) ","nlme","recommended","2.5.0"
"bdf","list","nfnGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"coef<-","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","2.5.0"
"coefficients<-","closure","function","TRUE","FALSE","(object, ..., value) ","nlme","recommended","2.5.0"
"collapse","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"compareFits","closure","function","TRUE","FALSE","(object1, object2, which = 1:ncol(object1)) ","nlme","recommended","2.5.0"
"comparePred","closure","function","TRUE","FALSE","(object1, object2, primary = NULL, minimum = min(primary),     maximum = max(primary), length.out = 51, level = NULL, ...) ","nlme","recommended","2.5.0"
"corAR1","closure","function","TRUE","FALSE","(value = 0, form = ~1, fixed = FALSE) ","nlme","recommended","2.5.0"
"corARMA","closure","function","TRUE","FALSE","(value = double(p + q), form = ~1, p = 0, q = 0, fixed = FALSE) ","nlme","recommended","2.5.0"
"corCAR1","closure","function","TRUE","FALSE","(value = 0.2, form = ~1, fixed = FALSE) ","nlme","recommended","2.5.0"
"corCompSymm","closure","function","TRUE","FALSE","(value = 0, form = ~1, fixed = FALSE) ","nlme","recommended","2.5.0"
"corExp","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","2.5.0"
"corFactor","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"corGaus","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","2.5.0"
"corIdent","closure","function","TRUE","FALSE","(form = NULL) ","nlme","recommended","2.5.0"
"corLin","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","2.5.0"
"corMatrix","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"corNatural","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, fixed = FALSE) ","nlme","recommended","2.5.0"
"corRatio","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","2.5.0"
"corSpatial","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, type = c(""spherical"",     ""exponential"", ""gaussian"", ""linear"", ""rational""), metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","2.5.0"
"corSpher","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, nugget = FALSE, metric = c(""euclidean"",     ""maximum"", ""manhattan""), fixed = FALSE) ","nlme","recommended","2.5.0"
"corSymm","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, fixed = FALSE) ","nlme","recommended","2.5.0"
"covariate<-","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","2.5.0"
"ergoStool","list","nffGroupedData/nfGroupedData/groupedData/data.frame","FALSE","FALSE","NA","nlme","recommended","2.5.0"
"fdHess","closure","function","TRUE","FALSE","(pars, fun, ..., .relStep = (.Machine$double.eps)^(1/3),     minAbsPar = 0) ","nlme","recommended","2.5.0"
"fixed.effects","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"fixef","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"gapply","closure","function","TRUE","FALSE","(object, which, FUN, form = formula(object), level,     groups = getGroups(object, form, level), ...) ","nlme","recommended","2.5.0"
"getCovariate","closure","function","TRUE","FALSE","(object, form = formula(object), data) ","nlme","recommended","2.5.0"
"getCovariateFormula","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"getData","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"getGroups","closure","function","TRUE","FALSE","(object, form = formula(object), level, data, sep = ""/"") ","nlme","recommended","2.5.0"
"getGroupsFormula","closure","function","TRUE","FALSE","(object, asList = FALSE, sep = ""/"") ","nlme","recommended","2.5.0"
"getResponse","closure","function","TRUE","FALSE","(object, form = formula(object)) ","nlme","recommended","2.5.0"
"getResponseFormula","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"getVarCov","closure","function","TRUE","FALSE","(obj, ...) ","nlme","recommended","2.5.0"
"gls","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list(), verbose = FALSE) ","nlme","recommended","2.5.0"
"glsControl","closure","function","TRUE","FALSE","(maxIter = 50, msMaxIter = 200, tolerance = 1e-06, msTol = 1e-07,     msScale = lmeScale, msVerbose = FALSE, singular.ok = FALSE,     qrTol = .Machine$single.eps, returnObject = FALSE, apVar = TRUE,     .relStep = (.Machine$double.eps)^(1/3), nlmStepMax = 100,     opt = c(""nlminb"", ""optim""), optimMethod = ""BFGS"", minAbsParApVar = 0.05,     natural = TRUE) ","nlme","recommended","2.5.0"
"glsStruct","closure","function","TRUE","FALSE","(corStruct = NULL, varStruct = NULL) ","nlme","recommended","2.5.0"
"gnls","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), params, start,     correlation = NULL, weights = NULL, subset, na.action = na.fail,     naPattern, control = list(), verbose = FALSE) ","nlme","recommended","2.5.0"
"gnlsControl","closure","function","TRUE","FALSE","(maxIter = 50, nlsMaxIter = 7, msMaxIter = 50, minScale = 0.001,     tolerance = 1e-06, nlsTol = 0.001, msTol = 1e-07, msScale = lmeScale,     returnObject = FALSE, msVerbose = FALSE, apVar = TRUE, .relStep = (.Machine$double.eps)^(1/3),     nlmStepMax = 100, opt = c(""nlminb"", ""optim""), optimMethod = ""BFGS"",     minAbsParApVar = 0.05) ","nlme","recommended","2.5.0"
"gnlsStruct","closure","function","TRUE","FALSE","(corStruct = NULL, varStruct = NULL) ","nlme","recommended","2.5.0"
"groupedData","closure","function","TRUE","FALSE","(formula, data = sys.parent(1), order.groups = TRUE,     FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL,     labels = NULL, units = NULL) ","nlme","recommended","2.5.0"
"gsummary","closure","function","TRUE","FALSE","(object, FUN = function(x) mean(x, na.rm = TRUE), omitGroupingFactor = FALSE,     form = formula(object), level, groups = getGroups(object,         form, level), invariantsOnly = FALSE, ...) ","nlme","recommended","2.5.0"
"intervals","closure","function","TRUE","FALSE","(object, level = 0.95, ...) ","nlme","recommended","2.5.0"
"isBalanced","closure","function","TRUE","FALSE","(object, countOnly = FALSE, level) ","nlme","recommended","2.5.0"
"isInitialized","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"lmList","closure","function","TRUE","FALSE","(object, data, level, subset, na.action = na.fail, pool = TRUE) ","nlme","recommended","2.5.0"
"lmList.formula","closure","function","TRUE","FALSE","(object, data, level, subset, na.action = na.fail, pool = TRUE) ","nlme","recommended","2.5.0"
"lme","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random, correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list(), contrasts = NULL, keep.data = TRUE) ","nlme","recommended","2.5.0"
"lme.formula","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random = pdSymm(eval(as.call(fixed[-2]))),     correlation = NULL, weights = NULL, subset, method = c(""REML"",         ""ML""), na.action = na.fail, control = list(), contrasts = NULL,     keep.data = TRUE) ","nlme","recommended","2.5.0"
"lme.lmList","closure","function","TRUE","FALSE","(fixed, data = sys.frame(sys.parent()), random, correlation = NULL,     weights = NULL, subset, method = c(""REML"", ""ML""), na.action = na.fail,     control = list(), contrasts = NULL, keep.data = TRUE) ","nlme","recommended","2.5.0"
"lmeControl","closure","function","TRUE","FALSE","(maxIter = 50, msMaxIter = 50, tolerance = 1e-06, niterEM = 25,     msMaxEval = 200, msTol = 1e-07, msScale = lmeScale, msVerbose = FALSE,     returnObject = FALSE, gradHess = TRUE, apVar = TRUE, .relStep = (.Machine$double.eps)^(1/3),     minAbsParApVar = 0.05, nlmStepMax = 100, opt = c(""nlminb"",         ""optim""), optimMethod = ""BFGS"", natural = TRUE) ","nlme","recommended","2.5.0"
"lmeScale","closure","function","TRUE","FALSE","(start) ","nlme","recommended","2.5.0"
"lmeStruct","closure","function","TRUE","FALSE","(reStruct, corStruct = NULL, varStruct = NULL) ","nlme","recommended","2.5.0"
"logDet","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"matrix<-","closure","function","TRUE","FALSE","(object, value) ","nlme","recommended","2.5.0"
"needUpdate","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"nfGroupedData","closure","function","TRUE","FALSE","(formula, data = sys.parent(1), order.groups = TRUE,     FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL,     labels = NULL, units = NULL) ","nlme","recommended","2.5.0"
"nlme","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), fixed, random = fixed,     groups, start, correlation = NULL, weights = NULL, subset,     method = c(""ML"", ""REML""), na.action = na.fail, naPattern,     control = list(), verbose = FALSE) ","nlme","recommended","2.5.0"
"nlme.formula","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), fixed, random,     groups, start, correlation = NULL, weights = NULL, subset,     method = c(""ML"", ""REML""), na.action = na.fail, naPattern,     control = list(), verbose = FALSE) ","nlme","recommended","2.5.0"
"nlme.nlsList","closure","function","TRUE","FALSE","(model, data = sys.frame(sys.parent()), fixed, random = fixed,     groups, start, correlation = NULL, weights = NULL, subset,     method = c(""ML"", ""REML""), na.action = na.fail, naPattern,     control = list(), verbose = FALSE) ","nlme","recommended","2.5.0"
"nlmeControl","closure","function","TRUE","FALSE","(maxIter = 50, pnlsMaxIter = 7, msMaxIter = 50, minScale = 0.001,     tolerance = 1e-05, niterEM = 25, pnlsTol = 0.001, msTol = 1e-06,     msScale = lmeScale, returnObject = FALSE, msVerbose = FALSE,     gradHess = TRUE, apVar = TRUE, .relStep = (.Machine$double.eps)^(1/3),     nlmStepMax = 100, minAbsParApVar = 0.05, opt = c(""nlminb"",         ""nlm""), natural = TRUE) ","nlme","recommended","2.5.0"
"nlmeStruct","closure","function","TRUE","FALSE","(reStruct, corStruct = NULL, varStruct = NULL) ","nlme","recommended","2.5.0"
"nlsList","closure","function","TRUE","FALSE","(model, data, start, control, level, subset, na.action = na.fail,     pool = TRUE) ","nlme","recommended","2.5.0"
"nlsList.formula","closure","function","TRUE","FALSE","(model, data, start = NULL, control, level, subset,     na.action = na.fail, pool = TRUE) ","nlme","recommended","2.5.0"
"nmGroupedData","closure","function","TRUE","FALSE","(formula, data = sys.parent(1), order.groups = TRUE,     FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL,     labels = NULL, units = NULL) ","nlme","recommended","2.5.0"
"pdBlocked","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent()),     pdClass = ""pdSymm"") ","nlme","recommended","2.5.0"
"pdCompSymm","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","2.5.0"
"pdConstruct","closure","function","TRUE","FALSE","(object, value, form, nam, data, ...) ","nlme","recommended","2.5.0"
"pdDiag","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","2.5.0"
"pdFactor","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"pdIdent","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","2.5.0"
"pdLogChol","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.parent()) ","nlme","recommended","2.5.0"
"pdMat","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent()),     pdClass = ""pdSymm"") ","nlme","recommended","2.5.0"
"pdMatrix","closure","function","TRUE","FALSE","(object, factor = FALSE) ","nlme","recommended","2.5.0"
"pdNatural","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ","nlme","recommended","2.5.0"
"pdSymm","closure","function","TRUE","FALSE","(value = numeric(0), form = NULL, nam = NULL, data = parent.frame()) ","nlme","recommended","2.5.0"
"phenoModel","closure","function","TRUE","FALSE","(Subject, time, dose, lCl, lV) ","nlme","recommended","2.5.0"
"plot.lme","closure","function","TRUE","FALSE","(x, form = resid(., type = ""pearson"") ~ fitted(.), abline,     id = NULL, idLabels = NULL, idResType = c(""pearson"", ""normalized""),     grid, ...) ","nlme","recommended","2.5.0"
"pooledSD","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"quinModel","closure","function","TRUE","FALSE","(Subject, time, conc, dose, interval, lV, lKa, lCl) ","nlme","recommended","2.5.0"
"random.effects","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"ranef","closure","function","TRUE","FALSE","(object, ...) ","nlme","recommended","2.5.0"
"reStruct","closure","function","TRUE","FALSE","(object, pdClass = ""pdLogChol"", REML = FALSE, data = sys.frame(sys.parent())) ","nlme","recommended","2.5.0"
"recalc","closure","function","TRUE","FALSE","(object, conLin, ...) ","nlme","recommended","2.5.0"
"simulate.lme","closure","function","TRUE","FALSE","(object, nsim = 1, seed = as.integer(runif(1, 0, .Machine$integer.max)),     m2, method = c(""REML"", ""ML""), niterEM = c(40, 200), useGen = FALSE,     ...) ","nlme","recommended","2.5.0"
"splitFormula","closure","function","TRUE","FALSE","(form, sep = ""/"") ","nlme","recommended","2.5.0"
"varComb","closure","function","TRUE","FALSE","(...) ","nlme","recommended","2.5.0"
"varConstPower","closure","function","TRUE","FALSE","(const = numeric(0), power = numeric(0), form = ~fitted(.),     fixed = NULL) ","nlme","recommended","2.5.0"
"varExp","closure","function","TRUE","FALSE","(value = numeric(0), form = ~fitted(.), fixed = NULL) ","nlme","recommended","2.5.0"
"varFixed","closure","function","TRUE","FALSE","(value = ~1) ","nlme","recommended","2.5.0"
"varFunc","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"varIdent","closure","function","TRUE","FALSE","(value = numeric(0), form = ~1, fixed = NULL) ","nlme","recommended","2.5.0"
"varPower","closure","function","TRUE","FALSE","(value = numeric(0), form = ~fitted(.), fixed = NULL) ","nlme","recommended","2.5.0"
"varWeights","closure","function","TRUE","FALSE","(object) ","nlme","recommended","2.5.0"
"class.ind","closure","function","TRUE","FALSE","(cl) ","nnet","recommended","2.5.0"
"multinom","closure","function","TRUE","FALSE","(formula, data, weights, subset, na.action, contrasts = NULL,     Hess = FALSE, summ = 0, censored = FALSE, model = FALSE,     ...) ","nnet","recommended","2.5.0"
"nnet","closure","function","TRUE","FALSE","(x, ...) ","nnet","recommended","2.5.0"
"nnet.default","closure","function","TRUE","FALSE","(x, y, weights, size, Wts, mask = rep(TRUE, length(wts)),     linout = FALSE, entropy = FALSE, softmax = FALSE, censored = FALSE,     skip = FALSE, rang = 0.7, decay = 0, maxit = 100, Hess = FALSE,     trace = TRUE, MaxNWts = 1000, abstol = 1e-04, reltol = 1e-08,     ...) ","nnet","recommended","2.5.0"
"nnet.formula","closure","function","TRUE","FALSE","(formula, data, weights, ..., subset, na.action, contrasts = NULL) ","nnet","recommended","2.5.0"
"nnetHess","closure","function","TRUE","FALSE","(net, x, y, weights) ","nnet","recommended","2.5.0"
"which.is.max","closure","function","TRUE","FALSE","(x) ","nnet","recommended","2.5.0"
"rc.getOption","closure","function","TRUE","FALSE","(name) ","rcompgen","recommended","2.5.0"
"rc.options","closure","function","TRUE","FALSE","(...) ","rcompgen","recommended","2.5.0"
"rc.settings","closure","function","TRUE","FALSE","(ops, ns, args, func, ipck, S3, data, help, argdb, files) ","rcompgen","recommended","2.5.0"
"rc.status","closure","function","TRUE","FALSE","() ","rcompgen","recommended","2.5.0"
"car.test.frame","list","data.frame","FALSE","FALSE","NA","rpart","recommended","2.5.0"
"cu.summary","list","data.frame","FALSE","FALSE","NA","rpart","recommended","2.5.0"
"kyphosis","list","data.frame","FALSE","FALSE","NA","rpart","recommended","2.5.0"
"meanvar","closure","function","TRUE","FALSE","(tree, ...) ","rpart","recommended","2.5.0"
"na.rpart","closure","function","TRUE","FALSE","(x) ","rpart","recommended","2.5.0"
"path.rpart","closure","function","TRUE","FALSE","(tree, nodes, pretty = 0, print.it = TRUE) ","rpart","recommended","2.5.0"
"plotcp","closure","function","TRUE","FALSE","(x, minline = TRUE, lty = 3, col = 1, upper = c(""size"",     ""splits"", ""none""), ...) ","rpart","recommended","2.5.0"
"post","closure","function","TRUE","FALSE","(tree, ...) ","rpart","recommended","2.5.0"
"printcp","closure","function","TRUE","FALSE","(x, digits = getOption(""digits"") - 2) ","rpart","recommended","2.5.0"
"prune","closure","function","TRUE","FALSE","(tree, ...) ","rpart","recommended","2.5.0"
"prune.rpart","closure","function","TRUE","FALSE","(tree, cp, ...) ","rpart","recommended","2.5.0"
"rpart","closure","function","TRUE","FALSE","(formula, data, weights, subset, na.action = na.rpart,     method, model = FALSE, x = FALSE, y = TRUE, parms, control,     cost, ...) ","rpart","recommended","2.5.0"
"rpart.control","closure","function","TRUE","FALSE","(minsplit = 20, minbucket = round(minsplit/3), cp = 0.01,     maxcompete = 4, maxsurrogate = 5, usesurrogate = 2, xval = 10,     surrogatestyle = 0, maxdepth = 30, ...) ","rpart","recommended","2.5.0"
"rpconvert","closure","function","TRUE","FALSE","(x) ","rpart","recommended","2.5.0"
"rsq.rpart","closure","function","TRUE","FALSE","(x) ","rpart","recommended","2.5.0"
"snip.rpart","closure","function","TRUE","FALSE","(x, toss) ","rpart","recommended","2.5.0"
"solder","list","data.frame","FALSE","FALSE","NA","rpart","recommended","2.5.0"
"xpred.rpart","closure","function","TRUE","FALSE","(fit, xval = 10, cp) ","rpart","recommended","2.5.0"
"Kaver","closure","function","TRUE","FALSE","(fs, nsim, ...) ","spatial","recommended","2.5.0"
"Kenvl","closure","function","TRUE","FALSE","(fs, nsim, ...) ","spatial","recommended","2.5.0"
"Kfn","closure","function","TRUE","FALSE","(pp, fs, k = 100) ","spatial","recommended","2.5.0"
"Psim","closure","function","TRUE","FALSE","(n) ","spatial","recommended","2.5.0"
"SSI","closure","function","TRUE","FALSE","(n, r) ","spatial","recommended","2.5.0"
"Strauss","closure","function","TRUE","FALSE","(n, c = 0, r) ","spatial","recommended","2.5.0"
"anova.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","2.5.0"
"anovalist.trls","closure","function","TRUE","FALSE","(object, ...) ","spatial","recommended","2.5.0"
"correlogram","closure","function","TRUE","FALSE","(krig, nint, plotit = TRUE, ...) ","spatial","recommended","2.5.0"
"expcov","closure","function","TRUE","FALSE","(r, d, alpha = 0, se = 1) ","spatial","recommended","2.5.0"
"gaucov","closure","function","TRUE","FALSE","(r, d, alpha = 0, se = 1) ","spatial","recommended","2.5.0"
"plot.trls","closure","function","TRUE","FALSE","(x, border = ""red"", col = NA, pch = 4, cex = 0.6, add = FALSE,     div = 8, ...) ","spatial","recommended","2.5.0"
"ppgetregion","closure","function","TRUE","FALSE","() ","spatial","recommended","2.5.0"
"ppinit","closure","function","TRUE","FALSE","(file) ","spatial","recommended","2.5.0"
"pplik","closure","function","TRUE","FALSE","(pp, R, ng = 50, trace = FALSE) ","spatial","recommended","2.5.0"
"ppregion","closure","function","TRUE","FALSE","(xl = 0, xu = 1, yl = 0, yu = 1) ","spatial","recommended","2.5.0"
"predict.trls","closure","function","TRUE","FALSE","(object, x, y, ...) ","spatial","recommended","2.5.0"
"prmat","closure","function","TRUE","FALSE","(obj, xl, xu, yl, yu, n) ","spatial","recommended","2.5.0"
"semat","closure","function","TRUE","FALSE","(obj, xl, xu, yl, yu, n, se) ","spatial","recommended","2.5.0"
"sphercov","closure","function","TRUE","FALSE","(r, d, alpha = 0, se = 1, D = 2) ","spatial","recommended","2.5.0"
"surf.gls","closure","function","TRUE","FALSE","(np, covmod, x, y, z, nx = 1000, ...) ","spatial","recommended","2.5.0"
"surf.ls","closure","function","TRUE","FALSE","(np, x, y, z) ","spatial","recommended","2.5.0"
"trls.influence","closure","function","TRUE","FALSE","(object) ","spatial","recommended","2.5.0"
"trmat","closure","function","TRUE","FALSE","(obj, xl, xu, yl, yu, n) ","spatial","recommended","2.5.0"
"variogram","closure","function","TRUE","FALSE","(krig, nint, plotit = TRUE, ...) ","spatial","recommended","2.5.0"
"as.polySpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","2.5.0"
"asVector","closure","function","TRUE","FALSE","(object) ","splines","base","2.5.0"
"backSpline","closure","function","TRUE","FALSE","(object) ","splines","base","2.5.0"
"bs","closure","function","TRUE","FALSE","(x, df = NULL, knots = NULL, degree = 3, intercept = FALSE,     Boundary.knots = range(x)) ","splines","base","2.5.0"
"interpSpline","closure","function","TRUE","FALSE","(obj1, obj2, bSpline = FALSE, period = NULL, na.action = na.fail) ","splines","base","2.5.0"
"ns","closure","function","TRUE","FALSE","(x, df = NULL, knots = NULL, intercept = FALSE, Boundary.knots = range(x)) ","splines","base","2.5.0"
"periodicSpline","closure","function","TRUE","FALSE","(obj1, obj2, knots, period = 2 * pi, ord = 4) ","splines","base","2.5.0"
"polySpline","closure","function","TRUE","FALSE","(object, ...) ","splines","base","2.5.0"
"spline.des","closure","function","TRUE","FALSE","(knots, x, ord = 4, derivs = integer(length(x)), outer.ok = FALSE) ","splines","base","2.5.0"
"splineDesign","closure","function","TRUE","FALSE","(knots, x, ord = 4, derivs = integer(nx), outer.ok = FALSE) ","splines","base","2.5.0"
"splineKnots","closure","function","TRUE","FALSE","(object) ","splines","base","2.5.0"
"splineOrder","closure","function","TRUE","FALSE","(object) ","splines","base","2.5.0"
"xyVector","closure","function","TRUE","FALSE","(x, y) ","splines","base","2.5.0"
".MFclass","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
".checkMFClasses","closure","function","TRUE","FALSE","(cl, m, ordNotOK = FALSE) ","stats","base","2.5.0"
".getXlevels","closure","function","TRUE","FALSE","(Terms, m) ","stats","base","2.5.0"
"AIC","closure","function","TRUE","FALSE","(object, ..., k = 2) ","stats","base","2.5.0"
"ARMAacf","closure","function","TRUE","FALSE","(ar = numeric(0), ma = numeric(0), lag.max = r, pacf = FALSE) ","stats","base","2.5.0"
"ARMAtoMA","closure","function","TRUE","FALSE","(ar = numeric(0), ma = numeric(0), lag.max) ","stats","base","2.5.0"
"Box.test","closure","function","TRUE","FALSE","(x, lag = 1, type = c(""Box-Pierce"", ""Ljung-Box"")) ","stats","base","2.5.0"
"C","closure","function","TRUE","FALSE","(object, contr, how.many, ...) ","stats","base","2.5.0"
"D","closure","function","TRUE","FALSE","(expr, name) ","stats","base","2.5.0"
"Gamma","closure","function","TRUE","FALSE","(link = ""inverse"") ","stats","base","2.5.0"
"HoltWinters","closure","function","TRUE","FALSE","(x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c(""additive"",     ""multiplicative""), start.periods = 3, l.start = NULL, b.start = NULL,     s.start = NULL, optim.start = c(alpha = 0.3, beta = 0.1,         gamma = 0.1), optim.control = list()) ","stats","base","2.5.0"
"IQR","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","stats","base","2.5.0"
"KalmanForecast","closure","function","TRUE","FALSE","(n.ahead = 10, mod, fast = TRUE) ","stats","base","2.5.0"
"KalmanLike","closure","function","TRUE","FALSE","(y, mod, nit = 0, fast = TRUE) ","stats","base","2.5.0"
"KalmanRun","closure","function","TRUE","FALSE","(y, mod, nit = 0, fast = TRUE) ","stats","base","2.5.0"
"KalmanSmooth","closure","function","TRUE","FALSE","(y, mod, nit = 0) ","stats","base","2.5.0"
"NLSstAsymptotic","closure","function","TRUE","FALSE","(xy) ","stats","base","2.5.0"
"NLSstClosestX","closure","function","TRUE","FALSE","(xy, yval) ","stats","base","2.5.0"
"NLSstLfAsymptote","closure","function","TRUE","FALSE","(xy) ","stats","base","2.5.0"
"NLSstRtAsymptote","closure","function","TRUE","FALSE","(xy) ","stats","base","2.5.0"
"PP.test","closure","function","TRUE","FALSE","(x, lshort = TRUE) ","stats","base","2.5.0"
"SSD","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"SSasymp","closure","selfStart","TRUE","FALSE","(input, Asym, R0, lrc) ","stats","base","2.5.0"
"SSasympOff","closure","selfStart","TRUE","FALSE","(input, Asym, lrc, c0) ","stats","base","2.5.0"
"SSasympOrig","closure","selfStart","TRUE","FALSE","(input, Asym, lrc) ","stats","base","2.5.0"
"SSbiexp","closure","selfStart","TRUE","FALSE","(input, A1, lrc1, A2, lrc2) ","stats","base","2.5.0"
"SSfol","closure","selfStart","TRUE","FALSE","(Dose, input, lKe, lKa, lCl) ","stats","base","2.5.0"
"SSfpl","closure","selfStart","TRUE","FALSE","(input, A, B, xmid, scal) ","stats","base","2.5.0"
"SSgompertz","closure","selfStart","TRUE","FALSE","(x, Asym, b2, b3) ","stats","base","2.5.0"
"SSlogis","closure","selfStart","TRUE","FALSE","(input, Asym, xmid, scal) ","stats","base","2.5.0"
"SSmicmen","closure","selfStart","TRUE","FALSE","(input, Vm, K) ","stats","base","2.5.0"
"SSweibull","closure","selfStart","TRUE","FALSE","(x, Asym, Drop, lrc, pwr) ","stats","base","2.5.0"
"StructTS","closure","function","TRUE","FALSE","(x, type = c(""level"", ""trend"", ""BSM""), init = NULL,     fixed = NULL, optim.control = NULL) ","stats","base","2.5.0"
"TukeyHSD","closure","function","TRUE","FALSE","(x, which, ordered = FALSE, conf.level = 0.95, ...) ","stats","base","2.5.0"
"TukeyHSD.aov","closure","function","TRUE","FALSE","(x, which = seq_along(tabs), ordered = FALSE, conf.level = 0.95,     ...) ","stats","base","2.5.0"
"acf","closure","function","TRUE","FALSE","(x, lag.max = NULL, type = c(""correlation"", ""covariance"",     ""partial""), plot = TRUE, na.action = na.fail, demean = TRUE,     ...) ","stats","base","2.5.0"
"acf2AR","closure","function","TRUE","FALSE","(acf) ","stats","base","2.5.0"
"add.scope","closure","function","TRUE","FALSE","(terms1, terms2) ","stats","base","2.5.0"
"add1","closure","function","TRUE","FALSE","(object, scope, ...) ","stats","base","2.5.0"
"addmargins","closure","function","TRUE","FALSE","(A, margin = 1:length(dim(A)), FUN = sum, quiet = FALSE) ","stats","base","2.5.0"
"aggregate","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"aggregate.data.frame","closure","function","TRUE","FALSE","(x, by, FUN, ...) ","stats","base","2.5.0"
"aggregate.default","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"aggregate.ts","closure","function","TRUE","FALSE","(x, nfrequency = 1, FUN = sum, ndeltat = 1, ts.eps = getOption(""ts.eps""),     ...) ","stats","base","2.5.0"
"alias","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"anova","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"anova.glm","closure","function","TRUE","FALSE","(object, ..., dispersion = NULL, test = NULL) ","stats","base","2.5.0"
"anova.glmlist","closure","function","TRUE","FALSE","(object, ..., dispersion = NULL, test = NULL) ","stats","base","2.5.0"
"anova.lm","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"anova.lmlist","closure","function","TRUE","FALSE","(object, ..., scale = 0, test = ""F"") ","stats","base","2.5.0"
"anova.mlm","closure","function","TRUE","FALSE","(object, ..., test = c(""Pillai"", ""Wilks"", ""Hotelling-Lawley"",     ""Roy"", ""Spherical""), Sigma = diag(nrow = p), T = Thin.row(proj(M) -     proj(X)), M = diag(nrow = p), X = ~0, idata = data.frame(index = seq_len(p))) ","stats","base","2.5.0"
"anovalist.lm","closure","function","TRUE","FALSE","(object, ..., test = NULL) ","stats","base","2.5.0"
"ansari.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"aov","closure","function","TRUE","FALSE","(formula, data = NULL, projections = FALSE, qr = TRUE,     contrasts = NULL, ...) ","stats","base","2.5.0"
"approx","closure","function","TRUE","FALSE","(x, y = NULL, xout, method = ""linear"", n = 50, yleft,     yright, rule = 1, f = 0, ties = mean) ","stats","base","2.5.0"
"approxfun","closure","function","TRUE","FALSE","(x, y = NULL, method = ""linear"", yleft, yright, rule = 1,     f = 0, ties = mean) ","stats","base","2.5.0"
"ar","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, method = c(""yule-walker"",     ""burg"", ""ols"", ""mle"", ""yw""), na.action = na.fail, series = deparse(substitute(x)),     ...) ","stats","base","2.5.0"
"ar.burg","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"ar.mle","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, series = NULL, ...) ","stats","base","2.5.0"
"ar.ols","closure","function","TRUE","FALSE","(x, aic = TRUE, order.max = NULL, na.action = na.fail,     demean = TRUE, intercept = demean, series = NULL, ...) ","stats","base","2.5.0"
"ar.yw","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"arima","closure","function","TRUE","FALSE","(x, order = c(0, 0, 0), seasonal = list(order = c(0,     0, 0), period = NA), xreg = NULL, include.mean = TRUE, transform.pars = TRUE,     fixed = NULL, init = NULL, method = c(""CSS-ML"", ""ML"", ""CSS""),     n.cond, optim.control = list(), kappa = 1e+06) ","stats","base","2.5.0"
"arima.sim","closure","function","TRUE","FALSE","(model, n, rand.gen = rnorm, innov = rand.gen(n, ...),     n.start = NA, start.innov = rand.gen(n.start, ...), ...) ","stats","base","2.5.0"
"arima0","closure","function","TRUE","FALSE","(x, order = c(0, 0, 0), seasonal = list(order = c(0,     0, 0), period = NA), xreg = NULL, include.mean = TRUE, delta = 0.01,     transform.pars = TRUE, fixed = NULL, init = NULL, method = c(""ML"",         ""CSS""), n.cond, optim.control = list()) ","stats","base","2.5.0"
"arima0.diag","closure","function","TRUE","FALSE","(...) ","stats","base","2.5.0"
"as.dendrogram","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"as.dist","closure","function","TRUE","FALSE","(m, diag = FALSE, upper = FALSE) ","stats","base","2.5.0"
"as.formula","closure","function","TRUE","FALSE","(object, env = parent.frame()) ","stats","base","2.5.0"
"as.hclust","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"as.stepfun","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"as.ts","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"asOneSidedFormula","closure","function","TRUE","FALSE","(object) ","stats","base","2.5.0"
"ave","closure","function","TRUE","FALSE","(x, ..., FUN = mean) ","stats","base","2.5.0"
"bandwidth.kernel","closure","function","TRUE","FALSE","(k) ","stats","base","2.5.0"
"bartlett.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"binom.test","closure","function","TRUE","FALSE","(x, n, p = 0.5, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95) ","stats","base","2.5.0"
"binomial","closure","function","TRUE","FALSE","(link = ""logit"") ","stats","base","2.5.0"
"biplot","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"bw.SJ","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax, method = c(""ste"",     ""dpi"")) ","stats","base","2.5.0"
"bw.bcv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","stats","base","2.5.0"
"bw.nrd","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"bw.nrd0","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"bw.ucv","closure","function","TRUE","FALSE","(x, nb = 1000, lower = 0.1 * hmax, upper = hmax) ","stats","base","2.5.0"
"cancor","closure","function","TRUE","FALSE","(x, y, xcenter = TRUE, ycenter = TRUE) ","stats","base","2.5.0"
"case.names","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"ccf","closure","function","TRUE","FALSE","(x, y, lag.max = NULL, type = c(""correlation"", ""covariance""),     plot = TRUE, na.action = na.fail, ...) ","stats","base","2.5.0"
"chisq.test","closure","function","TRUE","FALSE","(x, y = NULL, correct = TRUE, p = rep(1/length(x), length(x)),     rescale.p = FALSE, simulate.p.value = FALSE, B = 2000) ","stats","base","2.5.0"
"clearNames","closure","function","TRUE","FALSE","(object) ","stats","base","2.5.0"
"cmdscale","closure","function","TRUE","FALSE","(d, k = 2, eig = FALSE, add = FALSE, x.ret = FALSE) ","stats","base","2.5.0"
"coef","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"coefficients","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"complete.cases","closure","function","TRUE","FALSE","(...) ","stats","base","2.5.0"
"confint","closure","function","TRUE","FALSE","(object, parm, level = 0.95, ...) ","stats","base","2.5.0"
"confint.default","closure","function","TRUE","FALSE","(object, parm, level = 0.95, ...) ","stats","base","2.5.0"
"constrOptim","closure","function","TRUE","FALSE","(theta, f, grad, ui, ci, mu = 1e-04, control = list(),     method = if (is.null(grad)) ""Nelder-Mead"" else ""BFGS"", outer.iterations = 100,     outer.eps = 1e-05, ...) ","stats","base","2.5.0"
"contr.SAS","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","stats","base","2.5.0"
"contr.helmert","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","stats","base","2.5.0"
"contr.poly","closure","function","TRUE","FALSE","(n, scores = 1:n, contrasts = TRUE) ","stats","base","2.5.0"
"contr.sum","closure","function","TRUE","FALSE","(n, contrasts = TRUE) ","stats","base","2.5.0"
"contr.treatment","closure","function","TRUE","FALSE","(n, base = 1, contrasts = TRUE) ","stats","base","2.5.0"
"contrasts","closure","function","TRUE","FALSE","(x, contrasts = TRUE) ","stats","base","2.5.0"
"contrasts<-","closure","function","TRUE","FALSE","(x, how.many, value) ","stats","base","2.5.0"
"convolve","closure","function","TRUE","FALSE","(x, y, conj = TRUE, type = c(""circular"", ""open"", ""filter"")) ","stats","base","2.5.0"
"cooks.distance","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"cophenetic","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"cor","closure","function","TRUE","FALSE","(x, y = NULL, use = ""all.obs"", method = c(""pearson"",     ""kendall"", ""spearman"")) ","stats","base","2.5.0"
"cor.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"cov","closure","function","TRUE","FALSE","(x, y = NULL, use = ""all.obs"", method = c(""pearson"",     ""kendall"", ""spearman"")) ","stats","base","2.5.0"
"cov.wt","closure","function","TRUE","FALSE","(x, wt = rep(1/nrow(x), nrow(x)), cor = FALSE, center = TRUE,     method = c(""unbiased"", ""ML"")) ","stats","base","2.5.0"
"cov2cor","closure","function","TRUE","FALSE","(V) ","stats","base","2.5.0"
"covratio","closure","function","TRUE","FALSE","(model, infl = lm.influence(model, do.coef = FALSE),     res = weighted.residuals(model)) ","stats","base","2.5.0"
"cpgram","closure","function","TRUE","FALSE","(ts, taper = 0.1, main = paste(""Series: "", deparse(substitute(ts))),     ci.col = ""blue"") ","stats","base","2.5.0"
"cutree","closure","function","TRUE","FALSE","(tree, k = NULL, h = NULL) ","stats","base","2.5.0"
"cycle","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"dbeta","closure","function","TRUE","FALSE","(x, shape1, shape2, ncp = 0, log = FALSE) ","stats","base","2.5.0"
"dbinom","closure","function","TRUE","FALSE","(x, size, prob, log = FALSE) ","stats","base","2.5.0"
"dcauchy","closure","function","TRUE","FALSE","(x, location = 0, scale = 1, log = FALSE) ","stats","base","2.5.0"
"dchisq","closure","function","TRUE","FALSE","(x, df, ncp = 0, log = FALSE) ","stats","base","2.5.0"
"decompose","closure","function","TRUE","FALSE","(x, type = c(""additive"", ""multiplicative""), filter = NULL) ","stats","base","2.5.0"
"delete.response","closure","function","TRUE","FALSE","(termobj) ","stats","base","2.5.0"
"deltat","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"dendrapply","closure","function","TRUE","FALSE","(X, FUN, ...) ","stats","base","2.5.0"
"density","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"density.default","closure","function","TRUE","FALSE","(x, bw = ""nrd0"", adjust = 1, kernel = c(""gaussian"",     ""epanechnikov"", ""rectangular"", ""triangular"", ""biweight"",     ""cosine"", ""optcosine""), weights = NULL, window = kernel,     width, give.Rkern = FALSE, n = 512, from, to, cut = 3, na.rm = FALSE,     ...) ","stats","base","2.5.0"
"deriv","closure","function","TRUE","FALSE","(expr, ...) ","stats","base","2.5.0"
"deriv.default","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = FALSE, ...) ","stats","base","2.5.0"
"deriv.formula","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = FALSE, ...) ","stats","base","2.5.0"
"deriv3","closure","function","TRUE","FALSE","(expr, ...) ","stats","base","2.5.0"
"deriv3.default","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = TRUE, ...) ","stats","base","2.5.0"
"deriv3.formula","closure","function","TRUE","FALSE","(expr, namevec, function.arg = NULL, tag = "".expr"",     hessian = TRUE, ...) ","stats","base","2.5.0"
"deviance","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"dexp","closure","function","TRUE","FALSE","(x, rate = 1, log = FALSE) ","stats","base","2.5.0"
"df","closure","function","TRUE","FALSE","(x, df1, df2, ncp, log = FALSE) ","stats","base","2.5.0"
"df.kernel","closure","function","TRUE","FALSE","(k) ","stats","base","2.5.0"
"df.residual","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"dfbeta","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"dfbetas","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"dffits","closure","function","TRUE","FALSE","(model, infl = lm.influence(model, do.coef = FALSE),     res = weighted.residuals(model)) ","stats","base","2.5.0"
"dgamma","closure","function","TRUE","FALSE","(x, shape, rate = 1, scale = 1/rate, log = FALSE) ","stats","base","2.5.0"
"dgeom","closure","function","TRUE","FALSE","(x, prob, log = FALSE) ","stats","base","2.5.0"
"dhyper","closure","function","TRUE","FALSE","(x, m, n, k, log = FALSE) ","stats","base","2.5.0"
"diff.ts","closure","function","TRUE","FALSE","(x, lag = 1, differences = 1, ...) ","stats","base","2.5.0"
"diffinv","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"dist","closure","function","TRUE","FALSE","(x, method = ""euclidean"", diag = FALSE, upper = FALSE,     p = 2) ","stats","base","2.5.0"
"dlnorm","closure","function","TRUE","FALSE","(x, meanlog = 0, sdlog = 1, log = FALSE) ","stats","base","2.5.0"
"dlogis","closure","function","TRUE","FALSE","(x, location = 0, scale = 1, log = FALSE) ","stats","base","2.5.0"
"dmultinom","closure","function","TRUE","FALSE","(x, size = NULL, prob, log = FALSE) ","stats","base","2.5.0"
"dnbinom","closure","function","TRUE","FALSE","(x, size, prob, mu, log = FALSE) ","stats","base","2.5.0"
"dnorm","closure","function","TRUE","FALSE","(x, mean = 0, sd = 1, log = FALSE) ","stats","base","2.5.0"
"dpois","closure","function","TRUE","FALSE","(x, lambda, log = FALSE) ","stats","base","2.5.0"
"drop.scope","closure","function","TRUE","FALSE","(terms1, terms2) ","stats","base","2.5.0"
"drop.terms","closure","function","TRUE","FALSE","(termobj, dropx = NULL, keep.response = FALSE) ","stats","base","2.5.0"
"drop1","closure","function","TRUE","FALSE","(object, scope, ...) ","stats","base","2.5.0"
"dsignrank","closure","function","TRUE","FALSE","(x, n, log = FALSE) ","stats","base","2.5.0"
"dt","closure","function","TRUE","FALSE","(x, df, ncp, log = FALSE) ","stats","base","2.5.0"
"dummy.coef","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"dunif","closure","function","TRUE","FALSE","(x, min = 0, max = 1, log = FALSE) ","stats","base","2.5.0"
"dweibull","closure","function","TRUE","FALSE","(x, shape, scale = 1, log = FALSE) ","stats","base","2.5.0"
"dwilcox","closure","function","TRUE","FALSE","(x, m, n, log = FALSE) ","stats","base","2.5.0"
"ecdf","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"eff.aovlist","closure","function","TRUE","FALSE","(aovlist) ","stats","base","2.5.0"
"effects","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"embed","closure","function","TRUE","FALSE","(x, dimension = 1) ","stats","base","2.5.0"
"end","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"estVar","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"expand.model.frame","closure","function","TRUE","FALSE","(model, extras, envir = environment(formula(model)),     na.expand = FALSE) ","stats","base","2.5.0"
"extractAIC","closure","function","TRUE","FALSE","(fit, scale, k = 2, ...) ","stats","base","2.5.0"
"factanal","closure","function","TRUE","FALSE","(x, factors, data = NULL, covmat = NULL, n.obs = NA,     subset, na.action, start = NULL, scores = c(""none"", ""regression"",         ""Bartlett""), rotation = ""varimax"", control = NULL, ...) ","stats","base","2.5.0"
"factor.scope","closure","function","TRUE","FALSE","(factor, scope) ","stats","base","2.5.0"
"family","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"fft","closure","function","TRUE","FALSE","(z, inverse = FALSE) ","stats","base","2.5.0"
"filter","closure","function","TRUE","FALSE","(x, filter, method = c(""convolution"", ""recursive""),     sides = 2, circular = FALSE, init = NULL) ","stats","base","2.5.0"
"fisher.test","closure","function","TRUE","FALSE","(x, y = NULL, workspace = 2e+05, hybrid = FALSE, control = list(),     or = 1, alternative = ""two.sided"", conf.int = TRUE, conf.level = 0.95,     simulate.p.value = FALSE, B = 2000) ","stats","base","2.5.0"
"fitted","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"fitted.values","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"fivenum","closure","function","TRUE","FALSE","(x, na.rm = TRUE) ","stats","base","2.5.0"
"fligner.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"formula","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"frequency","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"friedman.test","closure","function","TRUE","FALSE","(y, ...) ","stats","base","2.5.0"
"ftable","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"gaussian","closure","function","TRUE","FALSE","(link = ""identity"") ","stats","base","2.5.0"
"getInitial","closure","function","TRUE","FALSE","(object, data, ...) ","stats","base","2.5.0"
"get_all_vars","closure","function","TRUE","FALSE","(formula, data = NULL, ...) ","stats","base","2.5.0"
"glm","closure","function","TRUE","FALSE","(formula, family = gaussian, data, weights, subset,     na.action, start = NULL, etastart, mustart, offset, control = glm.control(...),     model = TRUE, method = ""glm.fit"", x = FALSE, y = TRUE, contrasts = NULL,     ...) ","stats","base","2.5.0"
"glm.control","closure","function","TRUE","FALSE","(epsilon = 1e-08, maxit = 25, trace = FALSE) ","stats","base","2.5.0"
"glm.fit","closure","function","TRUE","FALSE","(x, y, weights = rep(1, nobs), start = NULL, etastart = NULL,     mustart = NULL, offset = rep(0, nobs), family = gaussian(),     control = glm.control(), intercept = TRUE) ","stats","base","2.5.0"
"glm.fit.null","closure","function","TRUE","FALSE","(x, y, weights, start = NULL, etastart = NULL, mustart = NULL,     offset, family = gaussian(), control = glm.control(), intercept = FALSE) ","stats","base","2.5.0"
"hasTsp","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"hat","closure","function","TRUE","FALSE","(x, intercept = TRUE) ","stats","base","2.5.0"
"hatvalues","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"hatvalues.lm","closure","function","TRUE","FALSE","(model, infl = lm.influence(model, do.coef = FALSE),     ...) ","stats","base","2.5.0"
"hclust","closure","function","TRUE","FALSE","(d, method = ""complete"", members = NULL) ","stats","base","2.5.0"
"heatmap","closure","function","TRUE","FALSE","(x, Rowv = NULL, Colv = if (symm) ""Rowv"" else NULL,     distfun = dist, hclustfun = hclust, reorderfun = function(d,         w) reorder(d, w), add.expr, symm = FALSE, revC = identical(Colv,         ""Rowv""), scale = c(""row"", ""column"", ""none""), na.rm = TRUE,     margins = c(5, 5), ColSideColors, RowSideColors, cexRow = 0.2 +         1/log10(nr), cexCol = 0.2 + 1/log10(nc), labRow = NULL,     labCol = NULL, main = NULL, xlab = NULL, ylab = NULL, keep.dendro = FALSE,     verbose = getOption(""verbose""), ...) ","stats","base","2.5.0"
"influence","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"influence.measures","closure","function","TRUE","FALSE","(model) ","stats","base","2.5.0"
"integrate","closure","function","TRUE","FALSE","(f, lower, upper, subdivisions = 100, rel.tol = .Machine$double.eps^0.25,     abs.tol = rel.tol, stop.on.error = TRUE, keep.xy = FALSE,     aux = NULL, ...) ","stats","base","2.5.0"
"interaction.plot","closure","function","TRUE","FALSE","(x.factor, trace.factor, response, fun = mean, type = c(""l"",     ""p"", ""b""), legend = TRUE, trace.label = deparse(substitute(trace.factor)),     fixed = FALSE, xlab = deparse(substitute(x.factor)), ylab = ylabel,     ylim = range(cells, na.rm = TRUE), lty = nc:1, col = 1, pch = c(1:9,         0, letters), xpd = NULL, leg.bg = par(""bg""), leg.bty = ""n"",     xtick = FALSE, xaxt = par(""xaxt""), axes = TRUE, ...) ","stats","base","2.5.0"
"inverse.gaussian","closure","function","TRUE","FALSE","(link = ""1/mu^2"") ","stats","base","2.5.0"
"is.empty.model","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"is.leaf","closure","function","TRUE","FALSE","(object) ","stats","base","2.5.0"
"is.mts","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"is.stepfun","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"is.ts","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"is.tskernel","closure","function","TRUE","FALSE","(k) ","stats","base","2.5.0"
"isoreg","closure","function","TRUE","FALSE","(x, y = NULL) ","stats","base","2.5.0"
"kernapply","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"kernel","closure","function","TRUE","FALSE","(coef, m = length(coef) + 1, r, name = ""unknown"") ","stats","base","2.5.0"
"kmeans","closure","function","TRUE","FALSE","(x, centers, iter.max = 10, nstart = 1, algorithm = c(""Hartigan-Wong"",     ""Lloyd"", ""Forgy"", ""MacQueen"")) ","stats","base","2.5.0"
"knots","closure","function","TRUE","FALSE","(Fn, ...) ","stats","base","2.5.0"
"kruskal.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"ks.test","closure","function","TRUE","FALSE","(x, y, ..., alternative = c(""two.sided"", ""less"", ""greater""),     exact = NULL) ","stats","base","2.5.0"
"ksmooth","closure","function","TRUE","FALSE","(x, y, kernel = c(""box"", ""normal""), bandwidth = 0.5,     range.x = range(x), n.points = max(100, length(x)), x.points) ","stats","base","2.5.0"
"lag","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"lag.plot","closure","function","TRUE","FALSE","(x, lags = 1, layout = NULL, set.lags = 1:lags, main = NULL,     asp = 1, diag = TRUE, diag.col = ""gray"", type = ""p"", oma = NULL,     ask = NULL, do.lines = (n <= 150), labels = do.lines, ...) ","stats","base","2.5.0"
"line","closure","function","TRUE","FALSE","(x, y = NULL) ","stats","base","2.5.0"
"lines.ts","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"lm","closure","function","TRUE","FALSE","(formula, data, subset, weights, na.action, method = ""qr"",     model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE,     contrasts = NULL, offset, ...) ","stats","base","2.5.0"
"lm.fit","closure","function","TRUE","FALSE","(x, y, offset = NULL, method = ""qr"", tol = 1e-07, singular.ok = TRUE,     ...) ","stats","base","2.5.0"
"lm.fit.null","closure","function","TRUE","FALSE","(x, y, method = ""qr"", tol = 1e-07, ...) ","stats","base","2.5.0"
"lm.influence","closure","function","TRUE","FALSE","(model, do.coef = TRUE) ","stats","base","2.5.0"
"lm.wfit","closure","function","TRUE","FALSE","(x, y, w, offset = NULL, method = ""qr"", tol = 1e-07,     singular.ok = TRUE, ...) ","stats","base","2.5.0"
"lm.wfit.null","closure","function","TRUE","FALSE","(x, y, w, method = ""qr"", tol = 1e-07, ...) ","stats","base","2.5.0"
"loadings","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"loess","closure","function","TRUE","FALSE","(formula, data, weights, subset, na.action, model = FALSE,     span = 0.75, enp.target, degree = 2, parametric = FALSE,     drop.square = FALSE, normalize = TRUE, family = c(""gaussian"",         ""symmetric""), method = c(""loess"", ""model.frame""), control = loess.control(...),     ...) ","stats","base","2.5.0"
"loess.control","closure","function","TRUE","FALSE","(surface = c(""interpolate"", ""direct""), statistics = c(""approximate"",     ""exact""), trace.hat = c(""exact"", ""approximate""), cell = 0.2,     iterations = 4, ...) ","stats","base","2.5.0"
"loess.smooth","closure","function","TRUE","FALSE","(x, y, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), evaluation = 50, ...) ","stats","base","2.5.0"
"logLik","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"loglin","closure","function","TRUE","FALSE","(table, margin, start = rep(1, length(table)), fit = FALSE,     eps = 0.1, iter = 20, param = FALSE, print = TRUE) ","stats","base","2.5.0"
"lowess","closure","function","TRUE","FALSE","(x, y = NULL, f = 2/3, iter = 3, delta = 0.01 * diff(range(xy$x[o]))) ","stats","base","2.5.0"
"ls.diag","closure","function","TRUE","FALSE","(ls.out) ","stats","base","2.5.0"
"ls.print","closure","function","TRUE","FALSE","(ls.out, digits = 4, print.it = TRUE) ","stats","base","2.5.0"
"lsfit","closure","function","TRUE","FALSE","(x, y, wt = NULL, intercept = TRUE, tolerance = 1e-07,     yname = NULL) ","stats","base","2.5.0"
"mad","closure","function","TRUE","FALSE","(x, center = median(x), constant = 1.4826, na.rm = FALSE,     low = FALSE, high = FALSE) ","stats","base","2.5.0"
"mahalanobis","closure","function","TRUE","FALSE","(x, center, cov, inverted = FALSE, ...) ","stats","base","2.5.0"
"make.link","closure","function","TRUE","FALSE","(link) ","stats","base","2.5.0"
"makeARIMA","closure","function","TRUE","FALSE","(phi, theta, Delta, kappa = 1e+06) ","stats","base","2.5.0"
"makepredictcall","closure","function","TRUE","FALSE","(var, call) ","stats","base","2.5.0"
"manova","closure","function","TRUE","FALSE","(...) ","stats","base","2.5.0"
"mantelhaen.test","closure","function","TRUE","FALSE","(x, y = NULL, z = NULL, alternative = c(""two.sided"",     ""less"", ""greater""), correct = TRUE, exact = FALSE, conf.level = 0.95) ","stats","base","2.5.0"
"mauchley.test","closure","function","TRUE","FALSE","(...) ","stats","base","2.5.0"
"mauchly.test","closure","function","TRUE","FALSE","(object, Sigma = diag(nrow = p), T = Thin.row(proj(M) -     proj(X)), M = diag(nrow = p), X = ~0, idata = data.frame(index = seq_len(p)),     ...) ","stats","base","2.5.0"
"mcnemar.test","closure","function","TRUE","FALSE","(x, y = NULL, correct = TRUE) ","stats","base","2.5.0"
"median","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","stats","base","2.5.0"
"median.default","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","stats","base","2.5.0"
"medpolish","closure","function","TRUE","FALSE","(x, eps = 0.01, maxiter = 10, trace.iter = TRUE, na.rm = FALSE) ","stats","base","2.5.0"
"model.extract","closure","function","TRUE","FALSE","(frame, component) ","stats","base","2.5.0"
"model.frame","closure","function","TRUE","FALSE","(formula, ...) ","stats","base","2.5.0"
"model.frame.aovlist","closure","function","TRUE","FALSE","(formula, data = NULL, ...) ","stats","base","2.5.0"
"model.frame.default","closure","function","TRUE","FALSE","(formula, data = NULL, subset = NULL, na.action = na.fail,     drop.unused.levels = FALSE, xlev = NULL, ...) ","stats","base","2.5.0"
"model.frame.glm","closure","function","TRUE","FALSE","(formula, ...) ","stats","base","2.5.0"
"model.frame.lm","closure","function","TRUE","FALSE","(formula, ...) ","stats","base","2.5.0"
"model.matrix","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"model.matrix.default","closure","function","TRUE","FALSE","(object, data = environment(object), contrasts.arg = NULL,     xlev = NULL, ...) ","stats","base","2.5.0"
"model.matrix.lm","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"model.offset","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"model.response","closure","function","TRUE","FALSE","(data, type = ""any"") ","stats","base","2.5.0"
"model.tables","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"model.weights","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"monthplot","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"mood.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"mvfft","closure","function","TRUE","FALSE","(z, inverse = FALSE) ","stats","base","2.5.0"
"na.action","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"na.contiguous","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"na.exclude","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"na.fail","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"na.omit","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"na.pass","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"napredict","closure","function","TRUE","FALSE","(omit, x, ...) ","stats","base","2.5.0"
"naprint","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"naresid","closure","function","TRUE","FALSE","(omit, x, ...) ","stats","base","2.5.0"
"nextn","closure","function","TRUE","FALSE","(n, factors = c(2, 3, 5)) ","stats","base","2.5.0"
"nlm","closure","function","TRUE","FALSE","(f, p, hessian = FALSE, typsize = rep(1, length(p)),     fscale = 1, print.level = 0, ndigit = 12, gradtol = 1e-06,     stepmax = max(1000 * sqrt(sum((p/typsize)^2)), 1000), steptol = 1e-06,     iterlim = 100, check.analyticals = TRUE, ...) ","stats","base","2.5.0"
"nlminb","closure","function","TRUE","FALSE","(start, objective, gradient = NULL, hessian = NULL,     scale = 1, control = list(), lower = -Inf, upper = Inf, ...) ","stats","base","2.5.0"
"nls","closure","function","TRUE","FALSE","(formula, data = parent.frame(), start, control = nls.control(),     algorithm = c(""default"", ""plinear"", ""port""), trace = FALSE,     subset, weights, na.action, model = FALSE, lower = -Inf,     upper = Inf, ...) ","stats","base","2.5.0"
"nls.control","closure","function","TRUE","FALSE","(maxiter = 50, tol = 1e-05, minFactor = 1/1024, printEval = FALSE,     warnOnly = FALSE) ","stats","base","2.5.0"
"numericDeriv","closure","function","TRUE","FALSE","(expr, theta, rho = parent.frame(), dir = 1) ","stats","base","2.5.0"
"offset","closure","function","TRUE","FALSE","(object) ","stats","base","2.5.0"
"oneway.test","closure","function","TRUE","FALSE","(formula, data, subset, na.action, var.equal = FALSE) ","stats","base","2.5.0"
"optim","closure","function","TRUE","FALSE","(par, fn, gr = NULL, method = c(""Nelder-Mead"", ""BFGS"",     ""CG"", ""L-BFGS-B"", ""SANN""), lower = -Inf, upper = Inf, control = list(),     hessian = FALSE, ...) ","stats","base","2.5.0"
"optimise","closure","function","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     maximum = FALSE, tol = .Machine$double.eps^0.25, ...) ","stats","base","2.5.0"
"optimize","closure","function","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     maximum = FALSE, tol = .Machine$double.eps^0.25, ...) ","stats","base","2.5.0"
"order.dendrogram","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"p.adjust","closure","function","TRUE","FALSE","(p, method = p.adjust.methods, n = length(p)) ","stats","base","2.5.0"
"p.adjust.methods","character","character","TRUE","FALSE","NA","stats","base","2.5.0"
"pacf","closure","function","TRUE","FALSE","(x, lag.max, plot, na.action, ...) ","stats","base","2.5.0"
"pairwise.prop.test","closure","function","TRUE","FALSE","(x, n, p.adjust.method = p.adjust.methods, ...) ","stats","base","2.5.0"
"pairwise.t.test","closure","function","TRUE","FALSE","(x, g, p.adjust.method = p.adjust.methods, pool.sd = TRUE,     ...) ","stats","base","2.5.0"
"pairwise.table","closure","function","TRUE","FALSE","(compare.levels, level.names, p.adjust.method) ","stats","base","2.5.0"
"pairwise.wilcox.test","closure","function","TRUE","FALSE","(x, g, p.adjust.method = p.adjust.methods, ...) ","stats","base","2.5.0"
"pbeta","closure","function","TRUE","FALSE","(q, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pbinom","closure","function","TRUE","FALSE","(q, size, prob, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pbirthday","closure","function","TRUE","FALSE","(n, classes = 365, coincident = 2) ","stats","base","2.5.0"
"pcauchy","closure","function","TRUE","FALSE","(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pchisq","closure","function","TRUE","FALSE","(q, df, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pexp","closure","function","TRUE","FALSE","(q, rate = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pf","closure","function","TRUE","FALSE","(q, df1, df2, ncp, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pgamma","closure","function","TRUE","FALSE","(q, shape, rate = 1, scale = 1/rate, lower.tail = TRUE,     log.p = FALSE) ","stats","base","2.5.0"
"pgeom","closure","function","TRUE","FALSE","(q, prob, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"phyper","closure","function","TRUE","FALSE","(q, m, n, k, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"plclust","closure","function","TRUE","FALSE","(tree, hang = 0.1, unit = FALSE, level = FALSE, hmin = 0,     square = TRUE, labels = NULL, plot. = TRUE, axes = TRUE,     frame.plot = FALSE, ann = TRUE, main = """", sub = NULL, xlab = NULL,     ylab = ""Height"") ","stats","base","2.5.0"
"plnorm","closure","function","TRUE","FALSE","(q, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"plogis","closure","function","TRUE","FALSE","(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"plot.TukeyHSD","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"plot.density","closure","function","TRUE","FALSE","(x, main = NULL, xlab = NULL, ylab = ""Density"", type = ""l"",     zero.line = TRUE, ...) ","stats","base","2.5.0"
"plot.ecdf","closure","function","TRUE","FALSE","(x, ..., ylab = ""Fn(x)"", verticals = FALSE, col.01line = ""gray70"") ","stats","base","2.5.0"
"plot.lm","closure","function","TRUE","FALSE","(x, which = c(1:3, 5), caption = c(""Residuals vs Fitted"",     ""Normal Q-Q"", ""Scale-Location"", ""Cook's distance"", ""Residuals vs Leverage"",     ""Cook's distance vs Leverage""), panel = if (add.smooth) panel.smooth else points,     sub.caption = NULL, main = """", ask = prod(par(""mfcol"")) <         length(which) && dev.interactive(), ..., id.n = 3, labels.id = names(residuals(x)),     cex.id = 0.75, qqline = TRUE, cook.levels = c(0.5, 1), add.smooth = getOption(""add.smooth""),     label.pos = c(4, 2)) ","stats","base","2.5.0"
"plot.mlm","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"plot.spec","closure","function","TRUE","FALSE","(x, add = FALSE, ci = 0.95, log = c(""yes"", ""dB"", ""no""),     xlab = ""frequency"", ylab = NULL, type = ""l"", ci.col = ""blue"",     ci.lty = 3, main = NULL, sub = NULL, plot.type = c(""marginal"",         ""coherency"", ""phase""), ...) ","stats","base","2.5.0"
"plot.spec.coherency","closure","function","TRUE","FALSE","(x, ci = 0.95, xlab = ""frequency"", ylab = ""squared coherency"",     ylim = c(0, 1), type = ""l"", main = NULL, ci.col = ""blue"",     ci.lty = 3, ...) ","stats","base","2.5.0"
"plot.spec.phase","closure","function","TRUE","FALSE","(x, ci = 0.95, xlab = ""frequency"", ylab = ""phase"", ylim = c(-pi,     pi), type = ""l"", main = NULL, ci.col = ""blue"", ci.lty = 3,     ...) ","stats","base","2.5.0"
"plot.stepfun","closure","function","TRUE","FALSE","(x, xval, xlim, ylim = range(c(y, Fn.kn)), xlab = ""x"",     ylab = ""f(x)"", main = NULL, add = FALSE, verticals = TRUE,     do.points = TRUE, pch = par(""pch""), col.points = par(""col""),     cex.points = par(""cex""), col.hor = par(""col""), col.vert = par(""col""),     lty = par(""lty""), lwd = par(""lwd""), ...) ","stats","base","2.5.0"
"plot.ts","closure","function","TRUE","FALSE","(x, y = NULL, plot.type = c(""multiple"", ""single""), xy.labels,     xy.lines, panel = lines, nc, yax.flip = FALSE, mar.multi = c(0,         5.1, 0, if (yax.flip) 5.1 else 2.1), oma.multi = c(6,         0, 5, 0), axes = TRUE, ...) ","stats","base","2.5.0"
"pnbinom","closure","function","TRUE","FALSE","(q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pnorm","closure","function","TRUE","FALSE","(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"poisson","closure","function","TRUE","FALSE","(link = ""log"") ","stats","base","2.5.0"
"poly","closure","function","TRUE","FALSE","(x, ..., degree = 1, coefs = NULL, raw = FALSE) ","stats","base","2.5.0"
"polym","closure","function","TRUE","FALSE","(..., degree = 1, raw = FALSE) ","stats","base","2.5.0"
"power","closure","function","TRUE","FALSE","(lambda = 1) ","stats","base","2.5.0"
"power.anova.test","closure","function","TRUE","FALSE","(groups = NULL, n = NULL, between.var = NULL, within.var = NULL,     sig.level = 0.05, power = NULL) ","stats","base","2.5.0"
"power.prop.test","closure","function","TRUE","FALSE","(n = NULL, p1 = NULL, p2 = NULL, sig.level = 0.05, power = NULL,     alternative = c(""two.sided"", ""one.sided""), strict = FALSE) ","stats","base","2.5.0"
"power.t.test","closure","function","TRUE","FALSE","(n = NULL, delta = NULL, sd = 1, sig.level = 0.05, power = NULL,     type = c(""two.sample"", ""one.sample"", ""paired""), alternative = c(""two.sided"",         ""one.sided""), strict = FALSE) ","stats","base","2.5.0"
"ppoints","closure","function","TRUE","FALSE","(n, a = ifelse(n <= 10, 3/8, 1/2)) ","stats","base","2.5.0"
"ppois","closure","function","TRUE","FALSE","(q, lambda, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"ppr","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"prcomp","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"predict","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"predict.glm","closure","function","TRUE","FALSE","(object, newdata = NULL, type = c(""link"", ""response"",     ""terms""), se.fit = FALSE, dispersion = NULL, terms = NULL,     na.action = na.pass, ...) ","stats","base","2.5.0"
"predict.lm","closure","function","TRUE","FALSE","(object, newdata, se.fit = FALSE, scale = NULL, df = Inf,     interval = c(""none"", ""confidence"", ""prediction""), level = 0.95,     type = c(""response"", ""terms""), terms = NULL, na.action = na.pass,     pred.var = res.var/weights, weights = 1, ...) ","stats","base","2.5.0"
"predict.mlm","closure","function","TRUE","FALSE","(object, newdata, se.fit = FALSE, na.action = na.pass,     ...) ","stats","base","2.5.0"
"predict.poly","closure","function","TRUE","FALSE","(object, newdata, ...) ","stats","base","2.5.0"
"preplot","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"princomp","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"print.anova","closure","function","TRUE","FALSE","(x, digits = max(getOption(""digits"") - 2, 3), signif.stars = getOption(""show.signif.stars""),     ...) ","stats","base","2.5.0"
"print.coefmat","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 2), signif.stars = getOption(""show.signif.stars""),     dig.tst = max(1, min(5, digits - 1)), cs.ind, tst.ind, zap.ind = integer(0),     P.values = NULL, has.Pvalue, eps.Pvalue = .Machine$double.eps,     na.print = """", ...) ","stats","base","2.5.0"
"print.density","closure","function","TRUE","FALSE","(x, digits = NULL, ...) ","stats","base","2.5.0"
"print.family","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"print.formula","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"print.ftable","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","stats","base","2.5.0"
"print.glm","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","stats","base","2.5.0"
"print.infl","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 4), ...) ","stats","base","2.5.0"
"print.integrate","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","stats","base","2.5.0"
"print.lm","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 3), ...) ","stats","base","2.5.0"
"print.logLik","closure","function","TRUE","FALSE","(x, digits = getOption(""digits""), ...) ","stats","base","2.5.0"
"print.terms","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"print.ts","closure","function","TRUE","FALSE","(x, calendar, ...) ","stats","base","2.5.0"
"printCoefmat","closure","function","TRUE","FALSE","(x, digits = max(3, getOption(""digits"") - 2), signif.stars = getOption(""show.signif.stars""),     signif.legend = signif.stars, dig.tst = max(1, min(5, digits -         1)), cs.ind = 1:k, tst.ind = k + 1, zap.ind = integer(0),     P.values = NULL, has.Pvalue = nc >= 4 && substr(colnames(x)[nc],         1, 3) == ""Pr("", eps.Pvalue = .Machine$double.eps, na.print = ""NA"",     ...) ","stats","base","2.5.0"
"profile","closure","function","TRUE","FALSE","(fitted, ...) ","stats","base","2.5.0"
"proj","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"promax","closure","function","TRUE","FALSE","(x, m = 4) ","stats","base","2.5.0"
"prop.test","closure","function","TRUE","FALSE","(x, n, p = NULL, alternative = c(""two.sided"", ""less"",     ""greater""), conf.level = 0.95, correct = TRUE) ","stats","base","2.5.0"
"prop.trend.test","closure","function","TRUE","FALSE","(x, n, score = 1:length(x)) ","stats","base","2.5.0"
"psignrank","closure","function","TRUE","FALSE","(q, n, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pt","closure","function","TRUE","FALSE","(q, df, ncp, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"ptukey","closure","function","TRUE","FALSE","(q, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"punif","closure","function","TRUE","FALSE","(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pweibull","closure","function","TRUE","FALSE","(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"pwilcox","closure","function","TRUE","FALSE","(q, m, n, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qbeta","closure","function","TRUE","FALSE","(p, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qbinom","closure","function","TRUE","FALSE","(p, size, prob, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qbirthday","closure","function","TRUE","FALSE","(prob = 0.5, classes = 365, coincident = 2) ","stats","base","2.5.0"
"qcauchy","closure","function","TRUE","FALSE","(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qchisq","closure","function","TRUE","FALSE","(p, df, ncp = 0, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qexp","closure","function","TRUE","FALSE","(p, rate = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qf","closure","function","TRUE","FALSE","(p, df1, df2, ncp, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qgamma","closure","function","TRUE","FALSE","(p, shape, rate = 1, scale = 1/rate, lower.tail = TRUE,     log.p = FALSE) ","stats","base","2.5.0"
"qgeom","closure","function","TRUE","FALSE","(p, prob, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qhyper","closure","function","TRUE","FALSE","(p, m, n, k, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qlnorm","closure","function","TRUE","FALSE","(p, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qlogis","closure","function","TRUE","FALSE","(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qnbinom","closure","function","TRUE","FALSE","(p, size, prob, mu, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qnorm","closure","function","TRUE","FALSE","(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qpois","closure","function","TRUE","FALSE","(p, lambda, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qqline","closure","function","TRUE","FALSE","(y, datax = FALSE, ...) ","stats","base","2.5.0"
"qqnorm","closure","function","TRUE","FALSE","(y, ...) ","stats","base","2.5.0"
"qqnorm.default","closure","function","TRUE","FALSE","(y, ylim, main = ""Normal Q-Q Plot"", xlab = ""Theoretical Quantiles"",     ylab = ""Sample Quantiles"", plot.it = TRUE, datax = FALSE,     ...) ","stats","base","2.5.0"
"qqplot","closure","function","TRUE","FALSE","(x, y, plot.it = TRUE, xlab = deparse(substitute(x)),     ylab = deparse(substitute(y)), ...) ","stats","base","2.5.0"
"qsignrank","closure","function","TRUE","FALSE","(p, n, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qt","closure","function","TRUE","FALSE","(p, df, ncp, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qtukey","closure","function","TRUE","FALSE","(p, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"quade.test","closure","function","TRUE","FALSE","(y, ...) ","stats","base","2.5.0"
"quantile","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"quantile.default","closure","function","TRUE","FALSE","(x, probs = seq(0, 1, 0.25), na.rm = FALSE, names = TRUE,     type = 7, ...) ","stats","base","2.5.0"
"quasi","closure","function","TRUE","FALSE","(link = ""identity"", variance = ""constant"") ","stats","base","2.5.0"
"quasibinomial","closure","function","TRUE","FALSE","(link = ""logit"") ","stats","base","2.5.0"
"quasipoisson","closure","function","TRUE","FALSE","(link = ""log"") ","stats","base","2.5.0"
"qunif","closure","function","TRUE","FALSE","(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qweibull","closure","function","TRUE","FALSE","(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"qwilcox","closure","function","TRUE","FALSE","(p, m, n, lower.tail = TRUE, log.p = FALSE) ","stats","base","2.5.0"
"r2dtable","closure","function","TRUE","FALSE","(n, r, c) ","stats","base","2.5.0"
"rbeta","closure","function","TRUE","FALSE","(n, shape1, shape2, ncp = 0) ","stats","base","2.5.0"
"rbinom","closure","function","TRUE","FALSE","(n, size, prob) ","stats","base","2.5.0"
"rcauchy","closure","function","TRUE","FALSE","(n, location = 0, scale = 1) ","stats","base","2.5.0"
"rchisq","closure","function","TRUE","FALSE","(n, df, ncp = 0) ","stats","base","2.5.0"
"read.ftable","closure","function","TRUE","FALSE","(file, sep = """", quote = ""\"""", row.var.names, col.vars,     skip = 0) ","stats","base","2.5.0"
"rect.hclust","closure","function","TRUE","FALSE","(tree, k = NULL, which = NULL, x = NULL, h = NULL, border = 2,     cluster = NULL) ","stats","base","2.5.0"
"reformulate","closure","function","TRUE","FALSE","(termlabels, response = NULL) ","stats","base","2.5.0"
"relevel","closure","function","TRUE","FALSE","(x, ref, ...) ","stats","base","2.5.0"
"reorder","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"replications","closure","function","TRUE","FALSE","(formula, data = NULL, na.action) ","stats","base","2.5.0"
"reshape","closure","function","TRUE","FALSE","(data, varying = NULL, v.names = NULL, timevar = ""time"",     idvar = ""id"", ids = 1:NROW(data), times = seq(length = length(varying[[1]])),     drop = NULL, direction, new.row.names = NULL, split = list(regexp = ""\\."",         include = FALSE)) ","stats","base","2.5.0"
"reshapeLong","closure","function","TRUE","FALSE","(x, jvars, ilev = row.names(x), jlev = names(x)[jvars],     iname = ""reshape.i"", jname = ""reshape.j"", vname = ""reshape.v"") ","stats","base","2.5.0"
"reshapeWide","closure","function","TRUE","FALSE","(x, i, j, val, jnames = levels(j)) ","stats","base","2.5.0"
"resid","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"residuals","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"residuals.default","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"residuals.glm","closure","function","TRUE","FALSE","(object, type = c(""deviance"", ""pearson"", ""working"",     ""response"", ""partial""), ...) ","stats","base","2.5.0"
"residuals.lm","closure","function","TRUE","FALSE","(object, type = c(""working"", ""response"", ""deviance"",     ""pearson"", ""partial""), ...) ","stats","base","2.5.0"
"rexp","closure","function","TRUE","FALSE","(n, rate = 1) ","stats","base","2.5.0"
"rf","closure","function","TRUE","FALSE","(n, df1, df2, ncp) ","stats","base","2.5.0"
"rgamma","closure","function","TRUE","FALSE","(n, shape, rate = 1, scale = 1/rate) ","stats","base","2.5.0"
"rgeom","closure","function","TRUE","FALSE","(n, prob) ","stats","base","2.5.0"
"rhyper","closure","function","TRUE","FALSE","(nn, m, n, k) ","stats","base","2.5.0"
"rlnorm","closure","function","TRUE","FALSE","(n, meanlog = 0, sdlog = 1) ","stats","base","2.5.0"
"rlogis","closure","function","TRUE","FALSE","(n, location = 0, scale = 1) ","stats","base","2.5.0"
"rmultinom","closure","function","TRUE","FALSE","(n, size, prob) ","stats","base","2.5.0"
"rnbinom","closure","function","TRUE","FALSE","(n, size, prob, mu) ","stats","base","2.5.0"
"rnorm","closure","function","TRUE","FALSE","(n, mean = 0, sd = 1) ","stats","base","2.5.0"
"rpois","closure","function","TRUE","FALSE","(n, lambda) ","stats","base","2.5.0"
"rsignrank","closure","function","TRUE","FALSE","(nn, n) ","stats","base","2.5.0"
"rstandard","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"rstandard.glm","closure","function","TRUE","FALSE","(model, infl = lm.influence(model, do.coef = FALSE),     ...) ","stats","base","2.5.0"
"rstandard.lm","closure","function","TRUE","FALSE","(model, infl = lm.influence(model, do.coef = FALSE),     sd = sqrt(deviance(model)/df.residual(model)), ...) ","stats","base","2.5.0"
"rstudent","closure","function","TRUE","FALSE","(model, ...) ","stats","base","2.5.0"
"rstudent.glm","closure","function","TRUE","FALSE","(model, infl = influence(model, do.coef = FALSE), ...) ","stats","base","2.5.0"
"rstudent.lm","closure","function","TRUE","FALSE","(model, infl = lm.influence(model, do.coef = FALSE),     res = infl$wt.res, ...) ","stats","base","2.5.0"
"rt","closure","function","TRUE","FALSE","(n, df, ncp) ","stats","base","2.5.0"
"runif","closure","function","TRUE","FALSE","(n, min = 0, max = 1) ","stats","base","2.5.0"
"runmed","closure","function","TRUE","FALSE","(x, k, endrule = c(""median"", ""keep"", ""constant""), algorithm = NULL,     print.level = 0) ","stats","base","2.5.0"
"rweibull","closure","function","TRUE","FALSE","(n, shape, scale = 1) ","stats","base","2.5.0"
"rwilcox","closure","function","TRUE","FALSE","(nn, m, n) ","stats","base","2.5.0"
"scatter.smooth","closure","function","TRUE","FALSE","(x, y = NULL, span = 2/3, degree = 1, family = c(""symmetric"",     ""gaussian""), xlab = NULL, ylab = NULL, ylim = range(y, prediction$y,     na.rm = TRUE), evaluation = 50, ...) ","stats","base","2.5.0"
"screeplot","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"sd","closure","function","TRUE","FALSE","(x, na.rm = FALSE) ","stats","base","2.5.0"
"se.contrast","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"selfStart","closure","function","TRUE","FALSE","(model, initial, parameters, template) ","stats","base","2.5.0"
"setNames","closure","function","TRUE","FALSE","(object, nm) ","stats","base","2.5.0"
"shapiro.test","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"simulate","closure","function","TRUE","FALSE","(object, nsim = 1, seed = NULL, ...) ","stats","base","2.5.0"
"smooth","closure","function","TRUE","FALSE","(x, kind = c(""3RS3R"", ""3RSS"", ""3RSR"", ""3R"", ""3"", ""S""),     twiceit = FALSE, endrule = ""Tukey"", do.ends = FALSE) ","stats","base","2.5.0"
"smooth.spline","closure","function","TRUE","FALSE","(x, y = NULL, w = NULL, df, spar = NULL, cv = FALSE,     all.knots = FALSE, nknots = NULL, keep.data = TRUE, df.offset = 0,     penalty = 1, control.spar = list()) ","stats","base","2.5.0"
"smoothEnds","closure","function","TRUE","FALSE","(y, k = 3) ","stats","base","2.5.0"
"sortedXyData","closure","function","TRUE","FALSE","(x, y, data) ","stats","base","2.5.0"
"spec.ar","closure","function","TRUE","FALSE","(x, n.freq, order = NULL, plot = TRUE, na.action = na.fail,     method = ""yule-walker"", ...) ","stats","base","2.5.0"
"spec.pgram","closure","function","TRUE","FALSE","(x, spans = NULL, kernel = NULL, taper = 0.1, pad = 0,     fast = TRUE, demean = FALSE, detrend = TRUE, plot = TRUE,     na.action = na.fail, ...) ","stats","base","2.5.0"
"spec.taper","closure","function","TRUE","FALSE","(x, p = 0.1) ","stats","base","2.5.0"
"spectrum","closure","function","TRUE","FALSE","(x, ..., method = c(""pgram"", ""ar"")) ","stats","base","2.5.0"
"spline","closure","function","TRUE","FALSE","(x, y = NULL, n = 3 * length(x), method = ""fmm"", xmin = min(x),     xmax = max(x), ties = mean) ","stats","base","2.5.0"
"splinefun","closure","function","TRUE","FALSE","(x, y = NULL, method = ""fmm"", ties = mean) ","stats","base","2.5.0"
"start","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"stat.anova","closure","function","TRUE","FALSE","(table, test = c(""Chisq"", ""F"", ""Cp""), scale, df.scale,     n) ","stats","base","2.5.0"
"step","closure","function","TRUE","FALSE","(object, scope, scale = 0, direction = c(""both"", ""backward"",     ""forward""), trace = 1, keep = NULL, steps = 1000, k = 2,     ...) ","stats","base","2.5.0"
"stepfun","closure","function","TRUE","FALSE","(x, y, f = as.numeric(right), ties = ""ordered"", right = FALSE) ","stats","base","2.5.0"
"stl","closure","function","TRUE","FALSE","(x, s.window, s.degree = 0, t.window = NULL, t.degree = 1,     l.window = nextodd(period), l.degree = t.degree, s.jump = ceiling(s.window/10),     t.jump = ceiling(t.window/10), l.jump = ceiling(l.window/10),     robust = FALSE, inner = if (robust) 1 else 2, outer = if (robust) 15 else 0,     na.action = na.fail) ","stats","base","2.5.0"
"summary.aov","closure","function","TRUE","FALSE","(object, intercept = FALSE, split, expand.split = TRUE,     keep.zero.df = TRUE, ...) ","stats","base","2.5.0"
"summary.aovlist","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"summary.glm","closure","function","TRUE","FALSE","(object, dispersion = NULL, correlation = FALSE, symbolic.cor = FALSE,     ...) ","stats","base","2.5.0"
"summary.infl","closure","function","TRUE","FALSE","(object, digits = max(2, getOption(""digits"") - 5), ...) ","stats","base","2.5.0"
"summary.lm","closure","function","TRUE","FALSE","(object, correlation = FALSE, symbolic.cor = FALSE,     ...) ","stats","base","2.5.0"
"summary.manova","closure","function","TRUE","FALSE","(object, test = c(""Pillai"", ""Wilks"", ""Hotelling-Lawley"",     ""Roy""), intercept = FALSE, ...) ","stats","base","2.5.0"
"summary.mlm","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"summary.stepfun","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"supsmu","closure","function","TRUE","FALSE","(x, y, wt = rep(1, n), span = ""cv"", periodic = FALSE,     bass = 0) ","stats","base","2.5.0"
"symnum","closure","function","TRUE","FALSE","(x, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95), symbols = if (numeric.x) c("" "",     ""."", "","", ""+"", ""*"", ""B"") else c(""."", ""|""), legend = length(symbols) >=     3, na = ""?"", eps = 1e-05, numeric.x = is.numeric(x), corr = missing(cutpoints) &&     numeric.x, show.max = if (corr) ""1"", show.min = NULL, abbr.colnames = has.colnames,     lower.triangular = corr && is.numeric(x) && is.matrix(x),     diag.lower.tri = corr && !is.null(show.max)) ","stats","base","2.5.0"
"t.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"termplot","closure","function","TRUE","FALSE","(model, data = NULL, envir = environment(formula(model)),     partial.resid = FALSE, rug = FALSE, terms = NULL, se = FALSE,     xlabs = NULL, ylabs = NULL, main = NULL, col.term = 2, lwd.term = 1.5,     col.se = ""orange"", lty.se = 2, lwd.se = 1, col.res = ""gray"",     cex = 1, pch = par(""pch""), col.smth = ""darkred"", lty.smth = 2,     span.smth = 2/3, ask = interactive() && nb.fig < n.tms &&         .Device != ""postscript"", use.factor.levels = TRUE, smooth = NULL,     ...) ","stats","base","2.5.0"
"terms","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"terms.aovlist","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"terms.default","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"terms.formula","closure","function","TRUE","FALSE","(x, specials = NULL, abb = NULL, data = NULL, neg.out = TRUE,     keep.order = FALSE, simplify = FALSE, ..., allowDotAsName = FALSE) ","stats","base","2.5.0"
"terms.terms","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"time","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"toeplitz","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"ts","closure","function","TRUE","FALSE","(data = NA, start = 1, end = numeric(0), frequency = 1,     deltat = 1, ts.eps = getOption(""ts.eps""), class = if (nseries >         1) c(""mts"", ""ts"") else ""ts"", names = if (!is.null(dimnames(data))) colnames(data) else paste(""Series"",         seq(nseries))) ","stats","base","2.5.0"
"ts.intersect","closure","function","TRUE","FALSE","(..., dframe = FALSE) ","stats","base","2.5.0"
"ts.plot","closure","function","TRUE","FALSE","(..., gpars = list()) ","stats","base","2.5.0"
"ts.union","closure","function","TRUE","FALSE","(..., dframe = FALSE) ","stats","base","2.5.0"
"tsSmooth","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"tsdiag","closure","function","TRUE","FALSE","(object, gof.lag, ...) ","stats","base","2.5.0"
"tsp","closure","function","TRUE","FALSE","(x) ","stats","base","2.5.0"
"tsp<-","closure","function","TRUE","FALSE","(x, value) ","stats","base","2.5.0"
"uniroot","closure","function","TRUE","FALSE","(f, interval, lower = min(interval), upper = max(interval),     tol = .Machine$double.eps^0.25, maxiter = 1000, ...) ","stats","base","2.5.0"
"update","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"update.default","closure","function","TRUE","FALSE","(object, formula., ..., evaluate = TRUE) ","stats","base","2.5.0"
"update.formula","closure","function","TRUE","FALSE","(old, new, ...) ","stats","base","2.5.0"
"var","closure","function","TRUE","FALSE","(x, y = NULL, na.rm = FALSE, use) ","stats","base","2.5.0"
"var.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"variable.names","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"varimax","closure","function","TRUE","FALSE","(x, normalize = TRUE, eps = 1e-05) ","stats","base","2.5.0"
"vcov","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"weighted.mean","closure","function","TRUE","FALSE","(x, w, na.rm = FALSE) ","stats","base","2.5.0"
"weighted.residuals","closure","function","TRUE","FALSE","(obj, drop0 = TRUE) ","stats","base","2.5.0"
"weights","closure","function","TRUE","FALSE","(object, ...) ","stats","base","2.5.0"
"wilcox.test","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"window","closure","function","TRUE","FALSE","(x, ...) ","stats","base","2.5.0"
"window<-","closure","function","TRUE","FALSE","(x, ..., value) ","stats","base","2.5.0"
"write.ftable","closure","function","TRUE","FALSE","(x, file = """", quote = TRUE, append = FALSE, digits = getOption(""digits"")) ","stats","base","2.5.0"
"xtabs","closure","function","TRUE","FALSE","(formula = ~., data = parent.frame(), subset, na.action,     exclude = c(NA, NaN), drop.unused.levels = FALSE) ","stats","base","2.5.0"
".__C__mle","S4","classRepresentation","TRUE","FALSE","NA","stats4","base","2.5.0"
".__C__profile.mle","S4","classRepresentation","TRUE","FALSE","NA","stats4","base","2.5.0"
".__C__summary.mle","S4","classRepresentation","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__AIC:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__BIC:stats4","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__coef:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__confint:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__logLik:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__plot:graphics","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__profile:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__show:methods","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__summary:base","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__update:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__M__vcov:stats","S4","MethodsList","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__AIC:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__BIC:stats4","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__coef:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__confint:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__logLik:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__plot:graphics","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__profile:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__show:methods","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__summary:base","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__update:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
".__T__vcov:stats","environment","environment","TRUE","FALSE","NA","stats4","base","2.5.0"
"AIC","closure","standardGeneric","TRUE","TRUE","(object, ..., k = 2) ","stats4","base","2.5.0"
"BIC","closure","standardGeneric","TRUE","TRUE","(object, ...) ","stats4","base","2.5.0"
"coef","closure","standardGeneric","TRUE","TRUE","(object, ...) ","stats4","base","2.5.0"
"confint","closure","standardGeneric","TRUE","TRUE","(object, parm, level = 0.95, ...) ","stats4","base","2.5.0"
"logLik","closure","standardGeneric","TRUE","TRUE","(object, ...) ","stats4","base","2.5.0"
"mle","closure","function","TRUE","FALSE","(minuslogl, start = formals(minuslogl), method = ""BFGS"",     fixed = list(), ...) ","stats4","base","2.5.0"
"plot","closure","standardGeneric","TRUE","TRUE","(x, y, ...) ","stats4","base","2.5.0"
"profile","closure","standardGeneric","TRUE","TRUE","(fitted, ...) ","stats4","base","2.5.0"
"summary","closure","standardGeneric","TRUE","TRUE","(object, ...) ","stats4","base","2.5.0"
"update","closure","standardGeneric","TRUE","TRUE","(object, ...) ","stats4","base","2.5.0"
"vcov","closure","standardGeneric","TRUE","TRUE","(object, ...) ","stats4","base","2.5.0"
"Surv","closure","function","TRUE","FALSE","(time, time2, event, type = c(""right"", ""left"", ""interval"",     ""counting"", ""interval2""), origin = 0) ","survival","recommended","2.5.0"
"aml","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"as.date","closure","function","TRUE","FALSE","(x, order = ""mdy"", ...) ","survival","recommended","2.5.0"
"attrassign","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","2.5.0"
"basehaz","closure","function","TRUE","FALSE","(fit, centered = TRUE) ","survival","recommended","2.5.0"
"bladder","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"bladder2","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"cancer","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"cch","closure","function","TRUE","FALSE","(formula, data = sys.parent(), subcoh, id, stratum = NULL,     cohort.size, method = c(""Prentice"", ""SelfPrentice"", ""LinYing"",         ""I.Borgan"", ""II.Borgan""), robust = FALSE) ","survival","recommended","2.5.0"
"clogit","closure","function","TRUE","FALSE","(formula, data, method = c(""exact"", ""approximate""),     na.action = getOption(""na.action""), subset = NULL, control = coxph.control()) ","survival","recommended","2.5.0"
"cluster","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"colon","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"cox.zph","closure","function","TRUE","FALSE","(fit, transform = ""km"", global = TRUE) ","survival","recommended","2.5.0"
"coxph","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, init, control, method = c(""efron"", ""breslow"",         ""exact""), singular.ok = TRUE, robust = FALSE, model = FALSE,     x = FALSE, y = TRUE, ...) ","survival","recommended","2.5.0"
"coxph.control","closure","function","TRUE","FALSE","(eps = 1e-09, toler.chol = .Machine$double.eps^0.75,     iter.max = 20, toler.inf = sqrt(eps), outer.max = 10) ","survival","recommended","2.5.0"
"coxph.detail","closure","function","TRUE","FALSE","(object) ","survival","recommended","2.5.0"
"coxph.fit","closure","function","TRUE","FALSE","(x, y, strata, offset, init, control, weights, method,     rownames) ","survival","recommended","2.5.0"
"date.ddmmmyy","closure","function","TRUE","FALSE","(sdate) ","survival","recommended","2.5.0"
"date.mdy","closure","function","TRUE","FALSE","(sdate, weekday = FALSE) ","survival","recommended","2.5.0"
"date.mmddyy","closure","function","TRUE","FALSE","(sdate, sep = ""/"") ","survival","recommended","2.5.0"
"date.mmddyyyy","closure","function","TRUE","FALSE","(sdate, sep = ""/"") ","survival","recommended","2.5.0"
"format.Surv","closure","function","TRUE","FALSE","(x, ...) ","survival","recommended","2.5.0"
"frailty","closure","function","TRUE","FALSE","(x, distribution = ""gamma"", ...) ","survival","recommended","2.5.0"
"frailty.gamma","closure","function","TRUE","FALSE","(x, sparse = (nclass > 5), theta, df, eps = 1e-05, method = c(""em"",     ""aic"", ""df"", ""fixed""), ...) ","survival","recommended","2.5.0"
"frailty.gammacon","closure","function","TRUE","FALSE","(d, nu) ","survival","recommended","2.5.0"
"frailty.gaussian","closure","function","TRUE","FALSE","(x, sparse = (nclass > 5), theta, df, method = c(""reml"",     ""aic"", ""df"", ""fixed""), ...) ","survival","recommended","2.5.0"
"frailty.t","closure","function","TRUE","FALSE","(x, sparse = (nclass > 5), theta, df, eps = 1e-05, tdf = 5,     method = c(""aic"", ""df"", ""fixed""), ...) ","survival","recommended","2.5.0"
"heart","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"is.Surv","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"is.date","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"is.na.Surv","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"is.na.coxph.penalty","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"is.na.date","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"is.na.ratetable","closure","function","TRUE","FALSE","(x) ","survival","recommended","2.5.0"
"is.ratetable","closure","function","TRUE","FALSE","(x, verbose = FALSE) ","survival","recommended","2.5.0"
"jasa","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"jasa1","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"kidney","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"labels.survreg","closure","function","TRUE","FALSE","(object, ...) ","survival","recommended","2.5.0"
"leukemia","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"lung","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"match.ratetable","closure","function","TRUE","FALSE","(R, ratetable) ","survival","recommended","2.5.0"
"mdy.date","closure","function","TRUE","FALSE","(month, day, year, nineteen = TRUE, fillday = FALSE,     fillmonth = FALSE) ","survival","recommended","2.5.0"
"nwtco","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"ovarian","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"pbc","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"pspline","closure","function","TRUE","FALSE","(x, df = 4, theta, nterm = 2.5 * df, degree = 3, eps = 0.1,     method, ...) ","survival","recommended","2.5.0"
"pyears","closure","function","TRUE","FALSE","(formula = formula(data), data = sys.parent(), weights,     subset, na.action, ratetable = survexp.us, scale = 365.25,     expect = c(""event"", ""pyears""), model = FALSE, x = FALSE,     y = FALSE) ","survival","recommended","2.5.0"
"ratetable","closure","function","TRUE","FALSE","(...) ","survival","recommended","2.5.0"
"rats","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"ridge","closure","function","TRUE","FALSE","(..., theta, df = nvar/2, eps = 0.1, scale = TRUE) ","survival","recommended","2.5.0"
"stanford2","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"strata","closure","function","TRUE","FALSE","(..., na.group = FALSE, shortlabel = FALSE) ","survival","recommended","2.5.0"
"survSplit","closure","function","TRUE","FALSE","(data, cut, end, event, start, id = NULL, zero = 0,     episode = NULL) ","survival","recommended","2.5.0"
"survdiff","closure","function","TRUE","FALSE","(formula, data, subset, na.action, rho = 0) ","survival","recommended","2.5.0"
"survexp","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, times, cohort = TRUE, conditional = FALSE,     ratetable = survexp.us, scale = 1, npoints, se.fit, model = FALSE,     x = FALSE, y = FALSE) ","survival","recommended","2.5.0"
"survexp.az","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.azr","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.fl","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.flr","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.mn","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.mnwhite","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.us","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.usr","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survexp.wnc","double","ratetable","FALSE","FALSE","NA","survival","recommended","2.5.0"
"survfit","closure","function","TRUE","FALSE","(formula, data, weights, subset, na.action, ...) ","survival","recommended","2.5.0"
"survfit.km","closure","function","TRUE","FALSE","(x, y, casewt = rep(1, n), type = c(""kaplan-meier"",     ""fleming-harrington"", ""fh2""), error = c(""greenwood"", ""tsiatis""),     se.fit = TRUE, conf.int = 0.95, conf.type = c(""log"", ""log-log"",         ""plain"", ""none""), conf.lower = c(""usual"", ""peto"", ""modified""),     new.start) ","survival","recommended","2.5.0"
"survobrien","closure","function","TRUE","FALSE","(formula, data = sys.frame(sys.parent())) ","survival","recommended","2.5.0"
"survreg","closure","function","TRUE","FALSE","(formula = formula(data), data = parent.frame(), weights,     subset, na.action, dist = ""weibull"", init = NULL, scale = 0,     control = survreg.control(), parms = NULL, model = FALSE,     x = FALSE, y = TRUE, robust = FALSE, ...) ","survival","recommended","2.5.0"
"survreg.control","closure","function","TRUE","FALSE","(maxiter = 30, rel.tolerance = 1e-09, failure = 1, toler.chol = 1e-10,     iter.max, debug = 0, outer.max = 10) ","survival","recommended","2.5.0"
"survreg.distributions","list","list","TRUE","FALSE","NA","survival","recommended","2.5.0"
"survreg.fit","closure","function","TRUE","FALSE","(x, y, weights, offset, init, controlvals, dist, scale = 0,     nstrat = 1, strata, parms = NULL) ","survival","recommended","2.5.0"
"survreg.old","closure","function","TRUE","FALSE","(formula, data = sys.frame(sys.parent()), ..., link = c(""log"",     ""identity""), dist = c(""extreme"", ""logistic"", ""gaussian"",     ""exponential"", ""rayleigh"", ""weibull""), fixed = list()) ","survival","recommended","2.5.0"
"tcut","closure","function","TRUE","FALSE","(x, breaks, labels, scale = 1) ","survival","recommended","2.5.0"
"tobin","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"untangle.specials","closure","function","TRUE","FALSE","(tt, special, order = 1) ","survival","recommended","2.5.0"
"veteran","list","data.frame","FALSE","FALSE","NA","survival","recommended","2.5.0"
"Adobe_glyphs","list","data.frame","TRUE","FALSE","NA","tools","base","2.5.0"
"Rd_db","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"Rd_parse","closure","function","TRUE","FALSE","(file, text = NULL) ","tools","base","2.5.0"
"Rdindex","closure","function","TRUE","FALSE","(RdFiles, outFile = """", type = NULL, width = 0.9 * getOption(""width""),     indent = NULL) ","tools","base","2.5.0"
"buildVignettes","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL, quiet = TRUE) ","tools","base","2.5.0"
"charset_to_Unicode","integer","noquote/hexmode","TRUE","FALSE","NA","tools","base","2.5.0"
"checkDocFiles","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"checkDocStyle","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"checkFF","closure","function","TRUE","FALSE","(package, dir, file, lib.loc = NULL, verbose = getOption(""verbose"")) ","tools","base","2.5.0"
"checkMD5sums","closure","function","TRUE","FALSE","(pkg, dir) ","tools","base","2.5.0"
"checkReplaceFuns","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"checkS3methods","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"checkTnF","closure","function","TRUE","FALSE","(package, dir, file, lib.loc = NULL) ","tools","base","2.5.0"
"checkVignettes","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL, tangle = TRUE, weave = TRUE,     workdir = c(""tmp"", ""src"", ""cur""), keepfiles = FALSE) ","tools","base","2.5.0"
"codoc","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL, use.values = NULL, verbose = getOption(""verbose"")) ","tools","base","2.5.0"
"codocClasses","closure","function","TRUE","FALSE","(package, lib.loc = NULL) ","tools","base","2.5.0"
"codocData","closure","function","TRUE","FALSE","(package, lib.loc = NULL) ","tools","base","2.5.0"
"delimMatch","closure","function","TRUE","FALSE","(x, delim = c(""","tools","base","2.5.0"
"encoded_text_to_latex","closure","function","TRUE","FALSE","(x, encoding = c(""latin1"", ""latin2"", ""latin9"", ""UTF-8"",     ""utf8"")) ","tools","base","2.5.0"
"file_path_as_absolute","closure","function","TRUE","FALSE","(x) ","tools","base","2.5.0"
"file_path_sans_ext","closure","function","TRUE","FALSE","(x) ","tools","base","2.5.0"
"getDepList","closure","function","TRUE","FALSE","(depMtrx, instPkgs, recursive = TRUE, local = TRUE,     reduce = TRUE, lib.loc = NULL) ","tools","base","2.5.0"
"installFoundDepends","closure","function","TRUE","FALSE","(depPkgList, ...) ","tools","base","2.5.0"
"list_files_with_exts","closure","function","TRUE","FALSE","(dir, exts, all.files = FALSE, full.names = TRUE) ","tools","base","2.5.0"
"list_files_with_type","closure","function","TRUE","FALSE","(dir, type, all.files = FALSE, full.names = TRUE, OS_subdirs = .OStype()) ","tools","base","2.5.0"
"md5sum","closure","function","TRUE","FALSE","(files) ","tools","base","2.5.0"
"package.dependencies","closure","function","TRUE","FALSE","(x, check = FALSE, depLevel = c(""Depends"", ""Imports"",     ""Suggests"")) ","tools","base","2.5.0"
"pkgDepends","closure","function","TRUE","FALSE","(pkg, recursive = TRUE, local = TRUE, reduce = TRUE,     lib.loc = NULL) ","tools","base","2.5.0"
"pkgVignettes","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"read.00Index","closure","function","TRUE","FALSE","(file) ","tools","base","2.5.0"
"texi2dvi","closure","function","TRUE","FALSE","(file, pdf = FALSE, clean = FALSE, quiet = TRUE, texi2dvi = getOption(""texi2dvi"")) ","tools","base","2.5.0"
"undoc","closure","function","TRUE","FALSE","(package, dir, lib.loc = NULL) ","tools","base","2.5.0"
"vignetteDepends","closure","function","TRUE","FALSE","(vignette, recursive = TRUE, reduce = TRUE, local = TRUE,     lib.loc = NULL) ","tools","base","2.5.0"
"write_PACKAGES","closure","function","TRUE","FALSE","(dir, fields = NULL, type = c(""source"", ""mac.binary"",     ""win.binary""), verbose = FALSE, unpacked = FALSE) ","tools","base","2.5.0"
"xgettext","closure","function","TRUE","FALSE","(dir, verbose = FALSE, asCall = TRUE) ","tools","base","2.5.0"
"xgettext2pot","closure","function","TRUE","FALSE","(dir, potFile) ","tools","base","2.5.0"
"xngettext","closure","function","TRUE","FALSE","(dir, verbose = FALSE) ","tools","base","2.5.0"
"?","closure","function","TRUE","FALSE","(e1, e2) ","utils","base","2.5.0"
"CRAN.packages","closure","function","TRUE","FALSE","(CRAN = getOption(""repos""), method, contriburl = contrib.url(CRAN)) ","utils","base","2.5.0"
"RShowDoc","closure","function","TRUE","FALSE","(what, type = c(""pdf"", ""html"", ""txt""), package) ","utils","base","2.5.0"
"RSiteSearch","closure","function","TRUE","FALSE","(string, restrict = c(""Rhelp02a"", ""functions"", ""docs""),     format = c(""normal"", ""short""), sortby = c(""score"", ""date:late"",         ""date:early"", ""subject"", ""subject:descending"", ""from"",         ""from:descending"", ""size"", ""size:descending""), matchesPerPage = 20) ","utils","base","2.5.0"
"Rprof","closure","function","TRUE","FALSE","(filename = ""Rprof.out"", append = FALSE, interval = 0.02,     memory.profiling = FALSE) ","utils","base","2.5.0"
"Rprofmem","closure","function","TRUE","FALSE","(filename = ""Rprofmem.out"", append = FALSE, threshold = 0) ","utils","base","2.5.0"
"Rtangle","closure","function","TRUE","FALSE","() ","utils","base","2.5.0"
"RtangleSetup","closure","function","TRUE","FALSE","(file, syntax, output = NULL, annotate = TRUE, split = FALSE,     prefix = TRUE, quiet = FALSE) ","utils","base","2.5.0"
"RtangleWritedoc","closure","function","TRUE","FALSE","(object, chunk) ","utils","base","2.5.0"
"RweaveChunkPrefix","closure","function","TRUE","FALSE","(options) ","utils","base","2.5.0"
"RweaveEvalWithOpt","closure","function","TRUE","FALSE","(expr, options) ","utils","base","2.5.0"
"RweaveLatex","closure","function","TRUE","FALSE","() ","utils","base","2.5.0"
"RweaveLatexFinish","closure","function","TRUE","FALSE","(object, error = FALSE) ","utils","base","2.5.0"
"RweaveLatexOptions","closure","function","TRUE","FALSE","(options) ","utils","base","2.5.0"
"RweaveLatexSetup","closure","function","TRUE","FALSE","(file, syntax, output = NULL, quiet = FALSE, debug = FALSE,     echo = TRUE, eval = TRUE, keep.source = FALSE, split = FALSE,     stylepath = TRUE, pdf = TRUE, eps = TRUE) ","utils","base","2.5.0"
"RweaveLatexWritedoc","closure","function","TRUE","FALSE","(object, chunk) ","utils","base","2.5.0"
"RweaveTryStop","closure","function","TRUE","FALSE","(err, options) ","utils","base","2.5.0"
"Stangle","closure","function","TRUE","FALSE","(file, driver = Rtangle(), syntax = getOption(""SweaveSyntax""),     ...) ","utils","base","2.5.0"
"Sweave","closure","function","TRUE","FALSE","(file, driver = RweaveLatex(), syntax = getOption(""SweaveSyntax""),     ...) ","utils","base","2.5.0"
"SweaveHooks","closure","function","TRUE","FALSE","(options, run = FALSE, envir = .GlobalEnv) ","utils","base","2.5.0"
"SweaveSyntConv","closure","function","TRUE","FALSE","(file, syntax, output = NULL) ","utils","base","2.5.0"
"SweaveSyntaxLatex","list","SweaveSyntax","TRUE","FALSE","NA","utils","base","2.5.0"
"SweaveSyntaxNoweb","list","SweaveSyntax","TRUE","FALSE","NA","utils","base","2.5.0"
"URLdecode","closure","function","TRUE","FALSE","(URL) ","utils","base","2.5.0"
"URLencode","closure","function","TRUE","FALSE","(URL, reserved = FALSE) ","utils","base","2.5.0"
"View","closure","function","TRUE","FALSE","(x, title) ","utils","base","2.5.0"
"alarm","closure","function","TRUE","FALSE","() ","utils","base","2.5.0"
"apropos","closure","function","TRUE","FALSE","(what, where = FALSE, ignore.case = TRUE, mode = ""any"") ","utils","base","2.5.0"
"argsAnywhere","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"as.person","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"as.personList","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"as.roman","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"assignInNamespace","closure","function","TRUE","FALSE","(x, value, ns, pos = -1, envir = as.environment(pos)) ","utils","base","2.5.0"
"available.packages","closure","function","TRUE","FALSE","(contriburl = contrib.url(getOption(""repos"")), method,     fields = NULL) ","utils","base","2.5.0"
"browseEnv","closure","function","TRUE","FALSE","(envir = .GlobalEnv, pattern, excludepatt = ""^last\\.warning"",     html = .Platform$OS.type != ""mac"", expanded = TRUE, properties = NULL,     main = NULL, debugMe = FALSE) ","utils","base","2.5.0"
"browseURL","closure","function","TRUE","FALSE","(url, browser = getOption(""browser"")) ","utils","base","2.5.0"
"bug.report","closure","function","TRUE","FALSE","(subject = """", ccaddress = Sys.getenv(""USER""), method = getOption(""mailer""),     address = ""r-bugs@r-project.org"", file = ""R.bug.report"") ","utils","base","2.5.0"
"capture.output","closure","function","TRUE","FALSE","(..., file = NULL, append = FALSE) ","utils","base","2.5.0"
"checkCRAN","closure","function","TRUE","FALSE","(method) ","utils","base","2.5.0"
"chooseCRANmirror","closure","function","TRUE","FALSE","(graphics = getOption(""menu.graphics"")) ","utils","base","2.5.0"
"citEntry","closure","function","TRUE","FALSE","(entry, textVersion, header = NULL, footer = NULL, ...) ","utils","base","2.5.0"
"citFooter","closure","function","TRUE","FALSE","(...) ","utils","base","2.5.0"
"citHeader","closure","function","TRUE","FALSE","(...) ","utils","base","2.5.0"
"citation","closure","function","TRUE","FALSE","(package = ""base"", lib.loc = NULL) ","utils","base","2.5.0"
"close.socket","closure","function","TRUE","FALSE","(socket, ...) ","utils","base","2.5.0"
"combn","closure","function","TRUE","FALSE","(x, m, FUN = NULL, simplify = TRUE, ...) ","utils","base","2.5.0"
"compareVersion","closure","function","TRUE","FALSE","(a, b) ","utils","base","2.5.0"
"contrib.url","closure","function","TRUE","FALSE","(repos, type = getOption(""pkgType"")) ","utils","base","2.5.0"
"count.fields","closure","function","TRUE","FALSE","(file, sep = """", quote = ""\""'"", skip = 0, blank.lines.skip = TRUE,     comment.char = ""#"") ","utils","base","2.5.0"
"data","closure","function","TRUE","FALSE","(..., list = character(0), package = NULL, lib.loc = NULL,     verbose = getOption(""verbose""), envir = .GlobalEnv) ","utils","base","2.5.0"
"data.entry","closure","function","TRUE","FALSE","(..., Modes = NULL, Names = NULL) ","utils","base","2.5.0"
"dataentry","closure","function","TRUE","FALSE","(data, modes) ","utils","base","2.5.0"
"de","closure","function","TRUE","FALSE","(..., Modes = list(), Names = NULL) ","utils","base","2.5.0"
"de.ncols","closure","function","TRUE","FALSE","(inlist) ","utils","base","2.5.0"
"de.restore","closure","function","TRUE","FALSE","(inlist, ncols, coltypes, argnames, args) ","utils","base","2.5.0"
"de.setup","closure","function","TRUE","FALSE","(ilist, list.names, incols) ","utils","base","2.5.0"
"debugger","closure","function","TRUE","FALSE","(dump = last.dump) ","utils","base","2.5.0"
"demo","closure","function","TRUE","FALSE","(topic, package = NULL, lib.loc = NULL, character.only = FALSE,     verbose = getOption(""verbose"")) ","utils","base","2.5.0"
"download.file","closure","function","TRUE","FALSE","(url, destfile, method, quiet = FALSE, mode = ""w"", cacheOK = TRUE) ","utils","base","2.5.0"
"download.packages","closure","function","TRUE","FALSE","(pkgs, destdir, available = NULL, repos = getOption(""repos""),     contriburl = contrib.url(repos, type), method, type = getOption(""pkgType"")) ","utils","base","2.5.0"
"dump.frames","closure","function","TRUE","FALSE","(dumpto = ""last.dump"", to.file = FALSE) ","utils","base","2.5.0"
"edit","closure","function","TRUE","FALSE","(name, ...) ","utils","base","2.5.0"
"emacs","closure","function","TRUE","FALSE","(name = NULL, file = """") ","utils","base","2.5.0"
"example","closure","function","TRUE","FALSE","(topic, package = NULL, lib.loc = NULL, local = FALSE,     echo = TRUE, verbose = getOption(""verbose""), setRNG = FALSE,     ask = getOption(""example.ask""), prompt.prefix = abbreviate(topic,         6)) ","utils","base","2.5.0"
"file.edit","closure","function","TRUE","FALSE","(..., title = file, editor = getOption(""editor"")) ","utils","base","2.5.0"
"file_test","closure","function","TRUE","FALSE","(op, x, y) ","utils","base","2.5.0"
"find","closure","function","TRUE","FALSE","(what, mode = ""any"", numeric. = FALSE, simple.words = TRUE) ","utils","base","2.5.0"
"fix","closure","function","TRUE","FALSE","(x, ...) ","utils","base","2.5.0"
"fixInNamespace","closure","function","TRUE","FALSE","(x, ns, pos = -1, envir = as.environment(pos), ...) ","utils","base","2.5.0"
"flush.console","closure","function","TRUE","FALSE","() ","utils","base","2.5.0"
"formatOL","closure","function","TRUE","FALSE","(x, type = ""arabic"", offset = 0, start = 1, width = 0.9 *     getOption(""width"")) ","utils","base","2.5.0"
"formatUL","closure","function","TRUE","FALSE","(x, label = ""*"", offset = 0, width = 0.9 * getOption(""width"")) ","utils","base","2.5.0"
"getAnywhere","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"getFromNamespace","closure","function","TRUE","FALSE","(x, ns, pos = -1, envir = as.environment(pos)) ","utils","base","2.5.0"
"getS3method","closure","function","TRUE","FALSE","(f, class, optional = FALSE) ","utils","base","2.5.0"
"glob2rx","closure","function","TRUE","FALSE","(pattern, trim.head = FALSE, trim.tail = TRUE) ","utils","base","2.5.0"
"head","closure","function","TRUE","FALSE","(x, ...) ","utils","base","2.5.0"
"head.matrix","closure","function","TRUE","FALSE","(x, n = 6, ...) ","utils","base","2.5.0"
"help","closure","function","TRUE","FALSE","(topic, offline = FALSE, package = NULL, lib.loc = NULL,     verbose = getOption(""verbose""), try.all.packages = getOption(""help.try.all.packages""),     chmhelp = getOption(""chmhelp""), htmlhelp = getOption(""htmlhelp""),     pager = getOption(""pager"")) ","utils","base","2.5.0"
"help.search","closure","function","TRUE","FALSE","(pattern, fields = c(""alias"", ""concept"", ""title""), apropos,     keyword, whatis, ignore.case = TRUE, package = NULL, lib.loc = NULL,     help.db = getOption(""help.db""), verbose = getOption(""verbose""),     rebuild = FALSE, agrep = NULL) ","utils","base","2.5.0"
"help.start","closure","function","TRUE","FALSE","(gui = ""irrelevant"", browser = getOption(""browser""),     remote = NULL) ","utils","base","2.5.0"
"history","closure","function","TRUE","FALSE","(max.show = 25, reverse = FALSE, pattern, ...) ","utils","base","2.5.0"
"index.search","closure","function","TRUE","FALSE","(topic, path, file = ""AnIndex"", type = ""help"") ","utils","base","2.5.0"
"install.packages","closure","function","TRUE","FALSE","(pkgs, lib, repos = getOption(""repos""), contriburl = contrib.url(repos,     type), method, available = NULL, destdir = NULL, installWithVers = FALSE,     dependencies = NA, type = getOption(""pkgType""), configure.args = character(0),     clean = FALSE) ","utils","base","2.5.0"
"installed.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, priority = NULL, noCache = FALSE, fields = NULL) ","utils","base","2.5.0"
"limitedLabels","closure","function","TRUE","FALSE","(value, maxwidth = getOption(""width"") - 5) ","utils","base","2.5.0"
"loadhistory","closure","function","TRUE","FALSE","(file = "".Rhistory"") ","utils","base","2.5.0"
"localeToCharset","closure","function","TRUE","FALSE","(locale = Sys.getlocale(""LC_CTYPE"")) ","utils","base","2.5.0"
"ls.str","closure","function","TRUE","FALSE","(pos = 1, pattern, ..., envir = as.environment(pos),     mode = ""any"") ","utils","base","2.5.0"
"lsf.str","closure","function","TRUE","FALSE","(pos = 1, ..., envir = as.environment(pos)) ","utils","base","2.5.0"
"make.packages.html","closure","function","TRUE","FALSE","(lib.loc = .libPaths()) ","utils","base","2.5.0"
"make.socket","closure","function","TRUE","FALSE","(host = ""localhost"", port, fail = TRUE, server = FALSE) ","utils","base","2.5.0"
"makeRweaveLatexCodeRunner","closure","function","TRUE","FALSE","(evalFunc = RweaveEvalWithOpt) ","utils","base","2.5.0"
"memory.limit","closure","function","TRUE","FALSE","(size = NA) ","utils","base","2.5.0"
"memory.size","closure","function","TRUE","FALSE","(max = FALSE) ","utils","base","2.5.0"
"menu","closure","function","TRUE","FALSE","(choices, graphics = FALSE, title = """") ","utils","base","2.5.0"
"methods","closure","function","TRUE","FALSE","(generic.function, class) ","utils","base","2.5.0"
"mirror2html","closure","function","TRUE","FALSE","(mirrors = NULL, file = ""mirrors.html"", head = ""mirrors-head.html"",     foot = ""mirrors-foot.html"") ","utils","base","2.5.0"
"modifyList","closure","function","TRUE","FALSE","(x, val) ","utils","base","2.5.0"
"new.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, repos = getOption(""repos""), contriburl = contrib.url(repos,     type), method, available = NULL, ask = FALSE, ..., type = getOption(""pkgType"")) ","utils","base","2.5.0"
"normalizePath","closure","function","TRUE","FALSE","(path) ","utils","base","2.5.0"
"nsl","closure","function","TRUE","FALSE","(hostname) ","utils","base","2.5.0"
"object.size","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"old.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, repos = getOption(""repos""), contriburl = contrib.url(repos),     method, available = NULL, checkBuilt = FALSE) ","utils","base","2.5.0"
"package.contents","closure","function","TRUE","FALSE","(pkg, lib.loc = NULL) ","utils","base","2.5.0"
"package.skeleton","closure","function","TRUE","FALSE","(name = ""anRpackage"", list, environment = .GlobalEnv,     path = ""."", force = FALSE, namespace = FALSE, code_files = character()) ","utils","base","2.5.0"
"packageDescription","closure","function","TRUE","FALSE","(pkg, lib.loc = NULL, fields = NULL, drop = TRUE, encoding = """") ","utils","base","2.5.0"
"packageStatus","closure","function","TRUE","FALSE","(lib.loc = NULL, repositories = NULL, method, type = getOption(""pkgType"")) ","utils","base","2.5.0"
"page","closure","function","TRUE","FALSE","(x, method = c(""dput"", ""print""), ...) ","utils","base","2.5.0"
"person","closure","function","TRUE","FALSE","(first = """", last = """", middle = """", email = """") ","utils","base","2.5.0"
"personList","closure","function","TRUE","FALSE","(...) ","utils","base","2.5.0"
"pico","closure","function","TRUE","FALSE","(name = NULL, file = """") ","utils","base","2.5.0"
"prompt","closure","function","TRUE","FALSE","(object, filename = NULL, name = NULL, ...) ","utils","base","2.5.0"
"promptData","closure","function","TRUE","FALSE","(object, filename = NULL, name = NULL) ","utils","base","2.5.0"
"promptPackage","closure","function","TRUE","FALSE","(package, lib.loc = NULL, filename = NULL, name = NULL,     final = FALSE) ","utils","base","2.5.0"
"read.DIF","closure","function","TRUE","FALSE","(file, header = FALSE, dec = ""."", row.names, col.names,     as.is = !stringsAsFactors, na.strings = ""NA"", colClasses = NA,     nrows = -1, skip = 0, check.names = TRUE, blank.lines.skip = TRUE,     stringsAsFactors = default.stringsAsFactors()) ","utils","base","2.5.0"
"read.csv","closure","function","TRUE","FALSE","(file, header = TRUE, sep = "","", quote = ""\"""", dec = ""."",     fill = TRUE, comment.char = """", ...) ","utils","base","2.5.0"
"read.csv2","closure","function","TRUE","FALSE","(file, header = TRUE, sep = "";"", quote = ""\"""", dec = "","",     fill = TRUE, comment.char = """", ...) ","utils","base","2.5.0"
"read.delim","closure","function","TRUE","FALSE","(file, header = TRUE, sep = ""\t"", quote = ""\"""", dec = ""."",     fill = TRUE, comment.char = """", ...) ","utils","base","2.5.0"
"read.delim2","closure","function","TRUE","FALSE","(file, header = TRUE, sep = ""\t"", quote = ""\"""", dec = "","",     fill = TRUE, comment.char = """", ...) ","utils","base","2.5.0"
"read.fortran","closure","function","TRUE","FALSE","(file, format, ..., as.is = TRUE, colClasses = NA) ","utils","base","2.5.0"
"read.fwf","closure","function","TRUE","FALSE","(file, widths, header = FALSE, sep = ""\t"", as.is = FALSE,     skip = 0, row.names, col.names, n = -1, buffersize = 2000,     ...) ","utils","base","2.5.0"
"read.socket","closure","function","TRUE","FALSE","(socket, maxlen = 256, loop = FALSE) ","utils","base","2.5.0"
"read.table","closure","function","TRUE","FALSE","(file, header = FALSE, sep = """", quote = ""\""'"", dec = ""."",     row.names, col.names, as.is = !stringsAsFactors, na.strings = ""NA"",     colClasses = NA, nrows = -1, skip = 0, check.names = TRUE,     fill = !blank.lines.skip, strip.white = FALSE, blank.lines.skip = TRUE,     comment.char = ""#"", allowEscapes = FALSE, flush = FALSE,     stringsAsFactors = default.stringsAsFactors(), encoding = ""unknown"") ","utils","base","2.5.0"
"readCitationFile","closure","function","TRUE","FALSE","(file) ","utils","base","2.5.0"
"readNEWS","closure","function","TRUE","FALSE","(file = file.path(R.home(), ""NEWS""), trace = FALSE,     chop = c(""first"", ""1"", ""par1"", ""keepAll"")) ","utils","base","2.5.0"
"recover","closure","function","TRUE","FALSE","() ","utils","base","2.5.0"
"remove.packages","closure","function","TRUE","FALSE","(pkgs, lib, version) ","utils","base","2.5.0"
"savehistory","closure","function","TRUE","FALSE","(file = "".Rhistory"") ","utils","base","2.5.0"
"select.list","closure","function","TRUE","FALSE","(list, preselect = NULL, multiple = FALSE, title = NULL) ","utils","base","2.5.0"
"sessionInfo","closure","function","TRUE","FALSE","(package = NULL) ","utils","base","2.5.0"
"setRepositories","closure","function","TRUE","FALSE","(graphics = getOption(""menu.graphics"")) ","utils","base","2.5.0"
"stack","closure","function","TRUE","FALSE","(x, ...) ","utils","base","2.5.0"
"str","closure","function","TRUE","FALSE","(object, ...) ","utils","base","2.5.0"
"strOptions","closure","function","TRUE","FALSE","(strict.width = ""no"", digits.d = 3, vec.len = 4) ","utils","base","2.5.0"
"summaryRprof","closure","function","TRUE","FALSE","(filename = ""Rprof.out"", chunksize = 5000, memory = c(""none"",     ""both"", ""tseries"", ""stats""), index = 2, diff = TRUE, exclude = NULL) ","utils","base","2.5.0"
"tail","closure","function","TRUE","FALSE","(x, ...) ","utils","base","2.5.0"
"tail.matrix","closure","function","TRUE","FALSE","(x, n = 6, addrownums = TRUE, ...) ","utils","base","2.5.0"
"timestamp","closure","function","TRUE","FALSE","(stamp = date(), prefix = ""##------ "", suffix = "" ------##"",     quiet = FALSE) ","utils","base","2.5.0"
"toBibtex","closure","function","TRUE","FALSE","(object, ...) ","utils","base","2.5.0"
"toLatex","closure","function","TRUE","FALSE","(object, ...) ","utils","base","2.5.0"
"type.convert","closure","function","TRUE","FALSE","(x, na.strings = ""NA"", as.is = FALSE, dec = ""."") ","utils","base","2.5.0"
"unstack","closure","function","TRUE","FALSE","(x, ...) ","utils","base","2.5.0"
"update.packageStatus","closure","function","TRUE","FALSE","(object, lib.loc = levels(object$inst$LibPath), repositories = levels(object$avail$Repository),     ...) ","utils","base","2.5.0"
"update.packages","closure","function","TRUE","FALSE","(lib.loc = NULL, repos = getOption(""repos""), contriburl = contrib.url(repos,     type), method, instlib = NULL, ask = TRUE, available = NULL,     ..., checkBuilt = FALSE, type = getOption(""pkgType"")) ","utils","base","2.5.0"
"upgrade","closure","function","TRUE","FALSE","(object, ...) ","utils","base","2.5.0"
"url.show","closure","function","TRUE","FALSE","(url, title = url, file = tempfile(), delete.file = TRUE,     method, ...) ","utils","base","2.5.0"
"vi","closure","function","TRUE","FALSE","(name = NULL, file = """") ","utils","base","2.5.0"
"vignette","closure","function","TRUE","FALSE","(topic, package = NULL, lib.loc = NULL) ","utils","base","2.5.0"
"withVisible","closure","function","TRUE","FALSE","(x) ","utils","base","2.5.0"
"write.csv","closure","function","TRUE","FALSE","(...) ","utils","base","2.5.0"
"write.csv2","closure","function","TRUE","FALSE","(...) ","utils","base","2.5.0"
"write.socket","closure","function","TRUE","FALSE","(socket, string) ","utils","base","2.5.0"
"write.table","closure","function","TRUE","FALSE","(x, file = """", append = FALSE, quote = TRUE, sep = "" "",     eol = ""\n"", na = ""NA"", dec = ""."", row.names = TRUE, col.names = TRUE,     qmethod = c(""escape"", ""double"")) ","utils","base","2.5.0"
"wsbrowser","closure","function","TRUE","FALSE","(IDS, IsRoot, IsContainer, ItemsPerContainer, ParentID,     NAMES, TYPES, DIMS, expanded = TRUE, kind = ""HTML"", main = ""R Workspace"",     properties = list(), browser = getOption(""browser"")) ","utils","base","2.5.0"
"xedit","closure","function","TRUE","FALSE","(name = NULL, file = """") ","utils","base","2.5.0"
"xemacs","closure","function","TRUE","FALSE","(name = NULL, file = """") ","utils","base","2.5.0"
"zip.file.extract","closure","function","TRUE","FALSE","(file, zipname = ""R.zip"", unzip = getOption(""unzip"")) ","utils","base","2.5.0"
