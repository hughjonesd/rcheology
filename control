#!/usr/bin/env Rscript

library(magrittr)


CONTAINERS  <- list(
        rcheology = "rch_c", 
        rch_r2    = "rch_r2_c", 
        rch_r2s   = "rch_r2s_c",
        rch_r3.5  = "rch_r3.5_c"
      )
DOCKERFILES <- list(
        rcheology = "Dockerfile", 
        rch_r2    = "Dockerfile-R2", 
        rch_r2s   = "Dockerfile-R2-sarge",
        rch_r3.5  = "Dockerfile-R3.5"
      )


# build images
build <- function(containers = CONTAINERS, no_cache = FALSE) {
  for (image in names(containers)) {
    dockerfile <- DOCKERFILES[[image]]
    system2("docker", c("build", if (no_cache) "--no-cache" else NULL,  "-t", image, "-f", dockerfile, "."))
  }
}


# run images
run <- function(containers = CONTAINERS, versions) {
  for (image in names(containers)) {
    args <- c("run", "--name", containers[[image]])
    if (! missing(versions) && ! is.null(versions)) args <- c(args, "-e", paste0("MYVERSIONS=", versions))
    args <- c(args, image)
    cat(args)
    system2("docker", args)
  }
}


# get data out
gather <- function (containers = CONTAINERS) {
  for (cont in containers) {
    system2("docker", c("cp", paste0(cont, ":", "/rcheology/docker-data/."), "docker-data"))
  }  
}


# write R file
write <- function (to_package = FALSE) {
  rcheology <- list.files(pattern="*.csv", path = "docker-data", full.names = TRUE) %>% 
    purrr::map_df(~readr::read_csv(., col_types = "ccclccc")) 
  
  rcheology <- as.data.frame(rcheology)
  cat("Dimensions:", dim(rcheology), "\n")
  cat("First rows:\n")
  head(rcheology)
  if (to_package) usethis::use_data(rcheology, overwrite = TRUE)
}


# clean up containers
clean <- function(containers = CONTAINERS) {
  for (cont in containers) {
    system2("docker", c("container", "rm", cont))
  }
}


# main:

myargs = commandArgs(trailingOnly=TRUE)
if (length(myargs) == 0) myargs <- c("build", "run", "gather", "write")
no_cache <- "--no-cache" %in% myargs
has_versions <- match("--versions", myargs)
versions <- if (! is.na(has_versions)) strsplit(myargs[has_versions + 1], ",", fixed = TRUE)[[1]]

if (any(names(CONTAINERS) %in% myargs)) {
  containers <- CONTAINERS[ intersect(myargs, names(CONTAINERS)) ]
} else {
  containers <- CONTAINERS
}

if ("--help" %in% myargs) {
  cat("\nUSAGE: control [--no-cache] [--versions x,y,z] [CMD] [IMAGES]\n\n",
          "--no-cache: passed to docker build\n",
          "--versions: passed to docker run to determine which R versions to test\n",
          "CMD:\n",
          "build: build Dockerfiles to images\n",
          "run: run images to install R versions and list objects\n",
          "gather: gather csv files from containers\n",
          "write: write csv to package\n",
          "clean: delete containers\n\n",
          "IMAGES:\n",
          paste(names(CONTAINERS), collapse = "\n "),
          "\n\n Default: all of them\n\n"
        )
  quit("no")
}

myargs <- intersect(myargs, c("build", "run", "gather", "write", "clean"))
if (length(myargs) != 1) stop("Please specify exactly one of build/run/gather/write")
if ("build"  %in% myargs) build(containers, no_cache)
if ("run"    %in% myargs) run(containers, versions)
if ("gather" %in% myargs) gather(containers)
if ("write"  %in% myargs) write(to_package = TRUE)
if ("clean"  %in% myargs) clean(containers)

